{
  "tasks": {
    "build": {
      "name": "build",
      "steps": [
        {
          "spawn": "default"
        },
        {
          "spawn": "fmt"
        },
        {
          "exec": "yarn workspaces run build"
        }
      ]
    },
    "clobber": {
      "name": "clobber",
      "description": "hard resets to HEAD of origin and cleans the local repo",
      "env": {
        "BRANCH": "$(git branch --show-current)"
      },
      "steps": [
        {
          "exec": "git checkout -b scratch",
          "name": "save current HEAD in \"scratch\" branch"
        },
        {
          "exec": "git checkout $BRANCH"
        },
        {
          "exec": "git fetch origin",
          "name": "fetch latest changes from origin"
        },
        {
          "exec": "git reset --hard origin/$BRANCH",
          "name": "hard reset to origin commit"
        },
        {
          "exec": "git clean -fdx",
          "name": "clean all untracked files"
        },
        {
          "say": "ready to rock! (unpushed commits are under the \"scratch\" branch)"
        }
      ],
      "condition": "git diff --exit-code > /dev/null"
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "exec": "yarn workspaces run compile"
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "ts-node --project tsconfig.dev.json .projenrc.ts"
        }
      ]
    },
    "fmt": {
      "name": "fmt",
      "steps": [
        {
          "exec": "eslint --ext .ts --fix --no-error-on-unmatched-pattern projenrc .projenrc.ts"
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "steps": [
        {
          "exec": "yarn install --check-files"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install project dependencies using frozen lockfile",
      "steps": [
        {
          "exec": "yarn install --check-files --frozen-lockfile"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package",
      "steps": [
        {
          "exec": "yarn workspaces run package"
        }
      ]
    },
    "post-upgrade": {
      "name": "post-upgrade",
      "description": "Runs after upgrading dependencies"
    },
    "run": {
      "name": "run",
      "steps": [
        {
          "exec": "yarn workspaces run",
          "receiveArgs": true
        }
      ]
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "yarn workspaces run test"
        }
      ]
    },
    "update-source:cfn-schema": {
      "name": "update-source:cfn-schema",
      "steps": [
        {
          "exec": "node ./scripts/download.task.js https://schema.cloudformation.us-east-1.amazonaws.com/CloudformationSchema.zip sources/CloudFormationSchema/us-east-1 --extract"
        },
        {
          "exec": "node ./scripts/download.task.js https://schema.cloudformation.us-east-2.amazonaws.com/CloudformationSchema.zip sources/CloudFormationSchema/us-east-2 --extract"
        },
        {
          "exec": "node ./scripts/download.task.js https://schema.cloudformation.us-west-2.amazonaws.com/CloudformationSchema.zip sources/CloudFormationSchema/us-west-2 --extract"
        }
      ]
    },
    "update-source:documentation": {
      "name": "update-source:documentation",
      "steps": [
        {
          "exec": "aws s3 cp s3://230541556993-cfn-docs/cfn-docs.json sources/CloudFormationDocumentation/CloudFormationDocumentation.json"
        }
      ]
    },
    "update-source:resource-spec": {
      "name": "update-source:resource-spec",
      "steps": [
        {
          "exec": "node ./scripts/download.task.js https://d1uauaxba7bl26.cloudfront.net/latest/gzip/CloudFormationResourceSpecification.json sources/CloudFormationResourceSpecification/us-east-1/CloudFormationResourceSpecification.json"
        }
      ]
    },
    "update-source:sam": {
      "name": "update-source:sam",
      "steps": [
        {
          "exec": "node ./scripts/download.task.js https://raw.githubusercontent.com/awslabs/goformation/master/schema/sam.schema.json sources/SAMSpec/sam.schema.json"
        }
      ]
    },
    "update-source:stateful-resources": {
      "name": "update-source:stateful-resources",
      "steps": [
        {
          "exec": "node ./scripts/download.task.js https://raw.githubusercontent.com/aws-cloudformation/cfn-lint/main/src/cfnlint/data/AdditionalSpecs/StatefulResources.json sources/StatefulResources/StatefulResources.json"
        }
      ]
    },
    "update-sources:all": {
      "name": "update-sources:all",
      "steps": [
        {
          "spawn": "update-source:documentation"
        },
        {
          "spawn": "update-source:resource-spec"
        },
        {
          "spawn": "update-source:cfn-schema"
        },
        {
          "spawn": "update-source:sam"
        },
        {
          "spawn": "update-source:stateful-resources"
        }
      ]
    },
    "upgrade": {
      "name": "upgrade",
      "description": "Upgrade dependencies in all workspaces",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "yarn upgrade npm-check-updates"
        },
        {
          "exec": "npm-check-updates --dep=dev,optional,peer,prod,bundle --upgrade --target=minor"
        },
        {
          "exec": "yarn workspaces run check-for-updates"
        },
        {
          "exec": "yarn install --check-files"
        },
        {
          "exec": "yarn upgrade"
        },
        {
          "spawn": "default"
        },
        {
          "spawn": "post-upgrade"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(npx -c \"node -e \\\"console.log(process.env.PATH)\\\"\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.ts and run \"npx projen\"."
}

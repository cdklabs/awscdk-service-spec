// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AWS::ApiGateway::RestApi 1`] = `
{
  "augmentations": undefined,
  "metrics": "/* eslint-disable prettier/prettier,max-len */
export interface MetricWithDims<D> {
  readonly namespace: string;

  readonly metricName: string;

  readonly statistic: string;

  readonly dimensionsMap: D;
}

export class ApiGatewayMetrics {
  public static _4XxErrorSum(dimensions: { ApiName: string; Stage: string; }): MetricWithDims<{ ApiName: string; Stage: string; }>;

  public static _4XxErrorSum(dimensions: { ApiName: string; }): MetricWithDims<{ ApiName: string; }>;

  public static _4XxErrorSum(dimensions: { ApiName: string; Method: string; Resource: string; Stage: string; }): MetricWithDims<{ ApiName: string; Method: string; Resource: string; Stage: string; }>;

  public static _4XxErrorSum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/ApiGateway",
      "metricName": "4XXError",
      "dimensionsMap": dimensions,
      "statistic": "Sum"
    };
  }

  public static _5XxErrorSum(dimensions: { ApiName: string; Stage: string; }): MetricWithDims<{ ApiName: string; Stage: string; }>;

  public static _5XxErrorSum(dimensions: { ApiName: string; }): MetricWithDims<{ ApiName: string; }>;

  public static _5XxErrorSum(dimensions: { ApiName: string; Method: string; Resource: string; Stage: string; }): MetricWithDims<{ ApiName: string; Method: string; Resource: string; Stage: string; }>;

  public static _5XxErrorSum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/ApiGateway",
      "metricName": "5XXError",
      "dimensionsMap": dimensions,
      "statistic": "Sum"
    };
  }

  public static cacheHitCountSum(dimensions: { ApiName: string; Stage: string; }): MetricWithDims<{ ApiName: string; Stage: string; }>;

  public static cacheHitCountSum(dimensions: { ApiName: string; }): MetricWithDims<{ ApiName: string; }>;

  public static cacheHitCountSum(dimensions: { ApiName: string; Method: string; Resource: string; Stage: string; }): MetricWithDims<{ ApiName: string; Method: string; Resource: string; Stage: string; }>;

  public static cacheHitCountSum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/ApiGateway",
      "metricName": "CacheHitCount",
      "dimensionsMap": dimensions,
      "statistic": "Sum"
    };
  }

  public static cacheMissCountSum(dimensions: { ApiName: string; Stage: string; }): MetricWithDims<{ ApiName: string; Stage: string; }>;

  public static cacheMissCountSum(dimensions: { ApiName: string; }): MetricWithDims<{ ApiName: string; }>;

  public static cacheMissCountSum(dimensions: { ApiName: string; Method: string; Resource: string; Stage: string; }): MetricWithDims<{ ApiName: string; Method: string; Resource: string; Stage: string; }>;

  public static cacheMissCountSum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/ApiGateway",
      "metricName": "CacheMissCount",
      "dimensionsMap": dimensions,
      "statistic": "Sum"
    };
  }

  public static countSum(dimensions: { ApiName: string; Stage: string; }): MetricWithDims<{ ApiName: string; Stage: string; }>;

  public static countSum(dimensions: { ApiName: string; }): MetricWithDims<{ ApiName: string; }>;

  public static countSum(dimensions: { ApiName: string; Method: string; Resource: string; Stage: string; }): MetricWithDims<{ ApiName: string; Method: string; Resource: string; Stage: string; }>;

  public static countSum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/ApiGateway",
      "metricName": "Count",
      "dimensionsMap": dimensions,
      "statistic": "Sum"
    };
  }

  public static integrationLatencyAverage(dimensions: { ApiName: string; Stage: string; }): MetricWithDims<{ ApiName: string; Stage: string; }>;

  public static integrationLatencyAverage(dimensions: { ApiName: string; }): MetricWithDims<{ ApiName: string; }>;

  public static integrationLatencyAverage(dimensions: { ApiName: string; Method: string; Resource: string; Stage: string; }): MetricWithDims<{ ApiName: string; Method: string; Resource: string; Stage: string; }>;

  public static integrationLatencyAverage(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/ApiGateway",
      "metricName": "IntegrationLatency",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static latencyAverage(dimensions: { ApiName: string; Stage: string; }): MetricWithDims<{ ApiName: string; Stage: string; }>;

  public static latencyAverage(dimensions: { ApiName: string; }): MetricWithDims<{ ApiName: string; }>;

  public static latencyAverage(dimensions: { ApiName: string; Method: string; Resource: string; Stage: string; }): MetricWithDims<{ ApiName: string; Method: string; Resource: string; Stage: string; }>;

  public static latencyAverage(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/ApiGateway",
      "metricName": "Latency",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }
}",
  "module": "/* eslint-disable prettier/prettier,max-len */
import * as cdk from "aws-cdk-lib";
import * as constructs from "constructs";
import * as cfn_parse from "aws-cdk-lib/core/lib/helpers-internal";

/**
 * The \`AWS::ApiGateway::RestApi\` resource creates a REST API.
 *
 * For more information, see [restapi:create](https://docs.aws.amazon.com/apigateway/latest/api/API_CreateRestApi.html) in the *Amazon API Gateway REST API Reference* .
 *
 * > On January 1, 2016, the Swagger Specification was donated to the [OpenAPI initiative](https://docs.aws.amazon.com/https://www.openapis.org/) , becoming the foundation of the OpenAPI Specification.
 *
 * @stability external
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html
 */
export class CfnRestApi extends cdk.CfnResource implements cdk.IInspectable, cdk.ITaggable {
  /**
   * The CloudFormation resource type name for this resource class.
   */
  public static readonly CFN_RESOURCE_TYPE_NAME: string = "AWS::ApiGateway::RestApi";

  /**
   * Build a CfnRestApi from CloudFormation properties
   *
   * A factory method that creates a new instance of this class from an object
   * containing the CloudFormation properties of this resource.
   * Used in the @aws-cdk/cloudformation-include module.
   *
   * @internal
   */
  public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnRestApi {
    resourceAttributes = resourceAttributes || {};
    const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);
    const propsResult = CfnRestApiPropsFromCloudFormation(resourceProperties);
    if (cdk.isResolvableObject(propsResult.value)) {
      throw new Error("Unexpected IResolvable");
    }
    const ret = new CfnRestApi(scope, id, propsResult.value);
    for (const [propKey, propVal] of Object.entries(propsResult.extraProperties)) {
      ret.addPropertyOverride(propKey, propVal);
    }
    options.parser.handleAttributes(ret, resourceAttributes, id);
    return ret;
  }

  /**
   * The string identifier of the associated RestApi.
   *
   * @cloudformationAttribute RestApiId
   */
  public readonly attrRestApiId: string;

  /**
   * The root resource ID for a \`RestApi\` resource, such as \`a0bc123d4e\` .
   *
   * @cloudformationAttribute RootResourceId
   */
  public readonly attrRootResourceId: string;

  /**
   * The source of the API key for metering requests according to a usage plan.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-apikeysourcetype
   */
  public apiKeySourceType?: string;

  /**
   * The list of binary media types supported by the RestApi.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-binarymediatypes
   */
  public binaryMediaTypes?: Array<string>;

  /**
   * An OpenAPI specification that defines a set of RESTful APIs in JSON format.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-body
   */
  public body?: any | cdk.IResolvable | string;

  /**
   * The Amazon Simple Storage Service (Amazon S3) location that points to an OpenAPI file, which defines a set of RESTful APIs in JSON or YAML format.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-bodys3location
   */
  public bodyS3Location?: cdk.IResolvable | CfnRestApi.S3LocationProperty;

  /**
   * The ID of the RestApi that you want to clone from.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-clonefrom
   */
  public cloneFrom?: string;

  /**
   * The description of the RestApi.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-description
   */
  public description?: string;

  /**
   * Specifies whether clients can invoke your API by using the default \`execute-api\` endpoint.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-disableexecuteapiendpoint
   */
  public disableExecuteApiEndpoint?: boolean | cdk.IResolvable;

  /**
   * A list of the endpoint types of the API.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-endpointconfiguration
   */
  public endpointConfiguration?: CfnRestApi.EndpointConfigurationProperty | cdk.IResolvable;

  /**
   * A query parameter to indicate whether to rollback the API update ( \`true\` ) or not ( \`false\` ) when a warning is encountered.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-failonwarnings
   */
  public failOnWarnings?: boolean | cdk.IResolvable;

  /**
   * A nullable integer that is used to enable compression (with non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable compression (with a null value) on an API.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-minimumcompressionsize
   */
  public minimumCompressionSize?: number;

  /**
   * This property applies only when you use OpenAPI to define your REST API.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-mode
   */
  public mode?: string;

  /**
   * The name of the RestApi.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-name
   */
  public name?: string;

  /**
   * Custom header parameters as part of the request.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-parameters
   */
  public parameters?: cdk.IResolvable | Record<string, string> | string;

  /**
   * A policy document that contains the permissions for the \`RestApi\` resource.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-policy
   */
  public policy?: any | cdk.IResolvable | string;

  /**
   * Tag Manager which manages the tags for this resource
   */
  public readonly tags: cdk.TagManager;

  /**
   * The key-value map of strings.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-tags
   */
  public tagsRaw?: Array<cdk.CfnTag>;

  /**
   * @param scope Scope in which this resource is defined
   * @param id Construct identifier for this resource (unique in its scope)
   * @param props Resource properties
   */
  public constructor(scope: constructs.Construct, id: string, props: CfnRestApiProps = {}) {
    super(scope, id, {
      "type": CfnRestApi.CFN_RESOURCE_TYPE_NAME,
      "properties": props
    });

    this.attrRestApiId = cdk.Token.asString(this.getAtt("RestApiId", cdk.ResolutionTypeHint.STRING));
    this.attrRootResourceId = cdk.Token.asString(this.getAtt("RootResourceId", cdk.ResolutionTypeHint.STRING));
    this.apiKeySourceType = props.apiKeySourceType;
    this.binaryMediaTypes = props.binaryMediaTypes;
    this.body = props.body;
    this.bodyS3Location = props.bodyS3Location;
    this.cloneFrom = props.cloneFrom;
    this.description = props.description;
    this.disableExecuteApiEndpoint = props.disableExecuteApiEndpoint;
    this.endpointConfiguration = props.endpointConfiguration;
    this.failOnWarnings = props.failOnWarnings;
    this.minimumCompressionSize = props.minimumCompressionSize;
    this.mode = props.mode;
    this.name = props.name;
    this.parameters = props.parameters;
    this.policy = props.policy;
    this.tags = new cdk.TagManager(cdk.TagType.STANDARD, "AWS::ApiGateway::RestApi", props.tags, {
      "tagPropertyName": "tags"
    });
    this.tagsRaw = props.tags;
  }

  protected get cfnProperties(): Record<string, any> {
    return {
      "apiKeySourceType": this.apiKeySourceType,
      "binaryMediaTypes": this.binaryMediaTypes,
      "body": this.body,
      "bodyS3Location": this.bodyS3Location,
      "cloneFrom": this.cloneFrom,
      "description": this.description,
      "disableExecuteApiEndpoint": this.disableExecuteApiEndpoint,
      "endpointConfiguration": this.endpointConfiguration,
      "failOnWarnings": this.failOnWarnings,
      "minimumCompressionSize": this.minimumCompressionSize,
      "mode": this.mode,
      "name": this.name,
      "parameters": this.parameters,
      "policy": this.policy,
      "tags": this.tags.renderTags()
    };
  }

  /**
   * Examines the CloudFormation resource and discloses attributes
   *
   * @param inspector tree inspector to collect and process attributes
   */
  public inspect(inspector: cdk.TreeInspector): void {
    inspector.addAttribute("aws:cdk:cloudformation:type", CfnRestApi.CFN_RESOURCE_TYPE_NAME);
    inspector.addAttribute("aws:cdk:cloudformation:props", this.cfnProperties);
  }

  protected renderProperties(props: Record<string, any>): Record<string, any> {
    return convertCfnRestApiPropsToCloudFormation(props);
  }
}

export namespace CfnRestApi {
  /**
   * \`S3Location\` is a property of the [AWS::ApiGateway::RestApi](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html) resource that specifies the Amazon S3 location of a OpenAPI (formerly Swagger) file that defines a set of RESTful APIs in JSON or YAML.
   *
   * > On January 1, 2016, the Swagger Specification was donated to the [OpenAPI initiative](https://docs.aws.amazon.com/https://www.openapis.org/) , becoming the foundation of the OpenAPI Specification.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html
   */
  export interface S3LocationProperty {
    /**
     * The source of the API key for metering requests according to a usage plan.
     *
     * Valid values are: \`HEADER\` to read the API key from the \`X-API-Key\` header of a request. \`AUTHORIZER\` to read the API key from the \`UsageIdentifierKey\` from a custom authorizer.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-apikeysourcetype
     */
    readonly apiKeySourceType?: string;

    /**
     * The list of binary media types supported by the RestApi.
     *
     * By default, the RestApi supports only UTF-8-encoded text payloads.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-binarymediatypes
     */
    readonly binaryMediaTypes?: Array<string>;

    /**
     * An OpenAPI specification that defines a set of RESTful APIs in JSON format.
     *
     * For YAML templates, you can also provide the specification in YAML format.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-body
     */
    readonly body?: any | cdk.IResolvable | string;

    /**
     * The Amazon Simple Storage Service (Amazon S3) location that points to an OpenAPI file, which defines a set of RESTful APIs in JSON or YAML format.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-bodys3location
     */
    readonly bodyS3Location?: cdk.IResolvable | CfnRestApi.S3LocationProperty;

    /**
     * The ID of the RestApi that you want to clone from.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-clonefrom
     */
    readonly cloneFrom?: string;

    /**
     * The description of the RestApi.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-description
     */
    readonly description?: string;

    /**
     * Specifies whether clients can invoke your API by using the default \`execute-api\` endpoint.
     *
     * By default, clients can invoke your API with the default \`https://{api_id}.execute-api.{region}.amazonaws.com\` endpoint. To require that clients use a custom domain name to invoke your API, disable the default endpoint
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-disableexecuteapiendpoint
     */
    readonly disableExecuteApiEndpoint?: boolean | cdk.IResolvable;

    /**
     * A list of the endpoint types of the API.
     *
     * Use this property when creating an API. When importing an existing API, specify the endpoint configuration types using the \`Parameters\` property.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-endpointconfiguration
     */
    readonly endpointConfiguration?: CfnRestApi.EndpointConfigurationProperty | cdk.IResolvable;

    /**
     * A query parameter to indicate whether to rollback the API update ( \`true\` ) or not ( \`false\` ) when a warning is encountered.
     *
     * The default value is \`false\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-failonwarnings
     */
    readonly failOnWarnings?: boolean | cdk.IResolvable;

    /**
     * A nullable integer that is used to enable compression (with non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable compression (with a null value) on an API.
     *
     * When compression is enabled, compression or decompression is not applied on the payload if the payload size is smaller than this value. Setting it to zero allows compression for any payload size.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-minimumcompressionsize
     */
    readonly minimumCompressionSize?: number;

    /**
     * This property applies only when you use OpenAPI to define your REST API.
     *
     * The \`Mode\` determines how API Gateway handles resource updates.
     *
     * Valid values are \`overwrite\` or \`merge\` .
     *
     * For \`overwrite\` , the new API definition replaces the existing one. The existing API identifier remains unchanged.
     *
     * For \`merge\` , the new API definition is merged with the existing API.
     *
     * If you don't specify this property, a default value is chosen. For REST APIs created before March 29, 2021, the default is \`overwrite\` . For REST APIs created after March 29, 2021, the new API definition takes precedence, but any container types such as endpoint configurations and binary media types are merged with the existing API.
     *
     * Use the default mode to define top-level \`RestApi\` properties in addition to using OpenAPI. Generally, it's preferred to use API Gateway's OpenAPI extensions to model these properties.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-mode
     */
    readonly mode?: string;

    /**
     * The name of the RestApi.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-name
     */
    readonly name?: string;

    /**
     * Custom header parameters as part of the request.
     *
     * For example, to exclude DocumentationParts from an imported API, set \`ignore=documentation\` as a \`parameters\` value, as in the AWS CLI command of \`aws apigateway import-rest-api --parameters ignore=documentation --body 'file:///path/to/imported-api-body.json'\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-parameters
     */
    readonly parameters?: cdk.IResolvable | Record<string, string> | string;

    /**
     * A policy document that contains the permissions for the \`RestApi\` resource.
     *
     * To set the ARN for the policy, use the \`!Join\` intrinsic function with \`""\` as delimiter and values of \`"execute-api:/"\` and \`"*"\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-policy
     */
    readonly policy?: any | cdk.IResolvable | string;

    /**
     * The key-value map of strings.
     *
     * The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with \`aws:\` . The tag value can be up to 256 characters.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnRestApi.TagProperty> | cdk.IResolvable;
  }

  /**
   * The \`EndpointConfiguration\` property type specifies the endpoint types of a REST API.
   *
   * \`EndpointConfiguration\` is a property of the [AWS::ApiGateway::RestApi](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html) resource.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html
   */
  export interface EndpointConfigurationProperty {
    /**
     * The source of the API key for metering requests according to a usage plan.
     *
     * Valid values are: \`HEADER\` to read the API key from the \`X-API-Key\` header of a request. \`AUTHORIZER\` to read the API key from the \`UsageIdentifierKey\` from a custom authorizer.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-apikeysourcetype
     */
    readonly apiKeySourceType?: string;

    /**
     * The list of binary media types supported by the RestApi.
     *
     * By default, the RestApi supports only UTF-8-encoded text payloads.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-binarymediatypes
     */
    readonly binaryMediaTypes?: Array<string>;

    /**
     * An OpenAPI specification that defines a set of RESTful APIs in JSON format.
     *
     * For YAML templates, you can also provide the specification in YAML format.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-body
     */
    readonly body?: any | cdk.IResolvable | string;

    /**
     * The Amazon Simple Storage Service (Amazon S3) location that points to an OpenAPI file, which defines a set of RESTful APIs in JSON or YAML format.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-bodys3location
     */
    readonly bodyS3Location?: cdk.IResolvable | CfnRestApi.S3LocationProperty;

    /**
     * The ID of the RestApi that you want to clone from.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-clonefrom
     */
    readonly cloneFrom?: string;

    /**
     * The description of the RestApi.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-description
     */
    readonly description?: string;

    /**
     * Specifies whether clients can invoke your API by using the default \`execute-api\` endpoint.
     *
     * By default, clients can invoke your API with the default \`https://{api_id}.execute-api.{region}.amazonaws.com\` endpoint. To require that clients use a custom domain name to invoke your API, disable the default endpoint
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-disableexecuteapiendpoint
     */
    readonly disableExecuteApiEndpoint?: boolean | cdk.IResolvable;

    /**
     * A list of the endpoint types of the API.
     *
     * Use this property when creating an API. When importing an existing API, specify the endpoint configuration types using the \`Parameters\` property.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-endpointconfiguration
     */
    readonly endpointConfiguration?: CfnRestApi.EndpointConfigurationProperty | cdk.IResolvable;

    /**
     * A query parameter to indicate whether to rollback the API update ( \`true\` ) or not ( \`false\` ) when a warning is encountered.
     *
     * The default value is \`false\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-failonwarnings
     */
    readonly failOnWarnings?: boolean | cdk.IResolvable;

    /**
     * A nullable integer that is used to enable compression (with non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable compression (with a null value) on an API.
     *
     * When compression is enabled, compression or decompression is not applied on the payload if the payload size is smaller than this value. Setting it to zero allows compression for any payload size.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-minimumcompressionsize
     */
    readonly minimumCompressionSize?: number;

    /**
     * This property applies only when you use OpenAPI to define your REST API.
     *
     * The \`Mode\` determines how API Gateway handles resource updates.
     *
     * Valid values are \`overwrite\` or \`merge\` .
     *
     * For \`overwrite\` , the new API definition replaces the existing one. The existing API identifier remains unchanged.
     *
     * For \`merge\` , the new API definition is merged with the existing API.
     *
     * If you don't specify this property, a default value is chosen. For REST APIs created before March 29, 2021, the default is \`overwrite\` . For REST APIs created after March 29, 2021, the new API definition takes precedence, but any container types such as endpoint configurations and binary media types are merged with the existing API.
     *
     * Use the default mode to define top-level \`RestApi\` properties in addition to using OpenAPI. Generally, it's preferred to use API Gateway's OpenAPI extensions to model these properties.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-mode
     */
    readonly mode?: string;

    /**
     * The name of the RestApi.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-name
     */
    readonly name?: string;

    /**
     * Custom header parameters as part of the request.
     *
     * For example, to exclude DocumentationParts from an imported API, set \`ignore=documentation\` as a \`parameters\` value, as in the AWS CLI command of \`aws apigateway import-rest-api --parameters ignore=documentation --body 'file:///path/to/imported-api-body.json'\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-parameters
     */
    readonly parameters?: cdk.IResolvable | Record<string, string> | string;

    /**
     * A policy document that contains the permissions for the \`RestApi\` resource.
     *
     * To set the ARN for the policy, use the \`!Join\` intrinsic function with \`""\` as delimiter and values of \`"execute-api:/"\` and \`"*"\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-policy
     */
    readonly policy?: any | cdk.IResolvable | string;

    /**
     * The key-value map of strings.
     *
     * The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with \`aws:\` . The tag value can be up to 256 characters.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnRestApi.TagProperty> | cdk.IResolvable;
  }

  /**
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html
   */
  export interface TagProperty {
    /**
     * The source of the API key for metering requests according to a usage plan.
     *
     * Valid values are: \`HEADER\` to read the API key from the \`X-API-Key\` header of a request. \`AUTHORIZER\` to read the API key from the \`UsageIdentifierKey\` from a custom authorizer.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-apikeysourcetype
     */
    readonly apiKeySourceType?: string;

    /**
     * The list of binary media types supported by the RestApi.
     *
     * By default, the RestApi supports only UTF-8-encoded text payloads.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-binarymediatypes
     */
    readonly binaryMediaTypes?: Array<string>;

    /**
     * An OpenAPI specification that defines a set of RESTful APIs in JSON format.
     *
     * For YAML templates, you can also provide the specification in YAML format.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-body
     */
    readonly body?: any | cdk.IResolvable | string;

    /**
     * The Amazon Simple Storage Service (Amazon S3) location that points to an OpenAPI file, which defines a set of RESTful APIs in JSON or YAML format.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-bodys3location
     */
    readonly bodyS3Location?: cdk.IResolvable | CfnRestApi.S3LocationProperty;

    /**
     * The ID of the RestApi that you want to clone from.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-clonefrom
     */
    readonly cloneFrom?: string;

    /**
     * The description of the RestApi.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-description
     */
    readonly description?: string;

    /**
     * Specifies whether clients can invoke your API by using the default \`execute-api\` endpoint.
     *
     * By default, clients can invoke your API with the default \`https://{api_id}.execute-api.{region}.amazonaws.com\` endpoint. To require that clients use a custom domain name to invoke your API, disable the default endpoint
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-disableexecuteapiendpoint
     */
    readonly disableExecuteApiEndpoint?: boolean | cdk.IResolvable;

    /**
     * A list of the endpoint types of the API.
     *
     * Use this property when creating an API. When importing an existing API, specify the endpoint configuration types using the \`Parameters\` property.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-endpointconfiguration
     */
    readonly endpointConfiguration?: CfnRestApi.EndpointConfigurationProperty | cdk.IResolvable;

    /**
     * A query parameter to indicate whether to rollback the API update ( \`true\` ) or not ( \`false\` ) when a warning is encountered.
     *
     * The default value is \`false\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-failonwarnings
     */
    readonly failOnWarnings?: boolean | cdk.IResolvable;

    /**
     * A nullable integer that is used to enable compression (with non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable compression (with a null value) on an API.
     *
     * When compression is enabled, compression or decompression is not applied on the payload if the payload size is smaller than this value. Setting it to zero allows compression for any payload size.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-minimumcompressionsize
     */
    readonly minimumCompressionSize?: number;

    /**
     * This property applies only when you use OpenAPI to define your REST API.
     *
     * The \`Mode\` determines how API Gateway handles resource updates.
     *
     * Valid values are \`overwrite\` or \`merge\` .
     *
     * For \`overwrite\` , the new API definition replaces the existing one. The existing API identifier remains unchanged.
     *
     * For \`merge\` , the new API definition is merged with the existing API.
     *
     * If you don't specify this property, a default value is chosen. For REST APIs created before March 29, 2021, the default is \`overwrite\` . For REST APIs created after March 29, 2021, the new API definition takes precedence, but any container types such as endpoint configurations and binary media types are merged with the existing API.
     *
     * Use the default mode to define top-level \`RestApi\` properties in addition to using OpenAPI. Generally, it's preferred to use API Gateway's OpenAPI extensions to model these properties.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-mode
     */
    readonly mode?: string;

    /**
     * The name of the RestApi.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-name
     */
    readonly name?: string;

    /**
     * Custom header parameters as part of the request.
     *
     * For example, to exclude DocumentationParts from an imported API, set \`ignore=documentation\` as a \`parameters\` value, as in the AWS CLI command of \`aws apigateway import-rest-api --parameters ignore=documentation --body 'file:///path/to/imported-api-body.json'\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-parameters
     */
    readonly parameters?: cdk.IResolvable | Record<string, string> | string;

    /**
     * A policy document that contains the permissions for the \`RestApi\` resource.
     *
     * To set the ARN for the policy, use the \`!Join\` intrinsic function with \`""\` as delimiter and values of \`"execute-api:/"\` and \`"*"\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-policy
     */
    readonly policy?: any | cdk.IResolvable | string;

    /**
     * The key-value map of strings.
     *
     * The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with \`aws:\` . The tag value can be up to 256 characters.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-tag.html#cfn-apigateway-restapi-tag-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnRestApi.TagProperty> | cdk.IResolvable;
  }
}

/**
 * Properties for defining a \`CfnRestApi\`
 *
 * @struct
 * @stability external
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html
 */
export interface CfnRestApiProps {
  /**
   * The source of the API key for metering requests according to a usage plan.
   *
   * Valid values are: \`HEADER\` to read the API key from the \`X-API-Key\` header of a request. \`AUTHORIZER\` to read the API key from the \`UsageIdentifierKey\` from a custom authorizer.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-apikeysourcetype
   */
  readonly apiKeySourceType?: string;

  /**
   * The list of binary media types supported by the RestApi.
   *
   * By default, the RestApi supports only UTF-8-encoded text payloads.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-binarymediatypes
   */
  readonly binaryMediaTypes?: Array<string>;

  /**
   * An OpenAPI specification that defines a set of RESTful APIs in JSON format.
   *
   * For YAML templates, you can also provide the specification in YAML format.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-body
   */
  readonly body?: any | cdk.IResolvable | string;

  /**
   * The Amazon Simple Storage Service (Amazon S3) location that points to an OpenAPI file, which defines a set of RESTful APIs in JSON or YAML format.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-bodys3location
   */
  readonly bodyS3Location?: cdk.IResolvable | CfnRestApi.S3LocationProperty;

  /**
   * The ID of the RestApi that you want to clone from.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-clonefrom
   */
  readonly cloneFrom?: string;

  /**
   * The description of the RestApi.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-description
   */
  readonly description?: string;

  /**
   * Specifies whether clients can invoke your API by using the default \`execute-api\` endpoint.
   *
   * By default, clients can invoke your API with the default \`https://{api_id}.execute-api.{region}.amazonaws.com\` endpoint. To require that clients use a custom domain name to invoke your API, disable the default endpoint
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-disableexecuteapiendpoint
   */
  readonly disableExecuteApiEndpoint?: boolean | cdk.IResolvable;

  /**
   * A list of the endpoint types of the API.
   *
   * Use this property when creating an API. When importing an existing API, specify the endpoint configuration types using the \`Parameters\` property.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-endpointconfiguration
   */
  readonly endpointConfiguration?: CfnRestApi.EndpointConfigurationProperty | cdk.IResolvable;

  /**
   * A query parameter to indicate whether to rollback the API update ( \`true\` ) or not ( \`false\` ) when a warning is encountered.
   *
   * The default value is \`false\` .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-failonwarnings
   */
  readonly failOnWarnings?: boolean | cdk.IResolvable;

  /**
   * A nullable integer that is used to enable compression (with non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable compression (with a null value) on an API.
   *
   * When compression is enabled, compression or decompression is not applied on the payload if the payload size is smaller than this value. Setting it to zero allows compression for any payload size.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-minimumcompressionsize
   */
  readonly minimumCompressionSize?: number;

  /**
   * This property applies only when you use OpenAPI to define your REST API.
   *
   * The \`Mode\` determines how API Gateway handles resource updates.
   *
   * Valid values are \`overwrite\` or \`merge\` .
   *
   * For \`overwrite\` , the new API definition replaces the existing one. The existing API identifier remains unchanged.
   *
   * For \`merge\` , the new API definition is merged with the existing API.
   *
   * If you don't specify this property, a default value is chosen. For REST APIs created before March 29, 2021, the default is \`overwrite\` . For REST APIs created after March 29, 2021, the new API definition takes precedence, but any container types such as endpoint configurations and binary media types are merged with the existing API.
   *
   * Use the default mode to define top-level \`RestApi\` properties in addition to using OpenAPI. Generally, it's preferred to use API Gateway's OpenAPI extensions to model these properties.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-mode
   */
  readonly mode?: string;

  /**
   * The name of the RestApi.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-name
   */
  readonly name?: string;

  /**
   * Custom header parameters as part of the request.
   *
   * For example, to exclude DocumentationParts from an imported API, set \`ignore=documentation\` as a \`parameters\` value, as in the AWS CLI command of \`aws apigateway import-rest-api --parameters ignore=documentation --body 'file:///path/to/imported-api-body.json'\` .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-parameters
   */
  readonly parameters?: cdk.IResolvable | Record<string, string> | string;

  /**
   * A policy document that contains the permissions for the \`RestApi\` resource.
   *
   * To set the ARN for the policy, use the \`!Join\` intrinsic function with \`""\` as delimiter and values of \`"execute-api:/"\` and \`"*"\` .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-policy
   */
  readonly policy?: any | cdk.IResolvable | string;

  /**
   * The key-value map of strings.
   *
   * The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with \`aws:\` . The tag value can be up to 256 characters.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-tags
   */
  readonly tags?: Array<cdk.CfnTag>;
}

/**
 * Determine whether the given properties match those of a \`TagProperty\`
 *
 * @param properties - the TypeScript properties of a \`TagProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnRestApiTagPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("apiKeySourceType", cdk.validateString)(properties.apiKeySourceType));
  errors.collect(cdk.propertyValidator("binaryMediaTypes", cdk.listValidator(cdk.validateString))(properties.binaryMediaTypes));
  errors.collect(cdk.propertyValidator("body", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.body));
  errors.collect(cdk.propertyValidator("bodyS3Location", CfnRestApiS3LocationPropertyValidator)(properties.bodyS3Location));
  errors.collect(cdk.propertyValidator("cloneFrom", cdk.validateString)(properties.cloneFrom));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("disableExecuteApiEndpoint", cdk.validateBoolean)(properties.disableExecuteApiEndpoint));
  errors.collect(cdk.propertyValidator("endpointConfiguration", CfnRestApiEndpointConfigurationPropertyValidator)(properties.endpointConfiguration));
  errors.collect(cdk.propertyValidator("failOnWarnings", cdk.validateBoolean)(properties.failOnWarnings));
  errors.collect(cdk.propertyValidator("minimumCompressionSize", cdk.validateNumber)(properties.minimumCompressionSize));
  errors.collect(cdk.propertyValidator("mode", cdk.validateString)(properties.mode));
  errors.collect(cdk.propertyValidator("name", cdk.validateString)(properties.name));
  errors.collect(cdk.propertyValidator("parameters", cdk.unionValidator(cdk.hashValidator(cdk.validateString), cdk.validateString))(properties.parameters));
  errors.collect(cdk.propertyValidator("policy", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.policy));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnRestApiTagPropertyValidator))(properties.tags));
  return errors.wrap("supplied properties not correct for \\"TagProperty\\"");
}

// @ts-ignore TS6133
function convertCfnRestApiTagPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnRestApiTagPropertyValidator(properties).assertSuccess();
  return {
    "ApiKeySourceType": cdk.stringToCloudFormation(properties.apiKeySourceType),
    "BinaryMediaTypes": cdk.listMapper(cdk.stringToCloudFormation)(properties.binaryMediaTypes),
    "Body": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.body),
    "BodyS3Location": convertCfnRestApiS3LocationPropertyToCloudFormation(properties.bodyS3Location),
    "CloneFrom": cdk.stringToCloudFormation(properties.cloneFrom),
    "Description": cdk.stringToCloudFormation(properties.description),
    "DisableExecuteApiEndpoint": cdk.booleanToCloudFormation(properties.disableExecuteApiEndpoint),
    "EndpointConfiguration": convertCfnRestApiEndpointConfigurationPropertyToCloudFormation(properties.endpointConfiguration),
    "FailOnWarnings": cdk.booleanToCloudFormation(properties.failOnWarnings),
    "MinimumCompressionSize": cdk.numberToCloudFormation(properties.minimumCompressionSize),
    "Mode": cdk.stringToCloudFormation(properties.mode),
    "Name": cdk.stringToCloudFormation(properties.name),
    "Parameters": cdk.unionMapper([cdk.hashValidator(cdk.validateString), cdk.validateString], [cdk.hashMapper(cdk.stringToCloudFormation), cdk.stringToCloudFormation])(properties.parameters),
    "Policy": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.policy),
    "Tags": cdk.listMapper(convertCfnRestApiTagPropertyToCloudFormation)(properties.tags)
  };
}

// @ts-ignore TS6133
function CfnRestApiTagPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnRestApi.TagProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRestApi.TagProperty>();
  ret.addPropertyResult("apiKeySourceType", "ApiKeySourceType", (properties.ApiKeySourceType != null ? cfn_parse.FromCloudFormation.getString(properties.ApiKeySourceType) : undefined));
  ret.addPropertyResult("binaryMediaTypes", "BinaryMediaTypes", (properties.BinaryMediaTypes != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.BinaryMediaTypes) : undefined));
  ret.addPropertyResult("body", "Body", (properties.Body != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.Body) : undefined));
  ret.addPropertyResult("bodyS3Location", "BodyS3Location", (properties.BodyS3Location != null ? CfnRestApiS3LocationPropertyFromCloudFormation(properties.BodyS3Location) : undefined));
  ret.addPropertyResult("cloneFrom", "CloneFrom", (properties.CloneFrom != null ? cfn_parse.FromCloudFormation.getString(properties.CloneFrom) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("disableExecuteApiEndpoint", "DisableExecuteApiEndpoint", (properties.DisableExecuteApiEndpoint != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DisableExecuteApiEndpoint) : undefined));
  ret.addPropertyResult("endpointConfiguration", "EndpointConfiguration", (properties.EndpointConfiguration != null ? CfnRestApiEndpointConfigurationPropertyFromCloudFormation(properties.EndpointConfiguration) : undefined));
  ret.addPropertyResult("failOnWarnings", "FailOnWarnings", (properties.FailOnWarnings != null ? cfn_parse.FromCloudFormation.getBoolean(properties.FailOnWarnings) : undefined));
  ret.addPropertyResult("minimumCompressionSize", "MinimumCompressionSize", (properties.MinimumCompressionSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MinimumCompressionSize) : undefined));
  ret.addPropertyResult("mode", "Mode", (properties.Mode != null ? cfn_parse.FromCloudFormation.getString(properties.Mode) : undefined));
  ret.addPropertyResult("name", "Name", (properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined));
  ret.addPropertyResult("parameters", "Parameters", (properties.Parameters != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.hashValidator(cdk.validateString), cdk.validateString], [cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString), cfn_parse.FromCloudFormation.getString])(properties.Parameters) : undefined));
  ret.addPropertyResult("policy", "Policy", (properties.Policy != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.Policy) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnRestApiTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`EndpointConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`EndpointConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnRestApiEndpointConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("apiKeySourceType", cdk.validateString)(properties.apiKeySourceType));
  errors.collect(cdk.propertyValidator("binaryMediaTypes", cdk.listValidator(cdk.validateString))(properties.binaryMediaTypes));
  errors.collect(cdk.propertyValidator("body", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.body));
  errors.collect(cdk.propertyValidator("bodyS3Location", CfnRestApiS3LocationPropertyValidator)(properties.bodyS3Location));
  errors.collect(cdk.propertyValidator("cloneFrom", cdk.validateString)(properties.cloneFrom));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("disableExecuteApiEndpoint", cdk.validateBoolean)(properties.disableExecuteApiEndpoint));
  errors.collect(cdk.propertyValidator("endpointConfiguration", CfnRestApiEndpointConfigurationPropertyValidator)(properties.endpointConfiguration));
  errors.collect(cdk.propertyValidator("failOnWarnings", cdk.validateBoolean)(properties.failOnWarnings));
  errors.collect(cdk.propertyValidator("minimumCompressionSize", cdk.validateNumber)(properties.minimumCompressionSize));
  errors.collect(cdk.propertyValidator("mode", cdk.validateString)(properties.mode));
  errors.collect(cdk.propertyValidator("name", cdk.validateString)(properties.name));
  errors.collect(cdk.propertyValidator("parameters", cdk.unionValidator(cdk.hashValidator(cdk.validateString), cdk.validateString))(properties.parameters));
  errors.collect(cdk.propertyValidator("policy", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.policy));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnRestApiTagPropertyValidator))(properties.tags));
  return errors.wrap("supplied properties not correct for \\"EndpointConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnRestApiEndpointConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnRestApiEndpointConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "ApiKeySourceType": cdk.stringToCloudFormation(properties.apiKeySourceType),
    "BinaryMediaTypes": cdk.listMapper(cdk.stringToCloudFormation)(properties.binaryMediaTypes),
    "Body": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.body),
    "BodyS3Location": convertCfnRestApiS3LocationPropertyToCloudFormation(properties.bodyS3Location),
    "CloneFrom": cdk.stringToCloudFormation(properties.cloneFrom),
    "Description": cdk.stringToCloudFormation(properties.description),
    "DisableExecuteApiEndpoint": cdk.booleanToCloudFormation(properties.disableExecuteApiEndpoint),
    "EndpointConfiguration": convertCfnRestApiEndpointConfigurationPropertyToCloudFormation(properties.endpointConfiguration),
    "FailOnWarnings": cdk.booleanToCloudFormation(properties.failOnWarnings),
    "MinimumCompressionSize": cdk.numberToCloudFormation(properties.minimumCompressionSize),
    "Mode": cdk.stringToCloudFormation(properties.mode),
    "Name": cdk.stringToCloudFormation(properties.name),
    "Parameters": cdk.unionMapper([cdk.hashValidator(cdk.validateString), cdk.validateString], [cdk.hashMapper(cdk.stringToCloudFormation), cdk.stringToCloudFormation])(properties.parameters),
    "Policy": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.policy),
    "Tags": cdk.listMapper(convertCfnRestApiTagPropertyToCloudFormation)(properties.tags)
  };
}

// @ts-ignore TS6133
function CfnRestApiEndpointConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRestApi.EndpointConfigurationProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRestApi.EndpointConfigurationProperty>();
  ret.addPropertyResult("apiKeySourceType", "ApiKeySourceType", (properties.ApiKeySourceType != null ? cfn_parse.FromCloudFormation.getString(properties.ApiKeySourceType) : undefined));
  ret.addPropertyResult("binaryMediaTypes", "BinaryMediaTypes", (properties.BinaryMediaTypes != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.BinaryMediaTypes) : undefined));
  ret.addPropertyResult("body", "Body", (properties.Body != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.Body) : undefined));
  ret.addPropertyResult("bodyS3Location", "BodyS3Location", (properties.BodyS3Location != null ? CfnRestApiS3LocationPropertyFromCloudFormation(properties.BodyS3Location) : undefined));
  ret.addPropertyResult("cloneFrom", "CloneFrom", (properties.CloneFrom != null ? cfn_parse.FromCloudFormation.getString(properties.CloneFrom) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("disableExecuteApiEndpoint", "DisableExecuteApiEndpoint", (properties.DisableExecuteApiEndpoint != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DisableExecuteApiEndpoint) : undefined));
  ret.addPropertyResult("endpointConfiguration", "EndpointConfiguration", (properties.EndpointConfiguration != null ? CfnRestApiEndpointConfigurationPropertyFromCloudFormation(properties.EndpointConfiguration) : undefined));
  ret.addPropertyResult("failOnWarnings", "FailOnWarnings", (properties.FailOnWarnings != null ? cfn_parse.FromCloudFormation.getBoolean(properties.FailOnWarnings) : undefined));
  ret.addPropertyResult("minimumCompressionSize", "MinimumCompressionSize", (properties.MinimumCompressionSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MinimumCompressionSize) : undefined));
  ret.addPropertyResult("mode", "Mode", (properties.Mode != null ? cfn_parse.FromCloudFormation.getString(properties.Mode) : undefined));
  ret.addPropertyResult("name", "Name", (properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined));
  ret.addPropertyResult("parameters", "Parameters", (properties.Parameters != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.hashValidator(cdk.validateString), cdk.validateString], [cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString), cfn_parse.FromCloudFormation.getString])(properties.Parameters) : undefined));
  ret.addPropertyResult("policy", "Policy", (properties.Policy != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.Policy) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnRestApiTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`S3LocationProperty\`
 *
 * @param properties - the TypeScript properties of a \`S3LocationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnRestApiS3LocationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("apiKeySourceType", cdk.validateString)(properties.apiKeySourceType));
  errors.collect(cdk.propertyValidator("binaryMediaTypes", cdk.listValidator(cdk.validateString))(properties.binaryMediaTypes));
  errors.collect(cdk.propertyValidator("body", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.body));
  errors.collect(cdk.propertyValidator("bodyS3Location", CfnRestApiS3LocationPropertyValidator)(properties.bodyS3Location));
  errors.collect(cdk.propertyValidator("cloneFrom", cdk.validateString)(properties.cloneFrom));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("disableExecuteApiEndpoint", cdk.validateBoolean)(properties.disableExecuteApiEndpoint));
  errors.collect(cdk.propertyValidator("endpointConfiguration", CfnRestApiEndpointConfigurationPropertyValidator)(properties.endpointConfiguration));
  errors.collect(cdk.propertyValidator("failOnWarnings", cdk.validateBoolean)(properties.failOnWarnings));
  errors.collect(cdk.propertyValidator("minimumCompressionSize", cdk.validateNumber)(properties.minimumCompressionSize));
  errors.collect(cdk.propertyValidator("mode", cdk.validateString)(properties.mode));
  errors.collect(cdk.propertyValidator("name", cdk.validateString)(properties.name));
  errors.collect(cdk.propertyValidator("parameters", cdk.unionValidator(cdk.hashValidator(cdk.validateString), cdk.validateString))(properties.parameters));
  errors.collect(cdk.propertyValidator("policy", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.policy));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnRestApiTagPropertyValidator))(properties.tags));
  return errors.wrap("supplied properties not correct for \\"S3LocationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnRestApiS3LocationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnRestApiS3LocationPropertyValidator(properties).assertSuccess();
  return {
    "ApiKeySourceType": cdk.stringToCloudFormation(properties.apiKeySourceType),
    "BinaryMediaTypes": cdk.listMapper(cdk.stringToCloudFormation)(properties.binaryMediaTypes),
    "Body": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.body),
    "BodyS3Location": convertCfnRestApiS3LocationPropertyToCloudFormation(properties.bodyS3Location),
    "CloneFrom": cdk.stringToCloudFormation(properties.cloneFrom),
    "Description": cdk.stringToCloudFormation(properties.description),
    "DisableExecuteApiEndpoint": cdk.booleanToCloudFormation(properties.disableExecuteApiEndpoint),
    "EndpointConfiguration": convertCfnRestApiEndpointConfigurationPropertyToCloudFormation(properties.endpointConfiguration),
    "FailOnWarnings": cdk.booleanToCloudFormation(properties.failOnWarnings),
    "MinimumCompressionSize": cdk.numberToCloudFormation(properties.minimumCompressionSize),
    "Mode": cdk.stringToCloudFormation(properties.mode),
    "Name": cdk.stringToCloudFormation(properties.name),
    "Parameters": cdk.unionMapper([cdk.hashValidator(cdk.validateString), cdk.validateString], [cdk.hashMapper(cdk.stringToCloudFormation), cdk.stringToCloudFormation])(properties.parameters),
    "Policy": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.policy),
    "Tags": cdk.listMapper(convertCfnRestApiTagPropertyToCloudFormation)(properties.tags)
  };
}

// @ts-ignore TS6133
function CfnRestApiS3LocationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnRestApi.S3LocationProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRestApi.S3LocationProperty>();
  ret.addPropertyResult("apiKeySourceType", "ApiKeySourceType", (properties.ApiKeySourceType != null ? cfn_parse.FromCloudFormation.getString(properties.ApiKeySourceType) : undefined));
  ret.addPropertyResult("binaryMediaTypes", "BinaryMediaTypes", (properties.BinaryMediaTypes != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.BinaryMediaTypes) : undefined));
  ret.addPropertyResult("body", "Body", (properties.Body != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.Body) : undefined));
  ret.addPropertyResult("bodyS3Location", "BodyS3Location", (properties.BodyS3Location != null ? CfnRestApiS3LocationPropertyFromCloudFormation(properties.BodyS3Location) : undefined));
  ret.addPropertyResult("cloneFrom", "CloneFrom", (properties.CloneFrom != null ? cfn_parse.FromCloudFormation.getString(properties.CloneFrom) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("disableExecuteApiEndpoint", "DisableExecuteApiEndpoint", (properties.DisableExecuteApiEndpoint != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DisableExecuteApiEndpoint) : undefined));
  ret.addPropertyResult("endpointConfiguration", "EndpointConfiguration", (properties.EndpointConfiguration != null ? CfnRestApiEndpointConfigurationPropertyFromCloudFormation(properties.EndpointConfiguration) : undefined));
  ret.addPropertyResult("failOnWarnings", "FailOnWarnings", (properties.FailOnWarnings != null ? cfn_parse.FromCloudFormation.getBoolean(properties.FailOnWarnings) : undefined));
  ret.addPropertyResult("minimumCompressionSize", "MinimumCompressionSize", (properties.MinimumCompressionSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MinimumCompressionSize) : undefined));
  ret.addPropertyResult("mode", "Mode", (properties.Mode != null ? cfn_parse.FromCloudFormation.getString(properties.Mode) : undefined));
  ret.addPropertyResult("name", "Name", (properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined));
  ret.addPropertyResult("parameters", "Parameters", (properties.Parameters != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.hashValidator(cdk.validateString), cdk.validateString], [cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString), cfn_parse.FromCloudFormation.getString])(properties.Parameters) : undefined));
  ret.addPropertyResult("policy", "Policy", (properties.Policy != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.Policy) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnRestApiTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`CfnRestApiProps\`
 *
 * @param properties - the TypeScript properties of a \`CfnRestApiProps\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnRestApiPropsValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("apiKeySourceType", cdk.validateString)(properties.apiKeySourceType));
  errors.collect(cdk.propertyValidator("binaryMediaTypes", cdk.listValidator(cdk.validateString))(properties.binaryMediaTypes));
  errors.collect(cdk.propertyValidator("body", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.body));
  errors.collect(cdk.propertyValidator("bodyS3Location", CfnRestApiS3LocationPropertyValidator)(properties.bodyS3Location));
  errors.collect(cdk.propertyValidator("cloneFrom", cdk.validateString)(properties.cloneFrom));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("disableExecuteApiEndpoint", cdk.validateBoolean)(properties.disableExecuteApiEndpoint));
  errors.collect(cdk.propertyValidator("endpointConfiguration", CfnRestApiEndpointConfigurationPropertyValidator)(properties.endpointConfiguration));
  errors.collect(cdk.propertyValidator("failOnWarnings", cdk.validateBoolean)(properties.failOnWarnings));
  errors.collect(cdk.propertyValidator("minimumCompressionSize", cdk.validateNumber)(properties.minimumCompressionSize));
  errors.collect(cdk.propertyValidator("mode", cdk.validateString)(properties.mode));
  errors.collect(cdk.propertyValidator("name", cdk.validateString)(properties.name));
  errors.collect(cdk.propertyValidator("parameters", cdk.unionValidator(cdk.hashValidator(cdk.validateString), cdk.validateString))(properties.parameters));
  errors.collect(cdk.propertyValidator("policy", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.policy));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(cdk.validateCfnTag))(properties.tags));
  return errors.wrap("supplied properties not correct for \\"CfnRestApiProps\\"");
}

// @ts-ignore TS6133
function convertCfnRestApiPropsToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnRestApiPropsValidator(properties).assertSuccess();
  return {
    "ApiKeySourceType": cdk.stringToCloudFormation(properties.apiKeySourceType),
    "BinaryMediaTypes": cdk.listMapper(cdk.stringToCloudFormation)(properties.binaryMediaTypes),
    "Body": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.body),
    "BodyS3Location": convertCfnRestApiS3LocationPropertyToCloudFormation(properties.bodyS3Location),
    "CloneFrom": cdk.stringToCloudFormation(properties.cloneFrom),
    "Description": cdk.stringToCloudFormation(properties.description),
    "DisableExecuteApiEndpoint": cdk.booleanToCloudFormation(properties.disableExecuteApiEndpoint),
    "EndpointConfiguration": convertCfnRestApiEndpointConfigurationPropertyToCloudFormation(properties.endpointConfiguration),
    "FailOnWarnings": cdk.booleanToCloudFormation(properties.failOnWarnings),
    "MinimumCompressionSize": cdk.numberToCloudFormation(properties.minimumCompressionSize),
    "Mode": cdk.stringToCloudFormation(properties.mode),
    "Name": cdk.stringToCloudFormation(properties.name),
    "Parameters": cdk.unionMapper([cdk.hashValidator(cdk.validateString), cdk.validateString], [cdk.hashMapper(cdk.stringToCloudFormation), cdk.stringToCloudFormation])(properties.parameters),
    "Policy": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.policy),
    "Tags": cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)
  };
}

// @ts-ignore TS6133
function CfnRestApiPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRestApiProps | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRestApiProps>();
  ret.addPropertyResult("apiKeySourceType", "ApiKeySourceType", (properties.ApiKeySourceType != null ? cfn_parse.FromCloudFormation.getString(properties.ApiKeySourceType) : undefined));
  ret.addPropertyResult("binaryMediaTypes", "BinaryMediaTypes", (properties.BinaryMediaTypes != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.BinaryMediaTypes) : undefined));
  ret.addPropertyResult("body", "Body", (properties.Body != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.Body) : undefined));
  ret.addPropertyResult("bodyS3Location", "BodyS3Location", (properties.BodyS3Location != null ? CfnRestApiS3LocationPropertyFromCloudFormation(properties.BodyS3Location) : undefined));
  ret.addPropertyResult("cloneFrom", "CloneFrom", (properties.CloneFrom != null ? cfn_parse.FromCloudFormation.getString(properties.CloneFrom) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("disableExecuteApiEndpoint", "DisableExecuteApiEndpoint", (properties.DisableExecuteApiEndpoint != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DisableExecuteApiEndpoint) : undefined));
  ret.addPropertyResult("endpointConfiguration", "EndpointConfiguration", (properties.EndpointConfiguration != null ? CfnRestApiEndpointConfigurationPropertyFromCloudFormation(properties.EndpointConfiguration) : undefined));
  ret.addPropertyResult("failOnWarnings", "FailOnWarnings", (properties.FailOnWarnings != null ? cfn_parse.FromCloudFormation.getBoolean(properties.FailOnWarnings) : undefined));
  ret.addPropertyResult("minimumCompressionSize", "MinimumCompressionSize", (properties.MinimumCompressionSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MinimumCompressionSize) : undefined));
  ret.addPropertyResult("mode", "Mode", (properties.Mode != null ? cfn_parse.FromCloudFormation.getString(properties.Mode) : undefined));
  ret.addPropertyResult("name", "Name", (properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined));
  ret.addPropertyResult("parameters", "Parameters", (properties.Parameters != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.hashValidator(cdk.validateString), cdk.validateString], [cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString), cfn_parse.FromCloudFormation.getString])(properties.Parameters) : undefined));
  ret.addPropertyResult("policy", "Policy", (properties.Policy != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.Policy) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}",
}
`;

exports[`AWS::IAM::Role 1`] = `
{
  "augmentations": undefined,
  "metrics": undefined,
  "module": "/* eslint-disable prettier/prettier,max-len */
import * as cdk from "aws-cdk-lib";
import * as constructs from "constructs";
import * as cfn_parse from "aws-cdk-lib/core/lib/helpers-internal";

/**
 * Creates a new role for your AWS account .
 *
 * For more information about roles, see [IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html) . For information about quotas for role names and the number of roles you can create, see [IAM and AWS STS quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html) in the *IAM User Guide* .
 *
 * @stability external
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
 */
export class CfnRole extends cdk.CfnResource implements cdk.IInspectable, cdk.ITaggable {
  /**
   * The CloudFormation resource type name for this resource class.
   */
  public static readonly CFN_RESOURCE_TYPE_NAME: string = "AWS::IAM::Role";

  /**
   * Build a CfnRole from CloudFormation properties
   *
   * A factory method that creates a new instance of this class from an object
   * containing the CloudFormation properties of this resource.
   * Used in the @aws-cdk/cloudformation-include module.
   *
   * @internal
   */
  public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnRole {
    resourceAttributes = resourceAttributes || {};
    const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);
    const propsResult = CfnRolePropsFromCloudFormation(resourceProperties);
    if (cdk.isResolvableObject(propsResult.value)) {
      throw new Error("Unexpected IResolvable");
    }
    const ret = new CfnRole(scope, id, propsResult.value);
    for (const [propKey, propVal] of Object.entries(propsResult.extraProperties)) {
      ret.addPropertyOverride(propKey, propVal);
    }
    options.parser.handleAttributes(ret, resourceAttributes, id);
    return ret;
  }

  /**
   * Returns the Amazon Resource Name (ARN) for the role. For example:
   *
   * \`{"Fn::GetAtt" : ["MyRole", "Arn"] }\`
   *
   * This will return a value such as \`arn:aws:iam::1234567890:role/MyRole-AJJHDSKSDF\` .
   *
   * @cloudformationAttribute Arn
   */
  public readonly attrArn: string;

  /**
   * Returns the stable and unique string identifying the role. For example, \`AIDAJQABLZS4A3QDU576Q\` .
   *
   * For more information about IDs, see [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html) in the *IAM User Guide* .
   *
   * @cloudformationAttribute RoleId
   */
  public readonly attrRoleId: string;

  /**
   * The trust policy that is associated with this role.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-assumerolepolicydocument
   */
  public assumeRolePolicyDocument: any | cdk.IResolvable | string;

  /**
   * A description of the role that you provide.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-description
   */
  public description?: string;

  /**
   * A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-managedpolicyarns
   */
  public managedPolicyArns?: Array<string>;

  /**
   * The maximum session duration (in seconds) that you want to set for the specified role.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-maxsessionduration
   */
  public maxSessionDuration?: number;

  /**
   * The path to the role. For more information about paths, see [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-path
   */
  public path?: string;

  /**
   * The ARN of the policy used to set the permissions boundary for the role.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-permissionsboundary
   */
  public permissionsBoundary?: string;

  /**
   * Adds or updates an inline policy document that is embedded in the specified IAM role.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-policies
   */
  public policies?: Array<cdk.IResolvable | CfnRole.PolicyProperty> | cdk.IResolvable;

  /**
   * A name for the IAM role, up to 64 characters in length.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-rolename
   */
  public roleName?: string;

  /**
   * Tag Manager which manages the tags for this resource
   */
  public readonly tags: cdk.TagManager;

  /**
   * A list of tags that are attached to the role.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-tags
   */
  public tagsRaw?: Array<cdk.CfnTag>;

  /**
   * @param scope Scope in which this resource is defined
   * @param id Construct identifier for this resource (unique in its scope)
   * @param props Resource properties
   */
  public constructor(scope: constructs.Construct, id: string, props: CfnRoleProps) {
    super(scope, id, {
      "type": CfnRole.CFN_RESOURCE_TYPE_NAME,
      "properties": props
    });

    cdk.requireProperty(props, "assumeRolePolicyDocument", this);

    this.attrArn = cdk.Token.asString(this.getAtt("Arn", cdk.ResolutionTypeHint.STRING));
    this.attrRoleId = cdk.Token.asString(this.getAtt("RoleId", cdk.ResolutionTypeHint.STRING));
    this.assumeRolePolicyDocument = props.assumeRolePolicyDocument;
    this.description = props.description;
    this.managedPolicyArns = props.managedPolicyArns;
    this.maxSessionDuration = props.maxSessionDuration;
    this.path = props.path;
    this.permissionsBoundary = props.permissionsBoundary;
    this.policies = props.policies;
    this.roleName = props.roleName;
    this.tags = new cdk.TagManager(cdk.TagType.STANDARD, "AWS::IAM::Role", props.tags, {
      "tagPropertyName": "tags"
    });
    this.tagsRaw = props.tags;
  }

  protected get cfnProperties(): Record<string, any> {
    return {
      "assumeRolePolicyDocument": this.assumeRolePolicyDocument,
      "description": this.description,
      "managedPolicyArns": this.managedPolicyArns,
      "maxSessionDuration": this.maxSessionDuration,
      "path": this.path,
      "permissionsBoundary": this.permissionsBoundary,
      "policies": this.policies,
      "roleName": this.roleName,
      "tags": this.tags.renderTags()
    };
  }

  /**
   * Examines the CloudFormation resource and discloses attributes
   *
   * @param inspector tree inspector to collect and process attributes
   */
  public inspect(inspector: cdk.TreeInspector): void {
    inspector.addAttribute("aws:cdk:cloudformation:type", CfnRole.CFN_RESOURCE_TYPE_NAME);
    inspector.addAttribute("aws:cdk:cloudformation:props", this.cfnProperties);
  }

  protected renderProperties(props: Record<string, any>): Record<string, any> {
    return convertCfnRolePropsToCloudFormation(props);
  }
}

export namespace CfnRole {
  /**
   * Contains information about an attached policy.
   *
   * An attached policy is a managed policy that has been attached to a user, group, or role.
   *
   * For more information about managed policies, refer to [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *IAM User Guide* .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-policy.html
   */
  export interface PolicyProperty {
    /**
     * The trust policy that is associated with this role.
     *
     * Trust policies define which entities can assume the role. You can associate only one trust policy with a role. For an example of a policy that can be used to assume a role, see [Template Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#aws-resource-iam-role--examples) . For more information about the elements that you can use in an IAM policy, see [IAM Policy Elements Reference](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html) in the *IAM User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-policy.html#cfn-iam-role-policy-assumerolepolicydocument
     */
    readonly assumeRolePolicyDocument: any | cdk.IResolvable | string;

    /**
     * A description of the role that you provide.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-policy.html#cfn-iam-role-policy-description
     */
    readonly description?: string;

    /**
     * A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.
     *
     * For more information about ARNs, see [Amazon Resource Names (ARNs) and AWS Service Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *AWS General Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-policy.html#cfn-iam-role-policy-managedpolicyarns
     */
    readonly managedPolicyArns?: Array<string>;

    /**
     * The maximum session duration (in seconds) that you want to set for the specified role.
     *
     * If you do not specify a value for this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours.
     *
     * Anyone who assumes the role from the AWS CLI or API can use the \`DurationSeconds\` API parameter or the \`duration-seconds\` AWS CLI parameter to request a longer session. The \`MaxSessionDuration\` setting determines the maximum duration that can be requested using the \`DurationSeconds\` parameter. If users don't specify a value for the \`DurationSeconds\` parameter, their security credentials are valid for one hour by default. This applies when you use the \`AssumeRole*\` API operations or the \`assume-role*\` AWS CLI operations but does not apply when you use those operations to create a console URL. For more information, see [Using IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html) in the *IAM User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-policy.html#cfn-iam-role-policy-maxsessionduration
     */
    readonly maxSessionDuration?: number;

    /**
     * The path to the role. For more information about paths, see [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide* .
     *
     * This parameter is optional. If it is not included, it defaults to a slash (/).
     *
     * This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! ( \`\\u0021\` ) through the DEL character ( \`\\u007F\` ), including most punctuation characters, digits, and upper and lowercased letters.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-policy.html#cfn-iam-role-policy-path
     */
    readonly path?: string;

    /**
     * The ARN of the policy used to set the permissions boundary for the role.
     *
     * For more information about permissions boundaries, see [Permissions boundaries for IAM identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html) in the *IAM User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-policy.html#cfn-iam-role-policy-permissionsboundary
     */
    readonly permissionsBoundary?: string;

    /**
     * Adds or updates an inline policy document that is embedded in the specified IAM role.
     *
     * When you embed an inline policy in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created at the same time as the role. You can update a role's trust policy later. For more information about IAM roles, go to [Using Roles to Delegate Permissions and Federate Identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html) .
     *
     * A role can also have an attached managed policy. For information about policies, see [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *IAM User Guide* .
     *
     * For information about limits on the number of inline policies that you can embed with a role, see [Limitations on IAM Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *IAM User Guide* .
     *
     * > If an external policy (such as \`AWS::IAM::Policy\` or \`AWS::IAM::ManagedPolicy\` ) has a \`Ref\` to a role and if a resource (such as \`AWS::ECS::Service\` ) also has a \`Ref\` to the same role, add a \`DependsOn\` attribute to the resource to make the resource depend on the external policy. This dependency ensures that the role's policy is available throughout the resource's lifecycle. For example, when you delete a stack with an \`AWS::ECS::Service\` resource, the \`DependsOn\` attribute ensures that AWS CloudFormation deletes the \`AWS::ECS::Service\` resource before deleting its role's policy.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-policy.html#cfn-iam-role-policy-policies
     */
    readonly policies?: Array<cdk.IResolvable | CfnRole.PolicyProperty> | cdk.IResolvable;

    /**
     * A name for the IAM role, up to 64 characters in length.
     *
     * For valid values, see the \`RoleName\` parameter for the [\`CreateRole\`](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html) action in the *IAM User Guide* .
     *
     * This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-. The role name must be unique within the account. Role names are not distinguished by case. For example, you cannot create roles named both "Role1" and "role1".
     *
     * If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the role name.
     *
     * If you specify a name, you must specify the \`CAPABILITY_NAMED_IAM\` value to acknowledge your template's capabilities. For more information, see [Acknowledging IAM Resources in AWS CloudFormation Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities) .
     *
     * > Naming an IAM resource can cause an unrecoverable error if you reuse the same template in multiple Regions. To prevent this, we recommend using \`Fn::Join\` and \`AWS::Region\` to create a Region-specific name, as in the following example: \`{"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "MyResourceName"}]]}\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-policy.html#cfn-iam-role-policy-rolename
     */
    readonly roleName?: string;

    /**
     * A list of tags that are attached to the role.
     *
     * For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-policy.html#cfn-iam-role-policy-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnRole.TagProperty> | cdk.IResolvable;
  }

  /**
   * A key-value pair to associate with a resource.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-tag.html
   */
  export interface TagProperty {
    /**
     * The trust policy that is associated with this role.
     *
     * Trust policies define which entities can assume the role. You can associate only one trust policy with a role. For an example of a policy that can be used to assume a role, see [Template Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#aws-resource-iam-role--examples) . For more information about the elements that you can use in an IAM policy, see [IAM Policy Elements Reference](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html) in the *IAM User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-tag.html#cfn-iam-role-tag-assumerolepolicydocument
     */
    readonly assumeRolePolicyDocument: any | cdk.IResolvable | string;

    /**
     * A description of the role that you provide.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-tag.html#cfn-iam-role-tag-description
     */
    readonly description?: string;

    /**
     * A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.
     *
     * For more information about ARNs, see [Amazon Resource Names (ARNs) and AWS Service Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *AWS General Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-tag.html#cfn-iam-role-tag-managedpolicyarns
     */
    readonly managedPolicyArns?: Array<string>;

    /**
     * The maximum session duration (in seconds) that you want to set for the specified role.
     *
     * If you do not specify a value for this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours.
     *
     * Anyone who assumes the role from the AWS CLI or API can use the \`DurationSeconds\` API parameter or the \`duration-seconds\` AWS CLI parameter to request a longer session. The \`MaxSessionDuration\` setting determines the maximum duration that can be requested using the \`DurationSeconds\` parameter. If users don't specify a value for the \`DurationSeconds\` parameter, their security credentials are valid for one hour by default. This applies when you use the \`AssumeRole*\` API operations or the \`assume-role*\` AWS CLI operations but does not apply when you use those operations to create a console URL. For more information, see [Using IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html) in the *IAM User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-tag.html#cfn-iam-role-tag-maxsessionduration
     */
    readonly maxSessionDuration?: number;

    /**
     * The path to the role. For more information about paths, see [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide* .
     *
     * This parameter is optional. If it is not included, it defaults to a slash (/).
     *
     * This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! ( \`\\u0021\` ) through the DEL character ( \`\\u007F\` ), including most punctuation characters, digits, and upper and lowercased letters.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-tag.html#cfn-iam-role-tag-path
     */
    readonly path?: string;

    /**
     * The ARN of the policy used to set the permissions boundary for the role.
     *
     * For more information about permissions boundaries, see [Permissions boundaries for IAM identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html) in the *IAM User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-tag.html#cfn-iam-role-tag-permissionsboundary
     */
    readonly permissionsBoundary?: string;

    /**
     * Adds or updates an inline policy document that is embedded in the specified IAM role.
     *
     * When you embed an inline policy in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created at the same time as the role. You can update a role's trust policy later. For more information about IAM roles, go to [Using Roles to Delegate Permissions and Federate Identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html) .
     *
     * A role can also have an attached managed policy. For information about policies, see [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *IAM User Guide* .
     *
     * For information about limits on the number of inline policies that you can embed with a role, see [Limitations on IAM Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *IAM User Guide* .
     *
     * > If an external policy (such as \`AWS::IAM::Policy\` or \`AWS::IAM::ManagedPolicy\` ) has a \`Ref\` to a role and if a resource (such as \`AWS::ECS::Service\` ) also has a \`Ref\` to the same role, add a \`DependsOn\` attribute to the resource to make the resource depend on the external policy. This dependency ensures that the role's policy is available throughout the resource's lifecycle. For example, when you delete a stack with an \`AWS::ECS::Service\` resource, the \`DependsOn\` attribute ensures that AWS CloudFormation deletes the \`AWS::ECS::Service\` resource before deleting its role's policy.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-tag.html#cfn-iam-role-tag-policies
     */
    readonly policies?: Array<cdk.IResolvable | CfnRole.PolicyProperty> | cdk.IResolvable;

    /**
     * A name for the IAM role, up to 64 characters in length.
     *
     * For valid values, see the \`RoleName\` parameter for the [\`CreateRole\`](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html) action in the *IAM User Guide* .
     *
     * This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-. The role name must be unique within the account. Role names are not distinguished by case. For example, you cannot create roles named both "Role1" and "role1".
     *
     * If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the role name.
     *
     * If you specify a name, you must specify the \`CAPABILITY_NAMED_IAM\` value to acknowledge your template's capabilities. For more information, see [Acknowledging IAM Resources in AWS CloudFormation Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities) .
     *
     * > Naming an IAM resource can cause an unrecoverable error if you reuse the same template in multiple Regions. To prevent this, we recommend using \`Fn::Join\` and \`AWS::Region\` to create a Region-specific name, as in the following example: \`{"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "MyResourceName"}]]}\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-tag.html#cfn-iam-role-tag-rolename
     */
    readonly roleName?: string;

    /**
     * A list of tags that are attached to the role.
     *
     * For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-role-tag.html#cfn-iam-role-tag-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnRole.TagProperty> | cdk.IResolvable;
  }
}

/**
 * Properties for defining a \`CfnRole\`
 *
 * @struct
 * @stability external
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
 */
export interface CfnRoleProps {
  /**
   * The trust policy that is associated with this role.
   *
   * Trust policies define which entities can assume the role. You can associate only one trust policy with a role. For an example of a policy that can be used to assume a role, see [Template Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#aws-resource-iam-role--examples) . For more information about the elements that you can use in an IAM policy, see [IAM Policy Elements Reference](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html) in the *IAM User Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-assumerolepolicydocument
   */
  readonly assumeRolePolicyDocument: any | cdk.IResolvable | string;

  /**
   * A description of the role that you provide.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-description
   */
  readonly description?: string;

  /**
   * A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.
   *
   * For more information about ARNs, see [Amazon Resource Names (ARNs) and AWS Service Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *AWS General Reference* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-managedpolicyarns
   */
  readonly managedPolicyArns?: Array<string>;

  /**
   * The maximum session duration (in seconds) that you want to set for the specified role.
   *
   * If you do not specify a value for this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours.
   *
   * Anyone who assumes the role from the AWS CLI or API can use the \`DurationSeconds\` API parameter or the \`duration-seconds\` AWS CLI parameter to request a longer session. The \`MaxSessionDuration\` setting determines the maximum duration that can be requested using the \`DurationSeconds\` parameter. If users don't specify a value for the \`DurationSeconds\` parameter, their security credentials are valid for one hour by default. This applies when you use the \`AssumeRole*\` API operations or the \`assume-role*\` AWS CLI operations but does not apply when you use those operations to create a console URL. For more information, see [Using IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html) in the *IAM User Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-maxsessionduration
   */
  readonly maxSessionDuration?: number;

  /**
   * The path to the role. For more information about paths, see [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide* .
   *
   * This parameter is optional. If it is not included, it defaults to a slash (/).
   *
   * This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! ( \`\\u0021\` ) through the DEL character ( \`\\u007F\` ), including most punctuation characters, digits, and upper and lowercased letters.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-path
   */
  readonly path?: string;

  /**
   * The ARN of the policy used to set the permissions boundary for the role.
   *
   * For more information about permissions boundaries, see [Permissions boundaries for IAM identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html) in the *IAM User Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-permissionsboundary
   */
  readonly permissionsBoundary?: string;

  /**
   * Adds or updates an inline policy document that is embedded in the specified IAM role.
   *
   * When you embed an inline policy in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created at the same time as the role. You can update a role's trust policy later. For more information about IAM roles, go to [Using Roles to Delegate Permissions and Federate Identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html) .
   *
   * A role can also have an attached managed policy. For information about policies, see [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *IAM User Guide* .
   *
   * For information about limits on the number of inline policies that you can embed with a role, see [Limitations on IAM Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *IAM User Guide* .
   *
   * > If an external policy (such as \`AWS::IAM::Policy\` or \`AWS::IAM::ManagedPolicy\` ) has a \`Ref\` to a role and if a resource (such as \`AWS::ECS::Service\` ) also has a \`Ref\` to the same role, add a \`DependsOn\` attribute to the resource to make the resource depend on the external policy. This dependency ensures that the role's policy is available throughout the resource's lifecycle. For example, when you delete a stack with an \`AWS::ECS::Service\` resource, the \`DependsOn\` attribute ensures that AWS CloudFormation deletes the \`AWS::ECS::Service\` resource before deleting its role's policy.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-policies
   */
  readonly policies?: Array<cdk.IResolvable | CfnRole.PolicyProperty> | cdk.IResolvable;

  /**
   * A name for the IAM role, up to 64 characters in length.
   *
   * For valid values, see the \`RoleName\` parameter for the [\`CreateRole\`](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html) action in the *IAM User Guide* .
   *
   * This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-. The role name must be unique within the account. Role names are not distinguished by case. For example, you cannot create roles named both "Role1" and "role1".
   *
   * If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the role name.
   *
   * If you specify a name, you must specify the \`CAPABILITY_NAMED_IAM\` value to acknowledge your template's capabilities. For more information, see [Acknowledging IAM Resources in AWS CloudFormation Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities) .
   *
   * > Naming an IAM resource can cause an unrecoverable error if you reuse the same template in multiple Regions. To prevent this, we recommend using \`Fn::Join\` and \`AWS::Region\` to create a Region-specific name, as in the following example: \`{"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "MyResourceName"}]]}\` .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-rolename
   */
  readonly roleName?: string;

  /**
   * A list of tags that are attached to the role.
   *
   * For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-tags
   */
  readonly tags?: Array<cdk.CfnTag>;
}

/**
 * Determine whether the given properties match those of a \`TagProperty\`
 *
 * @param properties - the TypeScript properties of a \`TagProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnRoleTagPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("assumeRolePolicyDocument", cdk.requiredValidator)(properties.assumeRolePolicyDocument));
  errors.collect(cdk.propertyValidator("assumeRolePolicyDocument", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.assumeRolePolicyDocument));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("managedPolicyArns", cdk.listValidator(cdk.validateString))(properties.managedPolicyArns));
  errors.collect(cdk.propertyValidator("maxSessionDuration", cdk.validateNumber)(properties.maxSessionDuration));
  errors.collect(cdk.propertyValidator("path", cdk.validateString)(properties.path));
  errors.collect(cdk.propertyValidator("permissionsBoundary", cdk.validateString)(properties.permissionsBoundary));
  errors.collect(cdk.propertyValidator("policies", cdk.listValidator(CfnRolePolicyPropertyValidator))(properties.policies));
  errors.collect(cdk.propertyValidator("roleName", cdk.validateString)(properties.roleName));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnRoleTagPropertyValidator))(properties.tags));
  return errors.wrap("supplied properties not correct for \\"TagProperty\\"");
}

// @ts-ignore TS6133
function convertCfnRoleTagPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnRoleTagPropertyValidator(properties).assertSuccess();
  return {
    "AssumeRolePolicyDocument": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.assumeRolePolicyDocument),
    "Description": cdk.stringToCloudFormation(properties.description),
    "ManagedPolicyArns": cdk.listMapper(cdk.stringToCloudFormation)(properties.managedPolicyArns),
    "MaxSessionDuration": cdk.numberToCloudFormation(properties.maxSessionDuration),
    "Path": cdk.stringToCloudFormation(properties.path),
    "PermissionsBoundary": cdk.stringToCloudFormation(properties.permissionsBoundary),
    "Policies": cdk.listMapper(convertCfnRolePolicyPropertyToCloudFormation)(properties.policies),
    "RoleName": cdk.stringToCloudFormation(properties.roleName),
    "Tags": cdk.listMapper(convertCfnRoleTagPropertyToCloudFormation)(properties.tags)
  };
}

// @ts-ignore TS6133
function CfnRoleTagPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnRole.TagProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRole.TagProperty>();
  ret.addPropertyResult("assumeRolePolicyDocument", "AssumeRolePolicyDocument", (properties.AssumeRolePolicyDocument != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.AssumeRolePolicyDocument) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("managedPolicyArns", "ManagedPolicyArns", (properties.ManagedPolicyArns != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ManagedPolicyArns) : undefined));
  ret.addPropertyResult("maxSessionDuration", "MaxSessionDuration", (properties.MaxSessionDuration != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxSessionDuration) : undefined));
  ret.addPropertyResult("path", "Path", (properties.Path != null ? cfn_parse.FromCloudFormation.getString(properties.Path) : undefined));
  ret.addPropertyResult("permissionsBoundary", "PermissionsBoundary", (properties.PermissionsBoundary != null ? cfn_parse.FromCloudFormation.getString(properties.PermissionsBoundary) : undefined));
  ret.addPropertyResult("policies", "Policies", (properties.Policies != null ? cfn_parse.FromCloudFormation.getArray(CfnRolePolicyPropertyFromCloudFormation)(properties.Policies) : undefined));
  ret.addPropertyResult("roleName", "RoleName", (properties.RoleName != null ? cfn_parse.FromCloudFormation.getString(properties.RoleName) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnRoleTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`PolicyProperty\`
 *
 * @param properties - the TypeScript properties of a \`PolicyProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnRolePolicyPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("assumeRolePolicyDocument", cdk.requiredValidator)(properties.assumeRolePolicyDocument));
  errors.collect(cdk.propertyValidator("assumeRolePolicyDocument", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.assumeRolePolicyDocument));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("managedPolicyArns", cdk.listValidator(cdk.validateString))(properties.managedPolicyArns));
  errors.collect(cdk.propertyValidator("maxSessionDuration", cdk.validateNumber)(properties.maxSessionDuration));
  errors.collect(cdk.propertyValidator("path", cdk.validateString)(properties.path));
  errors.collect(cdk.propertyValidator("permissionsBoundary", cdk.validateString)(properties.permissionsBoundary));
  errors.collect(cdk.propertyValidator("policies", cdk.listValidator(CfnRolePolicyPropertyValidator))(properties.policies));
  errors.collect(cdk.propertyValidator("roleName", cdk.validateString)(properties.roleName));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnRoleTagPropertyValidator))(properties.tags));
  return errors.wrap("supplied properties not correct for \\"PolicyProperty\\"");
}

// @ts-ignore TS6133
function convertCfnRolePolicyPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnRolePolicyPropertyValidator(properties).assertSuccess();
  return {
    "AssumeRolePolicyDocument": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.assumeRolePolicyDocument),
    "Description": cdk.stringToCloudFormation(properties.description),
    "ManagedPolicyArns": cdk.listMapper(cdk.stringToCloudFormation)(properties.managedPolicyArns),
    "MaxSessionDuration": cdk.numberToCloudFormation(properties.maxSessionDuration),
    "Path": cdk.stringToCloudFormation(properties.path),
    "PermissionsBoundary": cdk.stringToCloudFormation(properties.permissionsBoundary),
    "Policies": cdk.listMapper(convertCfnRolePolicyPropertyToCloudFormation)(properties.policies),
    "RoleName": cdk.stringToCloudFormation(properties.roleName),
    "Tags": cdk.listMapper(convertCfnRoleTagPropertyToCloudFormation)(properties.tags)
  };
}

// @ts-ignore TS6133
function CfnRolePolicyPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnRole.PolicyProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRole.PolicyProperty>();
  ret.addPropertyResult("assumeRolePolicyDocument", "AssumeRolePolicyDocument", (properties.AssumeRolePolicyDocument != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.AssumeRolePolicyDocument) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("managedPolicyArns", "ManagedPolicyArns", (properties.ManagedPolicyArns != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ManagedPolicyArns) : undefined));
  ret.addPropertyResult("maxSessionDuration", "MaxSessionDuration", (properties.MaxSessionDuration != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxSessionDuration) : undefined));
  ret.addPropertyResult("path", "Path", (properties.Path != null ? cfn_parse.FromCloudFormation.getString(properties.Path) : undefined));
  ret.addPropertyResult("permissionsBoundary", "PermissionsBoundary", (properties.PermissionsBoundary != null ? cfn_parse.FromCloudFormation.getString(properties.PermissionsBoundary) : undefined));
  ret.addPropertyResult("policies", "Policies", (properties.Policies != null ? cfn_parse.FromCloudFormation.getArray(CfnRolePolicyPropertyFromCloudFormation)(properties.Policies) : undefined));
  ret.addPropertyResult("roleName", "RoleName", (properties.RoleName != null ? cfn_parse.FromCloudFormation.getString(properties.RoleName) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnRoleTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`CfnRoleProps\`
 *
 * @param properties - the TypeScript properties of a \`CfnRoleProps\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnRolePropsValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("assumeRolePolicyDocument", cdk.requiredValidator)(properties.assumeRolePolicyDocument));
  errors.collect(cdk.propertyValidator("assumeRolePolicyDocument", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.assumeRolePolicyDocument));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("managedPolicyArns", cdk.listValidator(cdk.validateString))(properties.managedPolicyArns));
  errors.collect(cdk.propertyValidator("maxSessionDuration", cdk.validateNumber)(properties.maxSessionDuration));
  errors.collect(cdk.propertyValidator("path", cdk.validateString)(properties.path));
  errors.collect(cdk.propertyValidator("permissionsBoundary", cdk.validateString)(properties.permissionsBoundary));
  errors.collect(cdk.propertyValidator("policies", cdk.listValidator(CfnRolePolicyPropertyValidator))(properties.policies));
  errors.collect(cdk.propertyValidator("roleName", cdk.validateString)(properties.roleName));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(cdk.validateCfnTag))(properties.tags));
  return errors.wrap("supplied properties not correct for \\"CfnRoleProps\\"");
}

// @ts-ignore TS6133
function convertCfnRolePropsToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnRolePropsValidator(properties).assertSuccess();
  return {
    "AssumeRolePolicyDocument": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.assumeRolePolicyDocument),
    "Description": cdk.stringToCloudFormation(properties.description),
    "ManagedPolicyArns": cdk.listMapper(cdk.stringToCloudFormation)(properties.managedPolicyArns),
    "MaxSessionDuration": cdk.numberToCloudFormation(properties.maxSessionDuration),
    "Path": cdk.stringToCloudFormation(properties.path),
    "PermissionsBoundary": cdk.stringToCloudFormation(properties.permissionsBoundary),
    "Policies": cdk.listMapper(convertCfnRolePolicyPropertyToCloudFormation)(properties.policies),
    "RoleName": cdk.stringToCloudFormation(properties.roleName),
    "Tags": cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)
  };
}

// @ts-ignore TS6133
function CfnRolePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRoleProps | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRoleProps>();
  ret.addPropertyResult("assumeRolePolicyDocument", "AssumeRolePolicyDocument", (properties.AssumeRolePolicyDocument != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.AssumeRolePolicyDocument) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("managedPolicyArns", "ManagedPolicyArns", (properties.ManagedPolicyArns != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ManagedPolicyArns) : undefined));
  ret.addPropertyResult("maxSessionDuration", "MaxSessionDuration", (properties.MaxSessionDuration != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxSessionDuration) : undefined));
  ret.addPropertyResult("path", "Path", (properties.Path != null ? cfn_parse.FromCloudFormation.getString(properties.Path) : undefined));
  ret.addPropertyResult("permissionsBoundary", "PermissionsBoundary", (properties.PermissionsBoundary != null ? cfn_parse.FromCloudFormation.getString(properties.PermissionsBoundary) : undefined));
  ret.addPropertyResult("policies", "Policies", (properties.Policies != null ? cfn_parse.FromCloudFormation.getArray(CfnRolePolicyPropertyFromCloudFormation)(properties.Policies) : undefined));
  ret.addPropertyResult("roleName", "RoleName", (properties.RoleName != null ? cfn_parse.FromCloudFormation.getString(properties.RoleName) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}",
}
`;

exports[`AWS::Lambda::Function 1`] = `
{
  "augmentations": "// Copyright 2012-2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.
/* eslint-disable prettier/prettier,max-len */
import * as cw from "aws-cdk-lib/aws-cloudwatch";
import { FunctionBase } from "./function-base";

declare module "./function-base" {
  interface IFunction {
    /**
     * Return the given named metric for this Function
     */
    metric(metricName: string, props?: cw.MetricOptions): cw.Metric;

    /**
     * How often this Lambda is throttled
     *
     * Sum over 5 minutes
     */
    metricThrottles(props?: cw.MetricOptions): cw.Metric;

    /**
     * How often this Lambda is invoked
     *
     * Sum over 5 minutes
     */
    metricInvocations(props?: cw.MetricOptions): cw.Metric;

    /**
     * How many invocations of this Lambda fail
     *
     * Sum over 5 minutes
     */
    metricErrors(props?: cw.MetricOptions): cw.Metric;

    /**
     * How long execution of this Lambda takes
     *
     * Average over 5 minutes
     */
    metricDuration(props?: cw.MetricOptions): cw.Metric;
  }
}



declare module "./function-base" {
  interface FunctionBase {
    /**
     * Return the given named metric for this Function
     */
    metric(metricName: string, props?: cw.MetricOptions): cw.Metric;

    /**
     * How often this Lambda is throttled
     *
     * Sum over 5 minutes
     */
    metricThrottles(props?: cw.MetricOptions): cw.Metric;

    /**
     * How often this Lambda is invoked
     *
     * Sum over 5 minutes
     */
    metricInvocations(props?: cw.MetricOptions): cw.Metric;

    /**
     * How many invocations of this Lambda fail
     *
     * Sum over 5 minutes
     */
    metricErrors(props?: cw.MetricOptions): cw.Metric;

    /**
     * How long execution of this Lambda takes
     *
     * Average over 5 minutes
     */
    metricDuration(props?: cw.MetricOptions): cw.Metric;
  }
}

FunctionBase.prototype.metric = function(metricName: string, props?: cw.MetricOptions) {
  return new cw.Metric({
    "namespace": "AWS/Lambda",
    "metricName": metricName,
    "dimensionsMap": {
      "FunctionName": this.functionName
    },
    ...props
  }).attachTo(this);
};
FunctionBase.prototype.metricThrottles = function(props?: cw.MetricOptions) {
  return this.metric("Throttles", {
    "statistic": "Sum",
    ...props
  });
};
FunctionBase.prototype.metricInvocations = function(props?: cw.MetricOptions) {
  return this.metric("Invocations", {
    "statistic": "Sum",
    ...props
  });
};
FunctionBase.prototype.metricErrors = function(props?: cw.MetricOptions) {
  return this.metric("Errors", {
    "statistic": "Sum",
    ...props
  });
};
FunctionBase.prototype.metricDuration = function(props?: cw.MetricOptions) {
  return this.metric("Duration", {
    "statistic": "Average",
    ...props
  });
};",
  "metrics": "/* eslint-disable prettier/prettier,max-len */
export interface MetricWithDims<D> {
  readonly namespace: string;

  readonly metricName: string;

  readonly statistic: string;

  readonly dimensionsMap: D;
}

export class LambdaMetrics {
  public static concurrentExecutionsMaximum(dimensions: { FunctionName: string; }): MetricWithDims<{ FunctionName: string; }>;

  public static concurrentExecutionsMaximum(dimensions: { FunctionName: string; Resource: string; }): MetricWithDims<{ FunctionName: string; Resource: string; }>;

  public static concurrentExecutionsMaximum(dimensions: { ExecutedVersion: string; FunctionName: string; Resource: string; }): MetricWithDims<{ ExecutedVersion: string; FunctionName: string; Resource: string; }>;

  public static concurrentExecutionsMaximum(dimensions: {  }): MetricWithDims<{  }>;

  public static concurrentExecutionsMaximum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/Lambda",
      "metricName": "ConcurrentExecutions",
      "dimensionsMap": dimensions,
      "statistic": "Maximum"
    };
  }

  public static deadLetterErrorsSum(dimensions: { FunctionName: string; }): MetricWithDims<{ FunctionName: string; }>;

  public static deadLetterErrorsSum(dimensions: { FunctionName: string; Resource: string; }): MetricWithDims<{ FunctionName: string; Resource: string; }>;

  public static deadLetterErrorsSum(dimensions: { ExecutedVersion: string; FunctionName: string; Resource: string; }): MetricWithDims<{ ExecutedVersion: string; FunctionName: string; Resource: string; }>;

  public static deadLetterErrorsSum(dimensions: {  }): MetricWithDims<{  }>;

  public static deadLetterErrorsSum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/Lambda",
      "metricName": "DeadLetterErrors",
      "dimensionsMap": dimensions,
      "statistic": "Sum"
    };
  }

  public static destinationDeliveryFailuresSum(dimensions: { FunctionName: string; }): MetricWithDims<{ FunctionName: string; }>;

  public static destinationDeliveryFailuresSum(dimensions: { FunctionName: string; Resource: string; }): MetricWithDims<{ FunctionName: string; Resource: string; }>;

  public static destinationDeliveryFailuresSum(dimensions: { ExecutedVersion: string; FunctionName: string; Resource: string; }): MetricWithDims<{ ExecutedVersion: string; FunctionName: string; Resource: string; }>;

  public static destinationDeliveryFailuresSum(dimensions: {  }): MetricWithDims<{  }>;

  public static destinationDeliveryFailuresSum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/Lambda",
      "metricName": "DestinationDeliveryFailures",
      "dimensionsMap": dimensions,
      "statistic": "Sum"
    };
  }

  public static durationAverage(dimensions: { FunctionName: string; }): MetricWithDims<{ FunctionName: string; }>;

  public static durationAverage(dimensions: { FunctionName: string; Resource: string; }): MetricWithDims<{ FunctionName: string; Resource: string; }>;

  public static durationAverage(dimensions: { ExecutedVersion: string; FunctionName: string; Resource: string; }): MetricWithDims<{ ExecutedVersion: string; FunctionName: string; Resource: string; }>;

  public static durationAverage(dimensions: {  }): MetricWithDims<{  }>;

  public static durationAverage(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/Lambda",
      "metricName": "Duration",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static errorsSum(dimensions: { FunctionName: string; }): MetricWithDims<{ FunctionName: string; }>;

  public static errorsSum(dimensions: { FunctionName: string; Resource: string; }): MetricWithDims<{ FunctionName: string; Resource: string; }>;

  public static errorsSum(dimensions: { ExecutedVersion: string; FunctionName: string; Resource: string; }): MetricWithDims<{ ExecutedVersion: string; FunctionName: string; Resource: string; }>;

  public static errorsSum(dimensions: {  }): MetricWithDims<{  }>;

  public static errorsSum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/Lambda",
      "metricName": "Errors",
      "dimensionsMap": dimensions,
      "statistic": "Sum"
    };
  }

  public static invocationsSum(dimensions: { FunctionName: string; }): MetricWithDims<{ FunctionName: string; }>;

  public static invocationsSum(dimensions: { FunctionName: string; Resource: string; }): MetricWithDims<{ FunctionName: string; Resource: string; }>;

  public static invocationsSum(dimensions: { ExecutedVersion: string; FunctionName: string; Resource: string; }): MetricWithDims<{ ExecutedVersion: string; FunctionName: string; Resource: string; }>;

  public static invocationsSum(dimensions: {  }): MetricWithDims<{  }>;

  public static invocationsSum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/Lambda",
      "metricName": "Invocations",
      "dimensionsMap": dimensions,
      "statistic": "Sum"
    };
  }

  public static iteratorAgeAverage(dimensions: { FunctionName: string; }): MetricWithDims<{ FunctionName: string; }>;

  public static iteratorAgeAverage(dimensions: { FunctionName: string; Resource: string; }): MetricWithDims<{ FunctionName: string; Resource: string; }>;

  public static iteratorAgeAverage(dimensions: { ExecutedVersion: string; FunctionName: string; Resource: string; }): MetricWithDims<{ ExecutedVersion: string; FunctionName: string; Resource: string; }>;

  public static iteratorAgeAverage(dimensions: {  }): MetricWithDims<{  }>;

  public static iteratorAgeAverage(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/Lambda",
      "metricName": "IteratorAge",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static postRuntimeExtensionsDurationAverage(dimensions: { FunctionName: string; }): MetricWithDims<{ FunctionName: string; }>;

  public static postRuntimeExtensionsDurationAverage(dimensions: { FunctionName: string; Resource: string; }): MetricWithDims<{ FunctionName: string; Resource: string; }>;

  public static postRuntimeExtensionsDurationAverage(dimensions: { ExecutedVersion: string; FunctionName: string; Resource: string; }): MetricWithDims<{ ExecutedVersion: string; FunctionName: string; Resource: string; }>;

  public static postRuntimeExtensionsDurationAverage(dimensions: {  }): MetricWithDims<{  }>;

  public static postRuntimeExtensionsDurationAverage(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/Lambda",
      "metricName": "PostRuntimeExtensionsDuration",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static provisionedConcurrencyInvocationsSum(dimensions: { FunctionName: string; }): MetricWithDims<{ FunctionName: string; }>;

  public static provisionedConcurrencyInvocationsSum(dimensions: { FunctionName: string; Resource: string; }): MetricWithDims<{ FunctionName: string; Resource: string; }>;

  public static provisionedConcurrencyInvocationsSum(dimensions: { ExecutedVersion: string; FunctionName: string; Resource: string; }): MetricWithDims<{ ExecutedVersion: string; FunctionName: string; Resource: string; }>;

  public static provisionedConcurrencyInvocationsSum(dimensions: {  }): MetricWithDims<{  }>;

  public static provisionedConcurrencyInvocationsSum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/Lambda",
      "metricName": "ProvisionedConcurrencyInvocations",
      "dimensionsMap": dimensions,
      "statistic": "Sum"
    };
  }

  public static provisionedConcurrencySpilloverInvocationsSum(dimensions: { FunctionName: string; }): MetricWithDims<{ FunctionName: string; }>;

  public static provisionedConcurrencySpilloverInvocationsSum(dimensions: { FunctionName: string; Resource: string; }): MetricWithDims<{ FunctionName: string; Resource: string; }>;

  public static provisionedConcurrencySpilloverInvocationsSum(dimensions: { ExecutedVersion: string; FunctionName: string; Resource: string; }): MetricWithDims<{ ExecutedVersion: string; FunctionName: string; Resource: string; }>;

  public static provisionedConcurrencySpilloverInvocationsSum(dimensions: {  }): MetricWithDims<{  }>;

  public static provisionedConcurrencySpilloverInvocationsSum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/Lambda",
      "metricName": "ProvisionedConcurrencySpilloverInvocations",
      "dimensionsMap": dimensions,
      "statistic": "Sum"
    };
  }

  public static provisionedConcurrencyUtilizationMaximum(dimensions: { FunctionName: string; }): MetricWithDims<{ FunctionName: string; }>;

  public static provisionedConcurrencyUtilizationMaximum(dimensions: { FunctionName: string; Resource: string; }): MetricWithDims<{ FunctionName: string; Resource: string; }>;

  public static provisionedConcurrencyUtilizationMaximum(dimensions: { ExecutedVersion: string; FunctionName: string; Resource: string; }): MetricWithDims<{ ExecutedVersion: string; FunctionName: string; Resource: string; }>;

  public static provisionedConcurrencyUtilizationMaximum(dimensions: {  }): MetricWithDims<{  }>;

  public static provisionedConcurrencyUtilizationMaximum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/Lambda",
      "metricName": "ProvisionedConcurrencyUtilization",
      "dimensionsMap": dimensions,
      "statistic": "Maximum"
    };
  }

  public static provisionedConcurrentExecutionsMaximum(dimensions: { FunctionName: string; }): MetricWithDims<{ FunctionName: string; }>;

  public static provisionedConcurrentExecutionsMaximum(dimensions: { FunctionName: string; Resource: string; }): MetricWithDims<{ FunctionName: string; Resource: string; }>;

  public static provisionedConcurrentExecutionsMaximum(dimensions: { ExecutedVersion: string; FunctionName: string; Resource: string; }): MetricWithDims<{ ExecutedVersion: string; FunctionName: string; Resource: string; }>;

  public static provisionedConcurrentExecutionsMaximum(dimensions: {  }): MetricWithDims<{  }>;

  public static provisionedConcurrentExecutionsMaximum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/Lambda",
      "metricName": "ProvisionedConcurrentExecutions",
      "dimensionsMap": dimensions,
      "statistic": "Maximum"
    };
  }

  public static throttlesSum(dimensions: { FunctionName: string; }): MetricWithDims<{ FunctionName: string; }>;

  public static throttlesSum(dimensions: { FunctionName: string; Resource: string; }): MetricWithDims<{ FunctionName: string; Resource: string; }>;

  public static throttlesSum(dimensions: { ExecutedVersion: string; FunctionName: string; Resource: string; }): MetricWithDims<{ ExecutedVersion: string; FunctionName: string; Resource: string; }>;

  public static throttlesSum(dimensions: {  }): MetricWithDims<{  }>;

  public static throttlesSum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/Lambda",
      "metricName": "Throttles",
      "dimensionsMap": dimensions,
      "statistic": "Sum"
    };
  }

  public static unreservedConcurrentExecutionsMaximum(dimensions: { FunctionName: string; }): MetricWithDims<{ FunctionName: string; }>;

  public static unreservedConcurrentExecutionsMaximum(dimensions: { FunctionName: string; Resource: string; }): MetricWithDims<{ FunctionName: string; Resource: string; }>;

  public static unreservedConcurrentExecutionsMaximum(dimensions: { ExecutedVersion: string; FunctionName: string; Resource: string; }): MetricWithDims<{ ExecutedVersion: string; FunctionName: string; Resource: string; }>;

  public static unreservedConcurrentExecutionsMaximum(dimensions: {  }): MetricWithDims<{  }>;

  public static unreservedConcurrentExecutionsMaximum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/Lambda",
      "metricName": "UnreservedConcurrentExecutions",
      "dimensionsMap": dimensions,
      "statistic": "Maximum"
    };
  }
}",
  "module": "/* eslint-disable prettier/prettier,max-len */
import * as cdk from "aws-cdk-lib";
import * as constructs from "constructs";
import * as cfn_parse from "aws-cdk-lib/core/lib/helpers-internal";

/**
 * The \`AWS::Lambda::Function\` resource creates a Lambda function.
 *
 * To create a function, you need a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html) and an [execution role](https://docs.aws.amazon.com/lambda/latest/dg/lambda-intro-execution-role.html) . The deployment package is a .zip file archive or container image that contains your function code. The execution role grants the function permission to use AWS services, such as Amazon CloudWatch Logs for log streaming and AWS X-Ray for request tracing.
 *
 * You set the package type to \`Image\` if the deployment package is a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html) . For a container image, the code property must include the URI of a container image in the Amazon ECR registry. You do not need to specify the handler and runtime properties.
 *
 * You set the package type to \`Zip\` if the deployment package is a [.zip file archive](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html#gettingstarted-package-zip) . For a .zip file archive, the code property specifies the location of the .zip file. You must also specify the handler and runtime properties. For a Python example, see [Deploy Python Lambda functions with .zip file archives](https://docs.aws.amazon.com/lambda/latest/dg/python-package.html) .
 *
 * You can use [code signing](https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html) if your deployment package is a .zip file archive. To enable code signing for this function, specify the ARN of a code-signing configuration. When a user attempts to deploy a code package with \`UpdateFunctionCode\` , Lambda checks that the code package has a valid signature from a trusted publisher. The code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
 *
 * Note that you configure [provisioned concurrency](https://docs.aws.amazon.com/lambda/latest/dg/provisioned-concurrency.html) on a \`AWS::Lambda::Version\` or a \`AWS::Lambda::Alias\` .
 *
 * For a complete introduction to Lambda functions, see [What is Lambda?](https://docs.aws.amazon.com/lambda/latest/dg/lambda-welcome.html) in the *Lambda developer guide.*
 *
 * @stability external
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html
 */
export class CfnFunction extends cdk.CfnResource implements cdk.IInspectable, cdk.ITaggable {
  /**
   * The CloudFormation resource type name for this resource class.
   */
  public static readonly CFN_RESOURCE_TYPE_NAME: string = "AWS::Lambda::Function";

  /**
   * Build a CfnFunction from CloudFormation properties
   *
   * A factory method that creates a new instance of this class from an object
   * containing the CloudFormation properties of this resource.
   * Used in the @aws-cdk/cloudformation-include module.
   *
   * @internal
   */
  public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnFunction {
    resourceAttributes = resourceAttributes || {};
    const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);
    const propsResult = CfnFunctionPropsFromCloudFormation(resourceProperties);
    if (cdk.isResolvableObject(propsResult.value)) {
      throw new Error("Unexpected IResolvable");
    }
    const ret = new CfnFunction(scope, id, propsResult.value);
    for (const [propKey, propVal] of Object.entries(propsResult.extraProperties)) {
      ret.addPropertyOverride(propKey, propVal);
    }
    options.parser.handleAttributes(ret, resourceAttributes, id);
    return ret;
  }

  /**
   * The Amazon Resource Name (ARN) of the function.
   *
   * @cloudformationAttribute Arn
   */
  public readonly attrArn: string;

  /**
   * The function's SnapStart Response. When set to PublishedVersions, Lambda creates a snapshot of the execution environment when you publish a function version.
   *
   * @cloudformationAttribute SnapStartResponse
   */
  public readonly attrSnapStartResponse: cdk.IResolvable;

  /**
   * Applying SnapStart setting on function resource type.
   *
   * @cloudformationAttribute SnapStartResponse.ApplyOn
   */
  public readonly attrSnapStartResponseApplyOn: string;

  /**
   * Indicates whether SnapStart is activated for the specified function version.
   *
   * @cloudformationAttribute SnapStartResponse.OptimizationStatus
   */
  public readonly attrSnapStartResponseOptimizationStatus: string;

  /**
   * The instruction set architecture that the function supports.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-architectures
   */
  public architectures?: Array<string>;

  /**
   * The code for the function.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-code
   */
  public code: CfnFunction.CodeProperty | cdk.IResolvable;

  /**
   * To enable code signing for this function, specify the ARN of a code-signing configuration.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-codesigningconfigarn
   */
  public codeSigningConfigArn?: string;

  /**
   * A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-deadletterconfig
   */
  public deadLetterConfig?: CfnFunction.DeadLetterConfigProperty | cdk.IResolvable;

  /**
   * A description of the function.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-description
   */
  public description?: string;

  /**
   * Environment variables that are accessible from function code during execution.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-environment
   */
  public environment?: CfnFunction.EnvironmentProperty | cdk.IResolvable;

  /**
   * The size of the function's \`/tmp\` directory in MB.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-ephemeralstorage
   */
  public ephemeralStorage?: CfnFunction.EphemeralStorageProperty | cdk.IResolvable;

  /**
   * Connection settings for an Amazon EFS file system.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-filesystemconfigs
   */
  public fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;

  /**
   * The name of the Lambda function, up to 64 characters in length.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-functionname
   */
  public functionName?: string;

  /**
   * The name of the method within your code that Lambda calls to run your function.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-handler
   */
  public handler?: string;

  /**
   * Configuration values that override the container image Dockerfile settings.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-imageconfig
   */
  public imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;

  /**
   * The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-kmskeyarn
   */
  public kmsKeyArn?: string;

  /**
   * A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-layers
   */
  public layers?: Array<string>;

  /**
   * The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-memorysize
   */
  public memorySize?: number;

  /**
   * The type of deployment package.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-packagetype
   */
  public packageType?: string;

  /**
   * The number of simultaneous executions to reserve for the function.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-reservedconcurrentexecutions
   */
  public reservedConcurrentExecutions?: number;

  /**
   * The Amazon Resource Name (ARN) of the function's execution role.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-role
   */
  public role: string;

  /**
   * The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-runtime
   */
  public runtime?: string;

  /**
   * Sets the runtime management configuration for a function's version.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-runtimemanagementconfig
   */
  public runtimeManagementConfig?: cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty;

  /**
   * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-snapstart
   */
  public snapStart?: cdk.IResolvable | CfnFunction.SnapStartProperty;

  /**
   * Tag Manager which manages the tags for this resource
   */
  public readonly tags: cdk.TagManager;

  /**
   * A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-tags
   */
  public tagsRaw?: Array<cdk.CfnTag>;

  /**
   * The amount of time (in seconds) that Lambda allows a function to run before stopping it.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-timeout
   */
  public timeout?: number;

  /**
   * Set \`Mode\` to \`Active\` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-tracingconfig
   */
  public tracingConfig?: cdk.IResolvable | CfnFunction.TracingConfigProperty;

  /**
   * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-vpcconfig
   */
  public vpcConfig?: cdk.IResolvable | CfnFunction.VpcConfigProperty;

  /**
   * @param scope Scope in which this resource is defined
   * @param id Construct identifier for this resource (unique in its scope)
   * @param props Resource properties
   */
  public constructor(scope: constructs.Construct, id: string, props: CfnFunctionProps) {
    super(scope, id, {
      "type": CfnFunction.CFN_RESOURCE_TYPE_NAME,
      "properties": props
    });

    cdk.requireProperty(props, "code", this);
    cdk.requireProperty(props, "role", this);

    this.attrArn = cdk.Token.asString(this.getAtt("Arn", cdk.ResolutionTypeHint.STRING));
    this.attrSnapStartResponse = this.getAtt("SnapStartResponse");
    this.attrSnapStartResponseApplyOn = cdk.Token.asString(this.getAtt("SnapStartResponse.ApplyOn", cdk.ResolutionTypeHint.STRING));
    this.attrSnapStartResponseOptimizationStatus = cdk.Token.asString(this.getAtt("SnapStartResponse.OptimizationStatus", cdk.ResolutionTypeHint.STRING));
    this.architectures = props.architectures;
    this.code = props.code;
    this.codeSigningConfigArn = props.codeSigningConfigArn;
    this.deadLetterConfig = props.deadLetterConfig;
    this.description = props.description;
    this.environment = props.environment;
    this.ephemeralStorage = props.ephemeralStorage;
    this.fileSystemConfigs = props.fileSystemConfigs;
    this.functionName = props.functionName;
    this.handler = props.handler;
    this.imageConfig = props.imageConfig;
    this.kmsKeyArn = props.kmsKeyArn;
    this.layers = props.layers;
    this.memorySize = props.memorySize;
    this.packageType = props.packageType;
    this.reservedConcurrentExecutions = props.reservedConcurrentExecutions;
    this.role = props.role;
    this.runtime = props.runtime;
    this.runtimeManagementConfig = props.runtimeManagementConfig;
    this.snapStart = props.snapStart;
    this.tags = new cdk.TagManager(cdk.TagType.STANDARD, "AWS::Lambda::Function", props.tags, {
      "tagPropertyName": "tags"
    });
    this.tagsRaw = props.tags;
    this.timeout = props.timeout;
    this.tracingConfig = props.tracingConfig;
    this.vpcConfig = props.vpcConfig;
  }

  protected get cfnProperties(): Record<string, any> {
    return {
      "architectures": this.architectures,
      "code": this.code,
      "codeSigningConfigArn": this.codeSigningConfigArn,
      "deadLetterConfig": this.deadLetterConfig,
      "description": this.description,
      "environment": this.environment,
      "ephemeralStorage": this.ephemeralStorage,
      "fileSystemConfigs": this.fileSystemConfigs,
      "functionName": this.functionName,
      "handler": this.handler,
      "imageConfig": this.imageConfig,
      "kmsKeyArn": this.kmsKeyArn,
      "layers": this.layers,
      "memorySize": this.memorySize,
      "packageType": this.packageType,
      "reservedConcurrentExecutions": this.reservedConcurrentExecutions,
      "role": this.role,
      "runtime": this.runtime,
      "runtimeManagementConfig": this.runtimeManagementConfig,
      "snapStart": this.snapStart,
      "tags": this.tags.renderTags(),
      "timeout": this.timeout,
      "tracingConfig": this.tracingConfig,
      "vpcConfig": this.vpcConfig
    };
  }

  /**
   * Examines the CloudFormation resource and discloses attributes
   *
   * @param inspector tree inspector to collect and process attributes
   */
  public inspect(inspector: cdk.TreeInspector): void {
    inspector.addAttribute("aws:cdk:cloudformation:type", CfnFunction.CFN_RESOURCE_TYPE_NAME);
    inspector.addAttribute("aws:cdk:cloudformation:props", this.cfnProperties);
  }

  protected renderProperties(props: Record<string, any>): Record<string, any> {
    return convertCfnFunctionPropsToCloudFormation(props);
  }
}

export namespace CfnFunction {
  /**
   * The function's [AWS X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) tracing configuration. To sample and record incoming requests, set \`Mode\` to \`Active\` .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html
   */
  export interface TracingConfigProperty {
    /**
     * The instruction set architecture that the function supports.
     *
     * Enter a string array with one of the valid values (arm64 or x86_64). The default value is \`x86_64\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-architectures
     */
    readonly architectures?: Array<string>;

    /**
     * The code for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-code
     */
    readonly code: CfnFunction.CodeProperty | cdk.IResolvable;

    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration.
     *
     * A code-signing configuration
     * includes a set of signing profiles, which define the trusted publishers for this function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-codesigningconfigarn
     */
    readonly codeSigningConfigArn?: string;

    /**
     * A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     *
     * For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-deadletterconfig
     */
    readonly deadLetterConfig?: CfnFunction.DeadLetterConfigProperty | cdk.IResolvable;

    /**
     * A description of the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-description
     */
    readonly description?: string;

    /**
     * Environment variables that are accessible from function code during execution.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-environment
     */
    readonly environment?: CfnFunction.EnvironmentProperty | cdk.IResolvable;

    /**
     * The size of the function's \`/tmp\` directory in MB.
     *
     * The default value is 512, but it can be any whole number between 512 and 10,240 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-ephemeralstorage
     */
    readonly ephemeralStorage?: CfnFunction.EphemeralStorageProperty | cdk.IResolvable;

    /**
     * Connection settings for an Amazon EFS file system.
     *
     * To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a \`DependsOn\` attribute to ensure that the mount target is created or updated before the function.
     *
     * For more information about using the \`DependsOn\` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-filesystemconfigs
     */
    readonly fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * The name of the Lambda function, up to 64 characters in length.
     *
     * If you don't specify a name, AWS CloudFormation generates one.
     *
     * If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-functionname
     */
    readonly functionName?: string;

    /**
     * The name of the method within your code that Lambda calls to run your function.
     *
     * Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-handler
     */
    readonly handler?: string;

    /**
     * Configuration values that override the container image Dockerfile settings.
     *
     * For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-imageconfig
     */
    readonly imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;

    /**
     * The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-kmskeyarn
     */
    readonly kmsKeyArn?: string;

    /**
     * A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-layers
     */
    readonly layers?: Array<string>;

    /**
     * The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-memorysize
     */
    readonly memorySize?: number;

    /**
     * The type of deployment package.
     *
     * Set to \`Image\` for container image and set \`Zip\` for .zip file archive.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-packagetype
     */
    readonly packageType?: string;

    /**
     * The number of simultaneous executions to reserve for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-reservedconcurrentexecutions
     */
    readonly reservedConcurrentExecutions?: number;

    /**
     * The Amazon Resource Name (ARN) of the function's execution role.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-role
     */
    readonly role: string;

    /**
     * The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive.
     *
     * The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-runtime
     */
    readonly runtime?: string;

    /**
     * Sets the runtime management configuration for a function's version.
     *
     * For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-runtimemanagementconfig
     */
    readonly runtimeManagementConfig?: cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty;

    /**
     * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-snapstart
     */
    readonly snapStart?: cdk.IResolvable | CfnFunction.SnapStartProperty;

    /**
     * A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnFunction.TagProperty> | cdk.IResolvable;

    /**
     * The amount of time (in seconds) that Lambda allows a function to run before stopping it.
     *
     * The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-timeout
     */
    readonly timeout?: number;

    /**
     * Set \`Mode\` to \`Active\` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-tracingconfig
     */
    readonly tracingConfig?: cdk.IResolvable | CfnFunction.TracingConfigProperty;

    /**
     * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
     *
     * When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-vpcconfig
     */
    readonly vpcConfig?: cdk.IResolvable | CfnFunction.VpcConfigProperty;
  }

  /**
   * The VPC security groups and subnets that are attached to a Lambda function.
   *
   * When you connect a function to a VPC, Lambda creates an elastic network interface for each combination of security group and subnet in the function's VPC configuration. The function can only access resources and the internet through that VPC. For more information, see [VPC Settings](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .
   *
   * > When you delete a function, AWS CloudFormation monitors the state of its network interfaces and waits for Lambda to delete them before proceeding. If the VPC is defined in the same stack, the network interfaces need to be deleted by Lambda before AWS CloudFormation can delete the VPC's resources.
   * >
   * > To monitor network interfaces, AWS CloudFormation needs the \`ec2:DescribeNetworkInterfaces\` permission. It obtains this from the user or role that modifies the stack. If you don't provide this permission, AWS CloudFormation does not wait for network interfaces to be deleted.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html
   */
  export interface VpcConfigProperty {
    /**
     * The instruction set architecture that the function supports.
     *
     * Enter a string array with one of the valid values (arm64 or x86_64). The default value is \`x86_64\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-architectures
     */
    readonly architectures?: Array<string>;

    /**
     * The code for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-code
     */
    readonly code: CfnFunction.CodeProperty | cdk.IResolvable;

    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration.
     *
     * A code-signing configuration
     * includes a set of signing profiles, which define the trusted publishers for this function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-codesigningconfigarn
     */
    readonly codeSigningConfigArn?: string;

    /**
     * A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     *
     * For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-deadletterconfig
     */
    readonly deadLetterConfig?: CfnFunction.DeadLetterConfigProperty | cdk.IResolvable;

    /**
     * A description of the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-description
     */
    readonly description?: string;

    /**
     * Environment variables that are accessible from function code during execution.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-environment
     */
    readonly environment?: CfnFunction.EnvironmentProperty | cdk.IResolvable;

    /**
     * The size of the function's \`/tmp\` directory in MB.
     *
     * The default value is 512, but it can be any whole number between 512 and 10,240 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-ephemeralstorage
     */
    readonly ephemeralStorage?: CfnFunction.EphemeralStorageProperty | cdk.IResolvable;

    /**
     * Connection settings for an Amazon EFS file system.
     *
     * To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a \`DependsOn\` attribute to ensure that the mount target is created or updated before the function.
     *
     * For more information about using the \`DependsOn\` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-filesystemconfigs
     */
    readonly fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * The name of the Lambda function, up to 64 characters in length.
     *
     * If you don't specify a name, AWS CloudFormation generates one.
     *
     * If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-functionname
     */
    readonly functionName?: string;

    /**
     * The name of the method within your code that Lambda calls to run your function.
     *
     * Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-handler
     */
    readonly handler?: string;

    /**
     * Configuration values that override the container image Dockerfile settings.
     *
     * For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-imageconfig
     */
    readonly imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;

    /**
     * The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-kmskeyarn
     */
    readonly kmsKeyArn?: string;

    /**
     * A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-layers
     */
    readonly layers?: Array<string>;

    /**
     * The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-memorysize
     */
    readonly memorySize?: number;

    /**
     * The type of deployment package.
     *
     * Set to \`Image\` for container image and set \`Zip\` for .zip file archive.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-packagetype
     */
    readonly packageType?: string;

    /**
     * The number of simultaneous executions to reserve for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-reservedconcurrentexecutions
     */
    readonly reservedConcurrentExecutions?: number;

    /**
     * The Amazon Resource Name (ARN) of the function's execution role.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-role
     */
    readonly role: string;

    /**
     * The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive.
     *
     * The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-runtime
     */
    readonly runtime?: string;

    /**
     * Sets the runtime management configuration for a function's version.
     *
     * For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-runtimemanagementconfig
     */
    readonly runtimeManagementConfig?: cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty;

    /**
     * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-snapstart
     */
    readonly snapStart?: cdk.IResolvable | CfnFunction.SnapStartProperty;

    /**
     * A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnFunction.TagProperty> | cdk.IResolvable;

    /**
     * The amount of time (in seconds) that Lambda allows a function to run before stopping it.
     *
     * The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-timeout
     */
    readonly timeout?: number;

    /**
     * Set \`Mode\` to \`Active\` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-tracingconfig
     */
    readonly tracingConfig?: cdk.IResolvable | CfnFunction.TracingConfigProperty;

    /**
     * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
     *
     * When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-vpcconfig
     */
    readonly vpcConfig?: cdk.IResolvable | CfnFunction.VpcConfigProperty;
  }

  /**
   * Sets the runtime management configuration for a function's version.
   *
   * For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html
   */
  export interface RuntimeManagementConfigProperty {
    /**
     * The instruction set architecture that the function supports.
     *
     * Enter a string array with one of the valid values (arm64 or x86_64). The default value is \`x86_64\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-architectures
     */
    readonly architectures?: Array<string>;

    /**
     * The code for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-code
     */
    readonly code: CfnFunction.CodeProperty | cdk.IResolvable;

    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration.
     *
     * A code-signing configuration
     * includes a set of signing profiles, which define the trusted publishers for this function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-codesigningconfigarn
     */
    readonly codeSigningConfigArn?: string;

    /**
     * A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     *
     * For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-deadletterconfig
     */
    readonly deadLetterConfig?: CfnFunction.DeadLetterConfigProperty | cdk.IResolvable;

    /**
     * A description of the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-description
     */
    readonly description?: string;

    /**
     * Environment variables that are accessible from function code during execution.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-environment
     */
    readonly environment?: CfnFunction.EnvironmentProperty | cdk.IResolvable;

    /**
     * The size of the function's \`/tmp\` directory in MB.
     *
     * The default value is 512, but it can be any whole number between 512 and 10,240 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-ephemeralstorage
     */
    readonly ephemeralStorage?: CfnFunction.EphemeralStorageProperty | cdk.IResolvable;

    /**
     * Connection settings for an Amazon EFS file system.
     *
     * To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a \`DependsOn\` attribute to ensure that the mount target is created or updated before the function.
     *
     * For more information about using the \`DependsOn\` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-filesystemconfigs
     */
    readonly fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * The name of the Lambda function, up to 64 characters in length.
     *
     * If you don't specify a name, AWS CloudFormation generates one.
     *
     * If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-functionname
     */
    readonly functionName?: string;

    /**
     * The name of the method within your code that Lambda calls to run your function.
     *
     * Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-handler
     */
    readonly handler?: string;

    /**
     * Configuration values that override the container image Dockerfile settings.
     *
     * For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-imageconfig
     */
    readonly imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;

    /**
     * The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-kmskeyarn
     */
    readonly kmsKeyArn?: string;

    /**
     * A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-layers
     */
    readonly layers?: Array<string>;

    /**
     * The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-memorysize
     */
    readonly memorySize?: number;

    /**
     * The type of deployment package.
     *
     * Set to \`Image\` for container image and set \`Zip\` for .zip file archive.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-packagetype
     */
    readonly packageType?: string;

    /**
     * The number of simultaneous executions to reserve for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-reservedconcurrentexecutions
     */
    readonly reservedConcurrentExecutions?: number;

    /**
     * The Amazon Resource Name (ARN) of the function's execution role.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-role
     */
    readonly role: string;

    /**
     * The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive.
     *
     * The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-runtime
     */
    readonly runtime?: string;

    /**
     * Sets the runtime management configuration for a function's version.
     *
     * For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-runtimemanagementconfig
     */
    readonly runtimeManagementConfig?: cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty;

    /**
     * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-snapstart
     */
    readonly snapStart?: cdk.IResolvable | CfnFunction.SnapStartProperty;

    /**
     * A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnFunction.TagProperty> | cdk.IResolvable;

    /**
     * The amount of time (in seconds) that Lambda allows a function to run before stopping it.
     *
     * The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-timeout
     */
    readonly timeout?: number;

    /**
     * Set \`Mode\` to \`Active\` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-tracingconfig
     */
    readonly tracingConfig?: cdk.IResolvable | CfnFunction.TracingConfigProperty;

    /**
     * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
     *
     * When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-vpcconfig
     */
    readonly vpcConfig?: cdk.IResolvable | CfnFunction.VpcConfigProperty;
  }

  /**
   * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html
   */
  export interface SnapStartProperty {
    /**
     * The instruction set architecture that the function supports.
     *
     * Enter a string array with one of the valid values (arm64 or x86_64). The default value is \`x86_64\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-architectures
     */
    readonly architectures?: Array<string>;

    /**
     * The code for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-code
     */
    readonly code: CfnFunction.CodeProperty | cdk.IResolvable;

    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration.
     *
     * A code-signing configuration
     * includes a set of signing profiles, which define the trusted publishers for this function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-codesigningconfigarn
     */
    readonly codeSigningConfigArn?: string;

    /**
     * A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     *
     * For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-deadletterconfig
     */
    readonly deadLetterConfig?: CfnFunction.DeadLetterConfigProperty | cdk.IResolvable;

    /**
     * A description of the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-description
     */
    readonly description?: string;

    /**
     * Environment variables that are accessible from function code during execution.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-environment
     */
    readonly environment?: CfnFunction.EnvironmentProperty | cdk.IResolvable;

    /**
     * The size of the function's \`/tmp\` directory in MB.
     *
     * The default value is 512, but it can be any whole number between 512 and 10,240 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-ephemeralstorage
     */
    readonly ephemeralStorage?: CfnFunction.EphemeralStorageProperty | cdk.IResolvable;

    /**
     * Connection settings for an Amazon EFS file system.
     *
     * To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a \`DependsOn\` attribute to ensure that the mount target is created or updated before the function.
     *
     * For more information about using the \`DependsOn\` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-filesystemconfigs
     */
    readonly fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * The name of the Lambda function, up to 64 characters in length.
     *
     * If you don't specify a name, AWS CloudFormation generates one.
     *
     * If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-functionname
     */
    readonly functionName?: string;

    /**
     * The name of the method within your code that Lambda calls to run your function.
     *
     * Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-handler
     */
    readonly handler?: string;

    /**
     * Configuration values that override the container image Dockerfile settings.
     *
     * For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-imageconfig
     */
    readonly imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;

    /**
     * The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-kmskeyarn
     */
    readonly kmsKeyArn?: string;

    /**
     * A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-layers
     */
    readonly layers?: Array<string>;

    /**
     * The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-memorysize
     */
    readonly memorySize?: number;

    /**
     * The type of deployment package.
     *
     * Set to \`Image\` for container image and set \`Zip\` for .zip file archive.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-packagetype
     */
    readonly packageType?: string;

    /**
     * The number of simultaneous executions to reserve for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-reservedconcurrentexecutions
     */
    readonly reservedConcurrentExecutions?: number;

    /**
     * The Amazon Resource Name (ARN) of the function's execution role.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-role
     */
    readonly role: string;

    /**
     * The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive.
     *
     * The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-runtime
     */
    readonly runtime?: string;

    /**
     * Sets the runtime management configuration for a function's version.
     *
     * For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-runtimemanagementconfig
     */
    readonly runtimeManagementConfig?: cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty;

    /**
     * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-snapstart
     */
    readonly snapStart?: cdk.IResolvable | CfnFunction.SnapStartProperty;

    /**
     * A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnFunction.TagProperty> | cdk.IResolvable;

    /**
     * The amount of time (in seconds) that Lambda allows a function to run before stopping it.
     *
     * The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-timeout
     */
    readonly timeout?: number;

    /**
     * Set \`Mode\` to \`Active\` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-tracingconfig
     */
    readonly tracingConfig?: cdk.IResolvable | CfnFunction.TracingConfigProperty;

    /**
     * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
     *
     * When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-vpcconfig
     */
    readonly vpcConfig?: cdk.IResolvable | CfnFunction.VpcConfigProperty;
  }

  /**
   * Details about the connection between a Lambda function and an [Amazon EFS file system](https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html) .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html
   */
  export interface FileSystemConfigProperty {
    /**
     * The instruction set architecture that the function supports.
     *
     * Enter a string array with one of the valid values (arm64 or x86_64). The default value is \`x86_64\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-architectures
     */
    readonly architectures?: Array<string>;

    /**
     * The code for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-code
     */
    readonly code: CfnFunction.CodeProperty | cdk.IResolvable;

    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration.
     *
     * A code-signing configuration
     * includes a set of signing profiles, which define the trusted publishers for this function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-codesigningconfigarn
     */
    readonly codeSigningConfigArn?: string;

    /**
     * A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     *
     * For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-deadletterconfig
     */
    readonly deadLetterConfig?: CfnFunction.DeadLetterConfigProperty | cdk.IResolvable;

    /**
     * A description of the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-description
     */
    readonly description?: string;

    /**
     * Environment variables that are accessible from function code during execution.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-environment
     */
    readonly environment?: CfnFunction.EnvironmentProperty | cdk.IResolvable;

    /**
     * The size of the function's \`/tmp\` directory in MB.
     *
     * The default value is 512, but it can be any whole number between 512 and 10,240 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-ephemeralstorage
     */
    readonly ephemeralStorage?: CfnFunction.EphemeralStorageProperty | cdk.IResolvable;

    /**
     * Connection settings for an Amazon EFS file system.
     *
     * To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a \`DependsOn\` attribute to ensure that the mount target is created or updated before the function.
     *
     * For more information about using the \`DependsOn\` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-filesystemconfigs
     */
    readonly fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * The name of the Lambda function, up to 64 characters in length.
     *
     * If you don't specify a name, AWS CloudFormation generates one.
     *
     * If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-functionname
     */
    readonly functionName?: string;

    /**
     * The name of the method within your code that Lambda calls to run your function.
     *
     * Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-handler
     */
    readonly handler?: string;

    /**
     * Configuration values that override the container image Dockerfile settings.
     *
     * For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-imageconfig
     */
    readonly imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;

    /**
     * The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-kmskeyarn
     */
    readonly kmsKeyArn?: string;

    /**
     * A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-layers
     */
    readonly layers?: Array<string>;

    /**
     * The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-memorysize
     */
    readonly memorySize?: number;

    /**
     * The type of deployment package.
     *
     * Set to \`Image\` for container image and set \`Zip\` for .zip file archive.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-packagetype
     */
    readonly packageType?: string;

    /**
     * The number of simultaneous executions to reserve for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-reservedconcurrentexecutions
     */
    readonly reservedConcurrentExecutions?: number;

    /**
     * The Amazon Resource Name (ARN) of the function's execution role.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-role
     */
    readonly role: string;

    /**
     * The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive.
     *
     * The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-runtime
     */
    readonly runtime?: string;

    /**
     * Sets the runtime management configuration for a function's version.
     *
     * For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-runtimemanagementconfig
     */
    readonly runtimeManagementConfig?: cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty;

    /**
     * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-snapstart
     */
    readonly snapStart?: cdk.IResolvable | CfnFunction.SnapStartProperty;

    /**
     * A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnFunction.TagProperty> | cdk.IResolvable;

    /**
     * The amount of time (in seconds) that Lambda allows a function to run before stopping it.
     *
     * The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-timeout
     */
    readonly timeout?: number;

    /**
     * Set \`Mode\` to \`Active\` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-tracingconfig
     */
    readonly tracingConfig?: cdk.IResolvable | CfnFunction.TracingConfigProperty;

    /**
     * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
     *
     * When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-vpcconfig
     */
    readonly vpcConfig?: cdk.IResolvable | CfnFunction.VpcConfigProperty;
  }

  /**
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html
   */
  export interface TagProperty {
    /**
     * The instruction set architecture that the function supports.
     *
     * Enter a string array with one of the valid values (arm64 or x86_64). The default value is \`x86_64\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-architectures
     */
    readonly architectures?: Array<string>;

    /**
     * The code for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-code
     */
    readonly code: CfnFunction.CodeProperty | cdk.IResolvable;

    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration.
     *
     * A code-signing configuration
     * includes a set of signing profiles, which define the trusted publishers for this function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-codesigningconfigarn
     */
    readonly codeSigningConfigArn?: string;

    /**
     * A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     *
     * For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-deadletterconfig
     */
    readonly deadLetterConfig?: CfnFunction.DeadLetterConfigProperty | cdk.IResolvable;

    /**
     * A description of the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-description
     */
    readonly description?: string;

    /**
     * Environment variables that are accessible from function code during execution.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-environment
     */
    readonly environment?: CfnFunction.EnvironmentProperty | cdk.IResolvable;

    /**
     * The size of the function's \`/tmp\` directory in MB.
     *
     * The default value is 512, but it can be any whole number between 512 and 10,240 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-ephemeralstorage
     */
    readonly ephemeralStorage?: CfnFunction.EphemeralStorageProperty | cdk.IResolvable;

    /**
     * Connection settings for an Amazon EFS file system.
     *
     * To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a \`DependsOn\` attribute to ensure that the mount target is created or updated before the function.
     *
     * For more information about using the \`DependsOn\` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-filesystemconfigs
     */
    readonly fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * The name of the Lambda function, up to 64 characters in length.
     *
     * If you don't specify a name, AWS CloudFormation generates one.
     *
     * If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-functionname
     */
    readonly functionName?: string;

    /**
     * The name of the method within your code that Lambda calls to run your function.
     *
     * Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-handler
     */
    readonly handler?: string;

    /**
     * Configuration values that override the container image Dockerfile settings.
     *
     * For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-imageconfig
     */
    readonly imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;

    /**
     * The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-kmskeyarn
     */
    readonly kmsKeyArn?: string;

    /**
     * A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-layers
     */
    readonly layers?: Array<string>;

    /**
     * The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-memorysize
     */
    readonly memorySize?: number;

    /**
     * The type of deployment package.
     *
     * Set to \`Image\` for container image and set \`Zip\` for .zip file archive.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-packagetype
     */
    readonly packageType?: string;

    /**
     * The number of simultaneous executions to reserve for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-reservedconcurrentexecutions
     */
    readonly reservedConcurrentExecutions?: number;

    /**
     * The Amazon Resource Name (ARN) of the function's execution role.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-role
     */
    readonly role: string;

    /**
     * The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive.
     *
     * The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-runtime
     */
    readonly runtime?: string;

    /**
     * Sets the runtime management configuration for a function's version.
     *
     * For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-runtimemanagementconfig
     */
    readonly runtimeManagementConfig?: cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty;

    /**
     * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-snapstart
     */
    readonly snapStart?: cdk.IResolvable | CfnFunction.SnapStartProperty;

    /**
     * A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnFunction.TagProperty> | cdk.IResolvable;

    /**
     * The amount of time (in seconds) that Lambda allows a function to run before stopping it.
     *
     * The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-timeout
     */
    readonly timeout?: number;

    /**
     * Set \`Mode\` to \`Active\` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-tracingconfig
     */
    readonly tracingConfig?: cdk.IResolvable | CfnFunction.TracingConfigProperty;

    /**
     * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
     *
     * When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tag.html#cfn-lambda-function-tag-vpcconfig
     */
    readonly vpcConfig?: cdk.IResolvable | CfnFunction.VpcConfigProperty;
  }

  /**
   * Configuration values that override the container image Dockerfile settings.
   *
   * For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html
   */
  export interface ImageConfigProperty {
    /**
     * The instruction set architecture that the function supports.
     *
     * Enter a string array with one of the valid values (arm64 or x86_64). The default value is \`x86_64\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-architectures
     */
    readonly architectures?: Array<string>;

    /**
     * The code for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-code
     */
    readonly code: CfnFunction.CodeProperty | cdk.IResolvable;

    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration.
     *
     * A code-signing configuration
     * includes a set of signing profiles, which define the trusted publishers for this function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-codesigningconfigarn
     */
    readonly codeSigningConfigArn?: string;

    /**
     * A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     *
     * For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-deadletterconfig
     */
    readonly deadLetterConfig?: CfnFunction.DeadLetterConfigProperty | cdk.IResolvable;

    /**
     * A description of the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-description
     */
    readonly description?: string;

    /**
     * Environment variables that are accessible from function code during execution.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-environment
     */
    readonly environment?: CfnFunction.EnvironmentProperty | cdk.IResolvable;

    /**
     * The size of the function's \`/tmp\` directory in MB.
     *
     * The default value is 512, but it can be any whole number between 512 and 10,240 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-ephemeralstorage
     */
    readonly ephemeralStorage?: CfnFunction.EphemeralStorageProperty | cdk.IResolvable;

    /**
     * Connection settings for an Amazon EFS file system.
     *
     * To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a \`DependsOn\` attribute to ensure that the mount target is created or updated before the function.
     *
     * For more information about using the \`DependsOn\` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-filesystemconfigs
     */
    readonly fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * The name of the Lambda function, up to 64 characters in length.
     *
     * If you don't specify a name, AWS CloudFormation generates one.
     *
     * If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-functionname
     */
    readonly functionName?: string;

    /**
     * The name of the method within your code that Lambda calls to run your function.
     *
     * Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-handler
     */
    readonly handler?: string;

    /**
     * Configuration values that override the container image Dockerfile settings.
     *
     * For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-imageconfig
     */
    readonly imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;

    /**
     * The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-kmskeyarn
     */
    readonly kmsKeyArn?: string;

    /**
     * A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-layers
     */
    readonly layers?: Array<string>;

    /**
     * The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-memorysize
     */
    readonly memorySize?: number;

    /**
     * The type of deployment package.
     *
     * Set to \`Image\` for container image and set \`Zip\` for .zip file archive.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-packagetype
     */
    readonly packageType?: string;

    /**
     * The number of simultaneous executions to reserve for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-reservedconcurrentexecutions
     */
    readonly reservedConcurrentExecutions?: number;

    /**
     * The Amazon Resource Name (ARN) of the function's execution role.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-role
     */
    readonly role: string;

    /**
     * The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive.
     *
     * The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-runtime
     */
    readonly runtime?: string;

    /**
     * Sets the runtime management configuration for a function's version.
     *
     * For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-runtimemanagementconfig
     */
    readonly runtimeManagementConfig?: cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty;

    /**
     * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-snapstart
     */
    readonly snapStart?: cdk.IResolvable | CfnFunction.SnapStartProperty;

    /**
     * A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnFunction.TagProperty> | cdk.IResolvable;

    /**
     * The amount of time (in seconds) that Lambda allows a function to run before stopping it.
     *
     * The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-timeout
     */
    readonly timeout?: number;

    /**
     * Set \`Mode\` to \`Active\` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-tracingconfig
     */
    readonly tracingConfig?: cdk.IResolvable | CfnFunction.TracingConfigProperty;

    /**
     * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
     *
     * When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-vpcconfig
     */
    readonly vpcConfig?: cdk.IResolvable | CfnFunction.VpcConfigProperty;
  }

  /**
   * The [dead-letter queue](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq) for failed asynchronous invocations.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html
   */
  export interface DeadLetterConfigProperty {
    /**
     * The instruction set architecture that the function supports.
     *
     * Enter a string array with one of the valid values (arm64 or x86_64). The default value is \`x86_64\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-architectures
     */
    readonly architectures?: Array<string>;

    /**
     * The code for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-code
     */
    readonly code: CfnFunction.CodeProperty | cdk.IResolvable;

    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration.
     *
     * A code-signing configuration
     * includes a set of signing profiles, which define the trusted publishers for this function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-codesigningconfigarn
     */
    readonly codeSigningConfigArn?: string;

    /**
     * A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     *
     * For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-deadletterconfig
     */
    readonly deadLetterConfig?: CfnFunction.DeadLetterConfigProperty | cdk.IResolvable;

    /**
     * A description of the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-description
     */
    readonly description?: string;

    /**
     * Environment variables that are accessible from function code during execution.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-environment
     */
    readonly environment?: CfnFunction.EnvironmentProperty | cdk.IResolvable;

    /**
     * The size of the function's \`/tmp\` directory in MB.
     *
     * The default value is 512, but it can be any whole number between 512 and 10,240 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-ephemeralstorage
     */
    readonly ephemeralStorage?: CfnFunction.EphemeralStorageProperty | cdk.IResolvable;

    /**
     * Connection settings for an Amazon EFS file system.
     *
     * To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a \`DependsOn\` attribute to ensure that the mount target is created or updated before the function.
     *
     * For more information about using the \`DependsOn\` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-filesystemconfigs
     */
    readonly fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * The name of the Lambda function, up to 64 characters in length.
     *
     * If you don't specify a name, AWS CloudFormation generates one.
     *
     * If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-functionname
     */
    readonly functionName?: string;

    /**
     * The name of the method within your code that Lambda calls to run your function.
     *
     * Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-handler
     */
    readonly handler?: string;

    /**
     * Configuration values that override the container image Dockerfile settings.
     *
     * For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-imageconfig
     */
    readonly imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;

    /**
     * The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-kmskeyarn
     */
    readonly kmsKeyArn?: string;

    /**
     * A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-layers
     */
    readonly layers?: Array<string>;

    /**
     * The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-memorysize
     */
    readonly memorySize?: number;

    /**
     * The type of deployment package.
     *
     * Set to \`Image\` for container image and set \`Zip\` for .zip file archive.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-packagetype
     */
    readonly packageType?: string;

    /**
     * The number of simultaneous executions to reserve for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-reservedconcurrentexecutions
     */
    readonly reservedConcurrentExecutions?: number;

    /**
     * The Amazon Resource Name (ARN) of the function's execution role.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-role
     */
    readonly role: string;

    /**
     * The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive.
     *
     * The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-runtime
     */
    readonly runtime?: string;

    /**
     * Sets the runtime management configuration for a function's version.
     *
     * For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-runtimemanagementconfig
     */
    readonly runtimeManagementConfig?: cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty;

    /**
     * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-snapstart
     */
    readonly snapStart?: cdk.IResolvable | CfnFunction.SnapStartProperty;

    /**
     * A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnFunction.TagProperty> | cdk.IResolvable;

    /**
     * The amount of time (in seconds) that Lambda allows a function to run before stopping it.
     *
     * The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-timeout
     */
    readonly timeout?: number;

    /**
     * Set \`Mode\` to \`Active\` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-tracingconfig
     */
    readonly tracingConfig?: cdk.IResolvable | CfnFunction.TracingConfigProperty;

    /**
     * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
     *
     * When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-vpcconfig
     */
    readonly vpcConfig?: cdk.IResolvable | CfnFunction.VpcConfigProperty;
  }

  /**
   * The [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html) for a Lambda function. To deploy a function defined as a container image, you specify the location of a container image in the Amazon ECR registry. For a .zip file deployment package, you can specify the location of an object in Amazon S3. For Node.js and Python functions, you can specify the function code inline in the template.
   *
   * Changes to a deployment package in Amazon S3 are not detected automatically during stack updates. To update the function code, change the object key or version in the template.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html
   */
  export interface CodeProperty {
    /**
     * The instruction set architecture that the function supports.
     *
     * Enter a string array with one of the valid values (arm64 or x86_64). The default value is \`x86_64\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-architectures
     */
    readonly architectures?: Array<string>;

    /**
     * The code for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-code
     */
    readonly code: CfnFunction.CodeProperty | cdk.IResolvable;

    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration.
     *
     * A code-signing configuration
     * includes a set of signing profiles, which define the trusted publishers for this function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-codesigningconfigarn
     */
    readonly codeSigningConfigArn?: string;

    /**
     * A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     *
     * For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-deadletterconfig
     */
    readonly deadLetterConfig?: CfnFunction.DeadLetterConfigProperty | cdk.IResolvable;

    /**
     * A description of the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-description
     */
    readonly description?: string;

    /**
     * Environment variables that are accessible from function code during execution.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-environment
     */
    readonly environment?: CfnFunction.EnvironmentProperty | cdk.IResolvable;

    /**
     * The size of the function's \`/tmp\` directory in MB.
     *
     * The default value is 512, but it can be any whole number between 512 and 10,240 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-ephemeralstorage
     */
    readonly ephemeralStorage?: CfnFunction.EphemeralStorageProperty | cdk.IResolvable;

    /**
     * Connection settings for an Amazon EFS file system.
     *
     * To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a \`DependsOn\` attribute to ensure that the mount target is created or updated before the function.
     *
     * For more information about using the \`DependsOn\` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-filesystemconfigs
     */
    readonly fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * The name of the Lambda function, up to 64 characters in length.
     *
     * If you don't specify a name, AWS CloudFormation generates one.
     *
     * If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-functionname
     */
    readonly functionName?: string;

    /**
     * The name of the method within your code that Lambda calls to run your function.
     *
     * Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-handler
     */
    readonly handler?: string;

    /**
     * Configuration values that override the container image Dockerfile settings.
     *
     * For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-imageconfig
     */
    readonly imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;

    /**
     * The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-kmskeyarn
     */
    readonly kmsKeyArn?: string;

    /**
     * A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-layers
     */
    readonly layers?: Array<string>;

    /**
     * The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-memorysize
     */
    readonly memorySize?: number;

    /**
     * The type of deployment package.
     *
     * Set to \`Image\` for container image and set \`Zip\` for .zip file archive.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-packagetype
     */
    readonly packageType?: string;

    /**
     * The number of simultaneous executions to reserve for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-reservedconcurrentexecutions
     */
    readonly reservedConcurrentExecutions?: number;

    /**
     * The Amazon Resource Name (ARN) of the function's execution role.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-role
     */
    readonly role: string;

    /**
     * The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive.
     *
     * The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-runtime
     */
    readonly runtime?: string;

    /**
     * Sets the runtime management configuration for a function's version.
     *
     * For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-runtimemanagementconfig
     */
    readonly runtimeManagementConfig?: cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty;

    /**
     * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-snapstart
     */
    readonly snapStart?: cdk.IResolvable | CfnFunction.SnapStartProperty;

    /**
     * A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnFunction.TagProperty> | cdk.IResolvable;

    /**
     * The amount of time (in seconds) that Lambda allows a function to run before stopping it.
     *
     * The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-timeout
     */
    readonly timeout?: number;

    /**
     * Set \`Mode\` to \`Active\` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-tracingconfig
     */
    readonly tracingConfig?: cdk.IResolvable | CfnFunction.TracingConfigProperty;

    /**
     * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
     *
     * When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-vpcconfig
     */
    readonly vpcConfig?: cdk.IResolvable | CfnFunction.VpcConfigProperty;
  }

  /**
   * A function's environment variable settings.
   *
   * You can use environment variables to adjust your function's behavior without updating code. An environment variable is a pair of strings that are stored in a function's version-specific configuration.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html
   */
  export interface EnvironmentProperty {
    /**
     * The instruction set architecture that the function supports.
     *
     * Enter a string array with one of the valid values (arm64 or x86_64). The default value is \`x86_64\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-architectures
     */
    readonly architectures?: Array<string>;

    /**
     * The code for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-code
     */
    readonly code: CfnFunction.CodeProperty | cdk.IResolvable;

    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration.
     *
     * A code-signing configuration
     * includes a set of signing profiles, which define the trusted publishers for this function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-codesigningconfigarn
     */
    readonly codeSigningConfigArn?: string;

    /**
     * A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     *
     * For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-deadletterconfig
     */
    readonly deadLetterConfig?: CfnFunction.DeadLetterConfigProperty | cdk.IResolvable;

    /**
     * A description of the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-description
     */
    readonly description?: string;

    /**
     * Environment variables that are accessible from function code during execution.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-environment
     */
    readonly environment?: CfnFunction.EnvironmentProperty | cdk.IResolvable;

    /**
     * The size of the function's \`/tmp\` directory in MB.
     *
     * The default value is 512, but it can be any whole number between 512 and 10,240 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-ephemeralstorage
     */
    readonly ephemeralStorage?: CfnFunction.EphemeralStorageProperty | cdk.IResolvable;

    /**
     * Connection settings for an Amazon EFS file system.
     *
     * To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a \`DependsOn\` attribute to ensure that the mount target is created or updated before the function.
     *
     * For more information about using the \`DependsOn\` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-filesystemconfigs
     */
    readonly fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * The name of the Lambda function, up to 64 characters in length.
     *
     * If you don't specify a name, AWS CloudFormation generates one.
     *
     * If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-functionname
     */
    readonly functionName?: string;

    /**
     * The name of the method within your code that Lambda calls to run your function.
     *
     * Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-handler
     */
    readonly handler?: string;

    /**
     * Configuration values that override the container image Dockerfile settings.
     *
     * For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-imageconfig
     */
    readonly imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;

    /**
     * The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-kmskeyarn
     */
    readonly kmsKeyArn?: string;

    /**
     * A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-layers
     */
    readonly layers?: Array<string>;

    /**
     * The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-memorysize
     */
    readonly memorySize?: number;

    /**
     * The type of deployment package.
     *
     * Set to \`Image\` for container image and set \`Zip\` for .zip file archive.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-packagetype
     */
    readonly packageType?: string;

    /**
     * The number of simultaneous executions to reserve for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-reservedconcurrentexecutions
     */
    readonly reservedConcurrentExecutions?: number;

    /**
     * The Amazon Resource Name (ARN) of the function's execution role.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-role
     */
    readonly role: string;

    /**
     * The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive.
     *
     * The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-runtime
     */
    readonly runtime?: string;

    /**
     * Sets the runtime management configuration for a function's version.
     *
     * For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-runtimemanagementconfig
     */
    readonly runtimeManagementConfig?: cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty;

    /**
     * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-snapstart
     */
    readonly snapStart?: cdk.IResolvable | CfnFunction.SnapStartProperty;

    /**
     * A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnFunction.TagProperty> | cdk.IResolvable;

    /**
     * The amount of time (in seconds) that Lambda allows a function to run before stopping it.
     *
     * The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-timeout
     */
    readonly timeout?: number;

    /**
     * Set \`Mode\` to \`Active\` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-tracingconfig
     */
    readonly tracingConfig?: cdk.IResolvable | CfnFunction.TracingConfigProperty;

    /**
     * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
     *
     * When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-vpcconfig
     */
    readonly vpcConfig?: cdk.IResolvable | CfnFunction.VpcConfigProperty;
  }

  /**
   * The size of the function's \`/tmp\` directory in MB.
   *
   * The default value is 512, but it can be any whole number between 512 and 10,240 MB.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html
   */
  export interface EphemeralStorageProperty {
    /**
     * The instruction set architecture that the function supports.
     *
     * Enter a string array with one of the valid values (arm64 or x86_64). The default value is \`x86_64\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-architectures
     */
    readonly architectures?: Array<string>;

    /**
     * The code for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-code
     */
    readonly code: CfnFunction.CodeProperty | cdk.IResolvable;

    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration.
     *
     * A code-signing configuration
     * includes a set of signing profiles, which define the trusted publishers for this function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-codesigningconfigarn
     */
    readonly codeSigningConfigArn?: string;

    /**
     * A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     *
     * For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-deadletterconfig
     */
    readonly deadLetterConfig?: CfnFunction.DeadLetterConfigProperty | cdk.IResolvable;

    /**
     * A description of the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-description
     */
    readonly description?: string;

    /**
     * Environment variables that are accessible from function code during execution.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-environment
     */
    readonly environment?: CfnFunction.EnvironmentProperty | cdk.IResolvable;

    /**
     * The size of the function's \`/tmp\` directory in MB.
     *
     * The default value is 512, but it can be any whole number between 512 and 10,240 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-ephemeralstorage
     */
    readonly ephemeralStorage?: CfnFunction.EphemeralStorageProperty | cdk.IResolvable;

    /**
     * Connection settings for an Amazon EFS file system.
     *
     * To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a \`DependsOn\` attribute to ensure that the mount target is created or updated before the function.
     *
     * For more information about using the \`DependsOn\` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-filesystemconfigs
     */
    readonly fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * The name of the Lambda function, up to 64 characters in length.
     *
     * If you don't specify a name, AWS CloudFormation generates one.
     *
     * If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-functionname
     */
    readonly functionName?: string;

    /**
     * The name of the method within your code that Lambda calls to run your function.
     *
     * Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-handler
     */
    readonly handler?: string;

    /**
     * Configuration values that override the container image Dockerfile settings.
     *
     * For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-imageconfig
     */
    readonly imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;

    /**
     * The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-kmskeyarn
     */
    readonly kmsKeyArn?: string;

    /**
     * A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-layers
     */
    readonly layers?: Array<string>;

    /**
     * The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-memorysize
     */
    readonly memorySize?: number;

    /**
     * The type of deployment package.
     *
     * Set to \`Image\` for container image and set \`Zip\` for .zip file archive.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-packagetype
     */
    readonly packageType?: string;

    /**
     * The number of simultaneous executions to reserve for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-reservedconcurrentexecutions
     */
    readonly reservedConcurrentExecutions?: number;

    /**
     * The Amazon Resource Name (ARN) of the function's execution role.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-role
     */
    readonly role: string;

    /**
     * The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive.
     *
     * The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-runtime
     */
    readonly runtime?: string;

    /**
     * Sets the runtime management configuration for a function's version.
     *
     * For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-runtimemanagementconfig
     */
    readonly runtimeManagementConfig?: cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty;

    /**
     * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-snapstart
     */
    readonly snapStart?: cdk.IResolvable | CfnFunction.SnapStartProperty;

    /**
     * A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnFunction.TagProperty> | cdk.IResolvable;

    /**
     * The amount of time (in seconds) that Lambda allows a function to run before stopping it.
     *
     * The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-timeout
     */
    readonly timeout?: number;

    /**
     * Set \`Mode\` to \`Active\` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-tracingconfig
     */
    readonly tracingConfig?: cdk.IResolvable | CfnFunction.TracingConfigProperty;

    /**
     * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
     *
     * When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-vpcconfig
     */
    readonly vpcConfig?: cdk.IResolvable | CfnFunction.VpcConfigProperty;
  }

  /**
   * The function's [SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html
   */
  export interface SnapStartResponseProperty {
    /**
     * The instruction set architecture that the function supports.
     *
     * Enter a string array with one of the valid values (arm64 or x86_64). The default value is \`x86_64\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-architectures
     */
    readonly architectures?: Array<string>;

    /**
     * The code for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-code
     */
    readonly code: CfnFunction.CodeProperty | cdk.IResolvable;

    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration.
     *
     * A code-signing configuration
     * includes a set of signing profiles, which define the trusted publishers for this function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-codesigningconfigarn
     */
    readonly codeSigningConfigArn?: string;

    /**
     * A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     *
     * For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-deadletterconfig
     */
    readonly deadLetterConfig?: CfnFunction.DeadLetterConfigProperty | cdk.IResolvable;

    /**
     * A description of the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-description
     */
    readonly description?: string;

    /**
     * Environment variables that are accessible from function code during execution.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-environment
     */
    readonly environment?: CfnFunction.EnvironmentProperty | cdk.IResolvable;

    /**
     * The size of the function's \`/tmp\` directory in MB.
     *
     * The default value is 512, but it can be any whole number between 512 and 10,240 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-ephemeralstorage
     */
    readonly ephemeralStorage?: CfnFunction.EphemeralStorageProperty | cdk.IResolvable;

    /**
     * Connection settings for an Amazon EFS file system.
     *
     * To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a \`DependsOn\` attribute to ensure that the mount target is created or updated before the function.
     *
     * For more information about using the \`DependsOn\` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-filesystemconfigs
     */
    readonly fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * The name of the Lambda function, up to 64 characters in length.
     *
     * If you don't specify a name, AWS CloudFormation generates one.
     *
     * If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-functionname
     */
    readonly functionName?: string;

    /**
     * The name of the method within your code that Lambda calls to run your function.
     *
     * Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-handler
     */
    readonly handler?: string;

    /**
     * Configuration values that override the container image Dockerfile settings.
     *
     * For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-imageconfig
     */
    readonly imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;

    /**
     * The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-kmskeyarn
     */
    readonly kmsKeyArn?: string;

    /**
     * A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-layers
     */
    readonly layers?: Array<string>;

    /**
     * The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-memorysize
     */
    readonly memorySize?: number;

    /**
     * The type of deployment package.
     *
     * Set to \`Image\` for container image and set \`Zip\` for .zip file archive.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-packagetype
     */
    readonly packageType?: string;

    /**
     * The number of simultaneous executions to reserve for the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-reservedconcurrentexecutions
     */
    readonly reservedConcurrentExecutions?: number;

    /**
     * The Amazon Resource Name (ARN) of the function's execution role.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-role
     */
    readonly role: string;

    /**
     * The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive.
     *
     * The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-runtime
     */
    readonly runtime?: string;

    /**
     * Sets the runtime management configuration for a function's version.
     *
     * For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-runtimemanagementconfig
     */
    readonly runtimeManagementConfig?: cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty;

    /**
     * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-snapstart
     */
    readonly snapStart?: cdk.IResolvable | CfnFunction.SnapStartProperty;

    /**
     * A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnFunction.TagProperty> | cdk.IResolvable;

    /**
     * The amount of time (in seconds) that Lambda allows a function to run before stopping it.
     *
     * The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-timeout
     */
    readonly timeout?: number;

    /**
     * Set \`Mode\` to \`Active\` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-tracingconfig
     */
    readonly tracingConfig?: cdk.IResolvable | CfnFunction.TracingConfigProperty;

    /**
     * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
     *
     * When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-vpcconfig
     */
    readonly vpcConfig?: cdk.IResolvable | CfnFunction.VpcConfigProperty;
  }
}

/**
 * Properties for defining a \`CfnFunction\`
 *
 * @struct
 * @stability external
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html
 */
export interface CfnFunctionProps {
  /**
   * The instruction set architecture that the function supports.
   *
   * Enter a string array with one of the valid values (arm64 or x86_64). The default value is \`x86_64\` .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-architectures
   */
  readonly architectures?: Array<string>;

  /**
   * The code for the function.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-code
   */
  readonly code: CfnFunction.CodeProperty | cdk.IResolvable;

  /**
   * To enable code signing for this function, specify the ARN of a code-signing configuration.
   *
   * A code-signing configuration
   * includes a set of signing profiles, which define the trusted publishers for this function.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-codesigningconfigarn
   */
  readonly codeSigningConfigArn?: string;

  /**
   * A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
   *
   * For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-deadletterconfig
   */
  readonly deadLetterConfig?: CfnFunction.DeadLetterConfigProperty | cdk.IResolvable;

  /**
   * A description of the function.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-description
   */
  readonly description?: string;

  /**
   * Environment variables that are accessible from function code during execution.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-environment
   */
  readonly environment?: CfnFunction.EnvironmentProperty | cdk.IResolvable;

  /**
   * The size of the function's \`/tmp\` directory in MB.
   *
   * The default value is 512, but it can be any whole number between 512 and 10,240 MB.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-ephemeralstorage
   */
  readonly ephemeralStorage?: CfnFunction.EphemeralStorageProperty | cdk.IResolvable;

  /**
   * Connection settings for an Amazon EFS file system.
   *
   * To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a \`DependsOn\` attribute to ensure that the mount target is created or updated before the function.
   *
   * For more information about using the \`DependsOn\` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-filesystemconfigs
   */
  readonly fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;

  /**
   * The name of the Lambda function, up to 64 characters in length.
   *
   * If you don't specify a name, AWS CloudFormation generates one.
   *
   * If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-functionname
   */
  readonly functionName?: string;

  /**
   * The name of the method within your code that Lambda calls to run your function.
   *
   * Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-handler
   */
  readonly handler?: string;

  /**
   * Configuration values that override the container image Dockerfile settings.
   *
   * For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-imageconfig
   */
  readonly imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;

  /**
   * The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-kmskeyarn
   */
  readonly kmsKeyArn?: string;

  /**
   * A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-layers
   */
  readonly layers?: Array<string>;

  /**
   * The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-memorysize
   */
  readonly memorySize?: number;

  /**
   * The type of deployment package.
   *
   * Set to \`Image\` for container image and set \`Zip\` for .zip file archive.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-packagetype
   */
  readonly packageType?: string;

  /**
   * The number of simultaneous executions to reserve for the function.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-reservedconcurrentexecutions
   */
  readonly reservedConcurrentExecutions?: number;

  /**
   * The Amazon Resource Name (ARN) of the function's execution role.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-role
   */
  readonly role: string;

  /**
   * The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive.
   *
   * The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-runtime
   */
  readonly runtime?: string;

  /**
   * Sets the runtime management configuration for a function's version.
   *
   * For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-runtimemanagementconfig
   */
  readonly runtimeManagementConfig?: cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty;

  /**
   * The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-snapstart
   */
  readonly snapStart?: cdk.IResolvable | CfnFunction.SnapStartProperty;

  /**
   * A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-tags
   */
  readonly tags?: Array<cdk.CfnTag>;

  /**
   * The amount of time (in seconds) that Lambda allows a function to run before stopping it.
   *
   * The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-timeout
   */
  readonly timeout?: number;

  /**
   * Set \`Mode\` to \`Active\` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-tracingconfig
   */
  readonly tracingConfig?: cdk.IResolvable | CfnFunction.TracingConfigProperty;

  /**
   * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
   *
   * When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-vpcconfig
   */
  readonly vpcConfig?: cdk.IResolvable | CfnFunction.VpcConfigProperty;
}

/**
 * Determine whether the given properties match those of a \`EphemeralStorageProperty\`
 *
 * @param properties - the TypeScript properties of a \`EphemeralStorageProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnFunctionEphemeralStoragePropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("architectures", cdk.listValidator(cdk.validateString))(properties.architectures));
  errors.collect(cdk.propertyValidator("code", cdk.requiredValidator)(properties.code));
  errors.collect(cdk.propertyValidator("code", CfnFunctionCodePropertyValidator)(properties.code));
  errors.collect(cdk.propertyValidator("codeSigningConfigArn", cdk.validateString)(properties.codeSigningConfigArn));
  errors.collect(cdk.propertyValidator("deadLetterConfig", CfnFunctionDeadLetterConfigPropertyValidator)(properties.deadLetterConfig));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("environment", CfnFunctionEnvironmentPropertyValidator)(properties.environment));
  errors.collect(cdk.propertyValidator("ephemeralStorage", CfnFunctionEphemeralStoragePropertyValidator)(properties.ephemeralStorage));
  errors.collect(cdk.propertyValidator("fileSystemConfigs", cdk.listValidator(CfnFunctionFileSystemConfigPropertyValidator))(properties.fileSystemConfigs));
  errors.collect(cdk.propertyValidator("functionName", cdk.validateString)(properties.functionName));
  errors.collect(cdk.propertyValidator("handler", cdk.validateString)(properties.handler));
  errors.collect(cdk.propertyValidator("imageConfig", CfnFunctionImageConfigPropertyValidator)(properties.imageConfig));
  errors.collect(cdk.propertyValidator("kmsKeyArn", cdk.validateString)(properties.kmsKeyArn));
  errors.collect(cdk.propertyValidator("layers", cdk.listValidator(cdk.validateString))(properties.layers));
  errors.collect(cdk.propertyValidator("memorySize", cdk.validateNumber)(properties.memorySize));
  errors.collect(cdk.propertyValidator("packageType", cdk.validateString)(properties.packageType));
  errors.collect(cdk.propertyValidator("reservedConcurrentExecutions", cdk.validateNumber)(properties.reservedConcurrentExecutions));
  errors.collect(cdk.propertyValidator("role", cdk.requiredValidator)(properties.role));
  errors.collect(cdk.propertyValidator("role", cdk.validateString)(properties.role));
  errors.collect(cdk.propertyValidator("runtime", cdk.validateString)(properties.runtime));
  errors.collect(cdk.propertyValidator("runtimeManagementConfig", CfnFunctionRuntimeManagementConfigPropertyValidator)(properties.runtimeManagementConfig));
  errors.collect(cdk.propertyValidator("snapStart", CfnFunctionSnapStartPropertyValidator)(properties.snapStart));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnFunctionTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("timeout", cdk.validateNumber)(properties.timeout));
  errors.collect(cdk.propertyValidator("tracingConfig", CfnFunctionTracingConfigPropertyValidator)(properties.tracingConfig));
  errors.collect(cdk.propertyValidator("vpcConfig", CfnFunctionVpcConfigPropertyValidator)(properties.vpcConfig));
  return errors.wrap("supplied properties not correct for \\"EphemeralStorageProperty\\"");
}

// @ts-ignore TS6133
function convertCfnFunctionEphemeralStoragePropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnFunctionEphemeralStoragePropertyValidator(properties).assertSuccess();
  return {
    "Architectures": cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),
    "Code": convertCfnFunctionCodePropertyToCloudFormation(properties.code),
    "CodeSigningConfigArn": cdk.stringToCloudFormation(properties.codeSigningConfigArn),
    "DeadLetterConfig": convertCfnFunctionDeadLetterConfigPropertyToCloudFormation(properties.deadLetterConfig),
    "Description": cdk.stringToCloudFormation(properties.description),
    "Environment": convertCfnFunctionEnvironmentPropertyToCloudFormation(properties.environment),
    "EphemeralStorage": convertCfnFunctionEphemeralStoragePropertyToCloudFormation(properties.ephemeralStorage),
    "FileSystemConfigs": cdk.listMapper(convertCfnFunctionFileSystemConfigPropertyToCloudFormation)(properties.fileSystemConfigs),
    "FunctionName": cdk.stringToCloudFormation(properties.functionName),
    "Handler": cdk.stringToCloudFormation(properties.handler),
    "ImageConfig": convertCfnFunctionImageConfigPropertyToCloudFormation(properties.imageConfig),
    "KmsKeyArn": cdk.stringToCloudFormation(properties.kmsKeyArn),
    "Layers": cdk.listMapper(cdk.stringToCloudFormation)(properties.layers),
    "MemorySize": cdk.numberToCloudFormation(properties.memorySize),
    "PackageType": cdk.stringToCloudFormation(properties.packageType),
    "ReservedConcurrentExecutions": cdk.numberToCloudFormation(properties.reservedConcurrentExecutions),
    "Role": cdk.stringToCloudFormation(properties.role),
    "Runtime": cdk.stringToCloudFormation(properties.runtime),
    "RuntimeManagementConfig": convertCfnFunctionRuntimeManagementConfigPropertyToCloudFormation(properties.runtimeManagementConfig),
    "SnapStart": convertCfnFunctionSnapStartPropertyToCloudFormation(properties.snapStart),
    "Tags": cdk.listMapper(convertCfnFunctionTagPropertyToCloudFormation)(properties.tags),
    "Timeout": cdk.numberToCloudFormation(properties.timeout),
    "TracingConfig": convertCfnFunctionTracingConfigPropertyToCloudFormation(properties.tracingConfig),
    "VpcConfig": convertCfnFunctionVpcConfigPropertyToCloudFormation(properties.vpcConfig)
  };
}

// @ts-ignore TS6133
function CfnFunctionEphemeralStoragePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.EphemeralStorageProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.EphemeralStorageProperty>();
  ret.addPropertyResult("architectures", "Architectures", (properties.Architectures != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Architectures) : undefined));
  ret.addPropertyResult("code", "Code", (properties.Code != null ? CfnFunctionCodePropertyFromCloudFormation(properties.Code) : undefined));
  ret.addPropertyResult("codeSigningConfigArn", "CodeSigningConfigArn", (properties.CodeSigningConfigArn != null ? cfn_parse.FromCloudFormation.getString(properties.CodeSigningConfigArn) : undefined));
  ret.addPropertyResult("deadLetterConfig", "DeadLetterConfig", (properties.DeadLetterConfig != null ? CfnFunctionDeadLetterConfigPropertyFromCloudFormation(properties.DeadLetterConfig) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("environment", "Environment", (properties.Environment != null ? CfnFunctionEnvironmentPropertyFromCloudFormation(properties.Environment) : undefined));
  ret.addPropertyResult("ephemeralStorage", "EphemeralStorage", (properties.EphemeralStorage != null ? CfnFunctionEphemeralStoragePropertyFromCloudFormation(properties.EphemeralStorage) : undefined));
  ret.addPropertyResult("fileSystemConfigs", "FileSystemConfigs", (properties.FileSystemConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionFileSystemConfigPropertyFromCloudFormation)(properties.FileSystemConfigs) : undefined));
  ret.addPropertyResult("functionName", "FunctionName", (properties.FunctionName != null ? cfn_parse.FromCloudFormation.getString(properties.FunctionName) : undefined));
  ret.addPropertyResult("handler", "Handler", (properties.Handler != null ? cfn_parse.FromCloudFormation.getString(properties.Handler) : undefined));
  ret.addPropertyResult("imageConfig", "ImageConfig", (properties.ImageConfig != null ? CfnFunctionImageConfigPropertyFromCloudFormation(properties.ImageConfig) : undefined));
  ret.addPropertyResult("kmsKeyArn", "KmsKeyArn", (properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined));
  ret.addPropertyResult("layers", "Layers", (properties.Layers != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Layers) : undefined));
  ret.addPropertyResult("memorySize", "MemorySize", (properties.MemorySize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemorySize) : undefined));
  ret.addPropertyResult("packageType", "PackageType", (properties.PackageType != null ? cfn_parse.FromCloudFormation.getString(properties.PackageType) : undefined));
  ret.addPropertyResult("reservedConcurrentExecutions", "ReservedConcurrentExecutions", (properties.ReservedConcurrentExecutions != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReservedConcurrentExecutions) : undefined));
  ret.addPropertyResult("role", "Role", (properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined));
  ret.addPropertyResult("runtime", "Runtime", (properties.Runtime != null ? cfn_parse.FromCloudFormation.getString(properties.Runtime) : undefined));
  ret.addPropertyResult("runtimeManagementConfig", "RuntimeManagementConfig", (properties.RuntimeManagementConfig != null ? CfnFunctionRuntimeManagementConfigPropertyFromCloudFormation(properties.RuntimeManagementConfig) : undefined));
  ret.addPropertyResult("snapStart", "SnapStart", (properties.SnapStart != null ? CfnFunctionSnapStartPropertyFromCloudFormation(properties.SnapStart) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("timeout", "Timeout", (properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined));
  ret.addPropertyResult("tracingConfig", "TracingConfig", (properties.TracingConfig != null ? CfnFunctionTracingConfigPropertyFromCloudFormation(properties.TracingConfig) : undefined));
  ret.addPropertyResult("vpcConfig", "VpcConfig", (properties.VpcConfig != null ? CfnFunctionVpcConfigPropertyFromCloudFormation(properties.VpcConfig) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`EnvironmentProperty\`
 *
 * @param properties - the TypeScript properties of a \`EnvironmentProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnFunctionEnvironmentPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("architectures", cdk.listValidator(cdk.validateString))(properties.architectures));
  errors.collect(cdk.propertyValidator("code", cdk.requiredValidator)(properties.code));
  errors.collect(cdk.propertyValidator("code", CfnFunctionCodePropertyValidator)(properties.code));
  errors.collect(cdk.propertyValidator("codeSigningConfigArn", cdk.validateString)(properties.codeSigningConfigArn));
  errors.collect(cdk.propertyValidator("deadLetterConfig", CfnFunctionDeadLetterConfigPropertyValidator)(properties.deadLetterConfig));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("environment", CfnFunctionEnvironmentPropertyValidator)(properties.environment));
  errors.collect(cdk.propertyValidator("ephemeralStorage", CfnFunctionEphemeralStoragePropertyValidator)(properties.ephemeralStorage));
  errors.collect(cdk.propertyValidator("fileSystemConfigs", cdk.listValidator(CfnFunctionFileSystemConfigPropertyValidator))(properties.fileSystemConfigs));
  errors.collect(cdk.propertyValidator("functionName", cdk.validateString)(properties.functionName));
  errors.collect(cdk.propertyValidator("handler", cdk.validateString)(properties.handler));
  errors.collect(cdk.propertyValidator("imageConfig", CfnFunctionImageConfigPropertyValidator)(properties.imageConfig));
  errors.collect(cdk.propertyValidator("kmsKeyArn", cdk.validateString)(properties.kmsKeyArn));
  errors.collect(cdk.propertyValidator("layers", cdk.listValidator(cdk.validateString))(properties.layers));
  errors.collect(cdk.propertyValidator("memorySize", cdk.validateNumber)(properties.memorySize));
  errors.collect(cdk.propertyValidator("packageType", cdk.validateString)(properties.packageType));
  errors.collect(cdk.propertyValidator("reservedConcurrentExecutions", cdk.validateNumber)(properties.reservedConcurrentExecutions));
  errors.collect(cdk.propertyValidator("role", cdk.requiredValidator)(properties.role));
  errors.collect(cdk.propertyValidator("role", cdk.validateString)(properties.role));
  errors.collect(cdk.propertyValidator("runtime", cdk.validateString)(properties.runtime));
  errors.collect(cdk.propertyValidator("runtimeManagementConfig", CfnFunctionRuntimeManagementConfigPropertyValidator)(properties.runtimeManagementConfig));
  errors.collect(cdk.propertyValidator("snapStart", CfnFunctionSnapStartPropertyValidator)(properties.snapStart));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnFunctionTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("timeout", cdk.validateNumber)(properties.timeout));
  errors.collect(cdk.propertyValidator("tracingConfig", CfnFunctionTracingConfigPropertyValidator)(properties.tracingConfig));
  errors.collect(cdk.propertyValidator("vpcConfig", CfnFunctionVpcConfigPropertyValidator)(properties.vpcConfig));
  return errors.wrap("supplied properties not correct for \\"EnvironmentProperty\\"");
}

// @ts-ignore TS6133
function convertCfnFunctionEnvironmentPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnFunctionEnvironmentPropertyValidator(properties).assertSuccess();
  return {
    "Architectures": cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),
    "Code": convertCfnFunctionCodePropertyToCloudFormation(properties.code),
    "CodeSigningConfigArn": cdk.stringToCloudFormation(properties.codeSigningConfigArn),
    "DeadLetterConfig": convertCfnFunctionDeadLetterConfigPropertyToCloudFormation(properties.deadLetterConfig),
    "Description": cdk.stringToCloudFormation(properties.description),
    "Environment": convertCfnFunctionEnvironmentPropertyToCloudFormation(properties.environment),
    "EphemeralStorage": convertCfnFunctionEphemeralStoragePropertyToCloudFormation(properties.ephemeralStorage),
    "FileSystemConfigs": cdk.listMapper(convertCfnFunctionFileSystemConfigPropertyToCloudFormation)(properties.fileSystemConfigs),
    "FunctionName": cdk.stringToCloudFormation(properties.functionName),
    "Handler": cdk.stringToCloudFormation(properties.handler),
    "ImageConfig": convertCfnFunctionImageConfigPropertyToCloudFormation(properties.imageConfig),
    "KmsKeyArn": cdk.stringToCloudFormation(properties.kmsKeyArn),
    "Layers": cdk.listMapper(cdk.stringToCloudFormation)(properties.layers),
    "MemorySize": cdk.numberToCloudFormation(properties.memorySize),
    "PackageType": cdk.stringToCloudFormation(properties.packageType),
    "ReservedConcurrentExecutions": cdk.numberToCloudFormation(properties.reservedConcurrentExecutions),
    "Role": cdk.stringToCloudFormation(properties.role),
    "Runtime": cdk.stringToCloudFormation(properties.runtime),
    "RuntimeManagementConfig": convertCfnFunctionRuntimeManagementConfigPropertyToCloudFormation(properties.runtimeManagementConfig),
    "SnapStart": convertCfnFunctionSnapStartPropertyToCloudFormation(properties.snapStart),
    "Tags": cdk.listMapper(convertCfnFunctionTagPropertyToCloudFormation)(properties.tags),
    "Timeout": cdk.numberToCloudFormation(properties.timeout),
    "TracingConfig": convertCfnFunctionTracingConfigPropertyToCloudFormation(properties.tracingConfig),
    "VpcConfig": convertCfnFunctionVpcConfigPropertyToCloudFormation(properties.vpcConfig)
  };
}

// @ts-ignore TS6133
function CfnFunctionEnvironmentPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.EnvironmentProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.EnvironmentProperty>();
  ret.addPropertyResult("architectures", "Architectures", (properties.Architectures != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Architectures) : undefined));
  ret.addPropertyResult("code", "Code", (properties.Code != null ? CfnFunctionCodePropertyFromCloudFormation(properties.Code) : undefined));
  ret.addPropertyResult("codeSigningConfigArn", "CodeSigningConfigArn", (properties.CodeSigningConfigArn != null ? cfn_parse.FromCloudFormation.getString(properties.CodeSigningConfigArn) : undefined));
  ret.addPropertyResult("deadLetterConfig", "DeadLetterConfig", (properties.DeadLetterConfig != null ? CfnFunctionDeadLetterConfigPropertyFromCloudFormation(properties.DeadLetterConfig) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("environment", "Environment", (properties.Environment != null ? CfnFunctionEnvironmentPropertyFromCloudFormation(properties.Environment) : undefined));
  ret.addPropertyResult("ephemeralStorage", "EphemeralStorage", (properties.EphemeralStorage != null ? CfnFunctionEphemeralStoragePropertyFromCloudFormation(properties.EphemeralStorage) : undefined));
  ret.addPropertyResult("fileSystemConfigs", "FileSystemConfigs", (properties.FileSystemConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionFileSystemConfigPropertyFromCloudFormation)(properties.FileSystemConfigs) : undefined));
  ret.addPropertyResult("functionName", "FunctionName", (properties.FunctionName != null ? cfn_parse.FromCloudFormation.getString(properties.FunctionName) : undefined));
  ret.addPropertyResult("handler", "Handler", (properties.Handler != null ? cfn_parse.FromCloudFormation.getString(properties.Handler) : undefined));
  ret.addPropertyResult("imageConfig", "ImageConfig", (properties.ImageConfig != null ? CfnFunctionImageConfigPropertyFromCloudFormation(properties.ImageConfig) : undefined));
  ret.addPropertyResult("kmsKeyArn", "KmsKeyArn", (properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined));
  ret.addPropertyResult("layers", "Layers", (properties.Layers != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Layers) : undefined));
  ret.addPropertyResult("memorySize", "MemorySize", (properties.MemorySize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemorySize) : undefined));
  ret.addPropertyResult("packageType", "PackageType", (properties.PackageType != null ? cfn_parse.FromCloudFormation.getString(properties.PackageType) : undefined));
  ret.addPropertyResult("reservedConcurrentExecutions", "ReservedConcurrentExecutions", (properties.ReservedConcurrentExecutions != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReservedConcurrentExecutions) : undefined));
  ret.addPropertyResult("role", "Role", (properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined));
  ret.addPropertyResult("runtime", "Runtime", (properties.Runtime != null ? cfn_parse.FromCloudFormation.getString(properties.Runtime) : undefined));
  ret.addPropertyResult("runtimeManagementConfig", "RuntimeManagementConfig", (properties.RuntimeManagementConfig != null ? CfnFunctionRuntimeManagementConfigPropertyFromCloudFormation(properties.RuntimeManagementConfig) : undefined));
  ret.addPropertyResult("snapStart", "SnapStart", (properties.SnapStart != null ? CfnFunctionSnapStartPropertyFromCloudFormation(properties.SnapStart) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("timeout", "Timeout", (properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined));
  ret.addPropertyResult("tracingConfig", "TracingConfig", (properties.TracingConfig != null ? CfnFunctionTracingConfigPropertyFromCloudFormation(properties.TracingConfig) : undefined));
  ret.addPropertyResult("vpcConfig", "VpcConfig", (properties.VpcConfig != null ? CfnFunctionVpcConfigPropertyFromCloudFormation(properties.VpcConfig) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`CodeProperty\`
 *
 * @param properties - the TypeScript properties of a \`CodeProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnFunctionCodePropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("architectures", cdk.listValidator(cdk.validateString))(properties.architectures));
  errors.collect(cdk.propertyValidator("code", cdk.requiredValidator)(properties.code));
  errors.collect(cdk.propertyValidator("code", CfnFunctionCodePropertyValidator)(properties.code));
  errors.collect(cdk.propertyValidator("codeSigningConfigArn", cdk.validateString)(properties.codeSigningConfigArn));
  errors.collect(cdk.propertyValidator("deadLetterConfig", CfnFunctionDeadLetterConfigPropertyValidator)(properties.deadLetterConfig));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("environment", CfnFunctionEnvironmentPropertyValidator)(properties.environment));
  errors.collect(cdk.propertyValidator("ephemeralStorage", CfnFunctionEphemeralStoragePropertyValidator)(properties.ephemeralStorage));
  errors.collect(cdk.propertyValidator("fileSystemConfigs", cdk.listValidator(CfnFunctionFileSystemConfigPropertyValidator))(properties.fileSystemConfigs));
  errors.collect(cdk.propertyValidator("functionName", cdk.validateString)(properties.functionName));
  errors.collect(cdk.propertyValidator("handler", cdk.validateString)(properties.handler));
  errors.collect(cdk.propertyValidator("imageConfig", CfnFunctionImageConfigPropertyValidator)(properties.imageConfig));
  errors.collect(cdk.propertyValidator("kmsKeyArn", cdk.validateString)(properties.kmsKeyArn));
  errors.collect(cdk.propertyValidator("layers", cdk.listValidator(cdk.validateString))(properties.layers));
  errors.collect(cdk.propertyValidator("memorySize", cdk.validateNumber)(properties.memorySize));
  errors.collect(cdk.propertyValidator("packageType", cdk.validateString)(properties.packageType));
  errors.collect(cdk.propertyValidator("reservedConcurrentExecutions", cdk.validateNumber)(properties.reservedConcurrentExecutions));
  errors.collect(cdk.propertyValidator("role", cdk.requiredValidator)(properties.role));
  errors.collect(cdk.propertyValidator("role", cdk.validateString)(properties.role));
  errors.collect(cdk.propertyValidator("runtime", cdk.validateString)(properties.runtime));
  errors.collect(cdk.propertyValidator("runtimeManagementConfig", CfnFunctionRuntimeManagementConfigPropertyValidator)(properties.runtimeManagementConfig));
  errors.collect(cdk.propertyValidator("snapStart", CfnFunctionSnapStartPropertyValidator)(properties.snapStart));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnFunctionTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("timeout", cdk.validateNumber)(properties.timeout));
  errors.collect(cdk.propertyValidator("tracingConfig", CfnFunctionTracingConfigPropertyValidator)(properties.tracingConfig));
  errors.collect(cdk.propertyValidator("vpcConfig", CfnFunctionVpcConfigPropertyValidator)(properties.vpcConfig));
  return errors.wrap("supplied properties not correct for \\"CodeProperty\\"");
}

// @ts-ignore TS6133
function convertCfnFunctionCodePropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnFunctionCodePropertyValidator(properties).assertSuccess();
  return {
    "Architectures": cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),
    "Code": convertCfnFunctionCodePropertyToCloudFormation(properties.code),
    "CodeSigningConfigArn": cdk.stringToCloudFormation(properties.codeSigningConfigArn),
    "DeadLetterConfig": convertCfnFunctionDeadLetterConfigPropertyToCloudFormation(properties.deadLetterConfig),
    "Description": cdk.stringToCloudFormation(properties.description),
    "Environment": convertCfnFunctionEnvironmentPropertyToCloudFormation(properties.environment),
    "EphemeralStorage": convertCfnFunctionEphemeralStoragePropertyToCloudFormation(properties.ephemeralStorage),
    "FileSystemConfigs": cdk.listMapper(convertCfnFunctionFileSystemConfigPropertyToCloudFormation)(properties.fileSystemConfigs),
    "FunctionName": cdk.stringToCloudFormation(properties.functionName),
    "Handler": cdk.stringToCloudFormation(properties.handler),
    "ImageConfig": convertCfnFunctionImageConfigPropertyToCloudFormation(properties.imageConfig),
    "KmsKeyArn": cdk.stringToCloudFormation(properties.kmsKeyArn),
    "Layers": cdk.listMapper(cdk.stringToCloudFormation)(properties.layers),
    "MemorySize": cdk.numberToCloudFormation(properties.memorySize),
    "PackageType": cdk.stringToCloudFormation(properties.packageType),
    "ReservedConcurrentExecutions": cdk.numberToCloudFormation(properties.reservedConcurrentExecutions),
    "Role": cdk.stringToCloudFormation(properties.role),
    "Runtime": cdk.stringToCloudFormation(properties.runtime),
    "RuntimeManagementConfig": convertCfnFunctionRuntimeManagementConfigPropertyToCloudFormation(properties.runtimeManagementConfig),
    "SnapStart": convertCfnFunctionSnapStartPropertyToCloudFormation(properties.snapStart),
    "Tags": cdk.listMapper(convertCfnFunctionTagPropertyToCloudFormation)(properties.tags),
    "Timeout": cdk.numberToCloudFormation(properties.timeout),
    "TracingConfig": convertCfnFunctionTracingConfigPropertyToCloudFormation(properties.tracingConfig),
    "VpcConfig": convertCfnFunctionVpcConfigPropertyToCloudFormation(properties.vpcConfig)
  };
}

// @ts-ignore TS6133
function CfnFunctionCodePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.CodeProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.CodeProperty>();
  ret.addPropertyResult("architectures", "Architectures", (properties.Architectures != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Architectures) : undefined));
  ret.addPropertyResult("code", "Code", (properties.Code != null ? CfnFunctionCodePropertyFromCloudFormation(properties.Code) : undefined));
  ret.addPropertyResult("codeSigningConfigArn", "CodeSigningConfigArn", (properties.CodeSigningConfigArn != null ? cfn_parse.FromCloudFormation.getString(properties.CodeSigningConfigArn) : undefined));
  ret.addPropertyResult("deadLetterConfig", "DeadLetterConfig", (properties.DeadLetterConfig != null ? CfnFunctionDeadLetterConfigPropertyFromCloudFormation(properties.DeadLetterConfig) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("environment", "Environment", (properties.Environment != null ? CfnFunctionEnvironmentPropertyFromCloudFormation(properties.Environment) : undefined));
  ret.addPropertyResult("ephemeralStorage", "EphemeralStorage", (properties.EphemeralStorage != null ? CfnFunctionEphemeralStoragePropertyFromCloudFormation(properties.EphemeralStorage) : undefined));
  ret.addPropertyResult("fileSystemConfigs", "FileSystemConfigs", (properties.FileSystemConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionFileSystemConfigPropertyFromCloudFormation)(properties.FileSystemConfigs) : undefined));
  ret.addPropertyResult("functionName", "FunctionName", (properties.FunctionName != null ? cfn_parse.FromCloudFormation.getString(properties.FunctionName) : undefined));
  ret.addPropertyResult("handler", "Handler", (properties.Handler != null ? cfn_parse.FromCloudFormation.getString(properties.Handler) : undefined));
  ret.addPropertyResult("imageConfig", "ImageConfig", (properties.ImageConfig != null ? CfnFunctionImageConfigPropertyFromCloudFormation(properties.ImageConfig) : undefined));
  ret.addPropertyResult("kmsKeyArn", "KmsKeyArn", (properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined));
  ret.addPropertyResult("layers", "Layers", (properties.Layers != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Layers) : undefined));
  ret.addPropertyResult("memorySize", "MemorySize", (properties.MemorySize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemorySize) : undefined));
  ret.addPropertyResult("packageType", "PackageType", (properties.PackageType != null ? cfn_parse.FromCloudFormation.getString(properties.PackageType) : undefined));
  ret.addPropertyResult("reservedConcurrentExecutions", "ReservedConcurrentExecutions", (properties.ReservedConcurrentExecutions != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReservedConcurrentExecutions) : undefined));
  ret.addPropertyResult("role", "Role", (properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined));
  ret.addPropertyResult("runtime", "Runtime", (properties.Runtime != null ? cfn_parse.FromCloudFormation.getString(properties.Runtime) : undefined));
  ret.addPropertyResult("runtimeManagementConfig", "RuntimeManagementConfig", (properties.RuntimeManagementConfig != null ? CfnFunctionRuntimeManagementConfigPropertyFromCloudFormation(properties.RuntimeManagementConfig) : undefined));
  ret.addPropertyResult("snapStart", "SnapStart", (properties.SnapStart != null ? CfnFunctionSnapStartPropertyFromCloudFormation(properties.SnapStart) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("timeout", "Timeout", (properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined));
  ret.addPropertyResult("tracingConfig", "TracingConfig", (properties.TracingConfig != null ? CfnFunctionTracingConfigPropertyFromCloudFormation(properties.TracingConfig) : undefined));
  ret.addPropertyResult("vpcConfig", "VpcConfig", (properties.VpcConfig != null ? CfnFunctionVpcConfigPropertyFromCloudFormation(properties.VpcConfig) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`DeadLetterConfigProperty\`
 *
 * @param properties - the TypeScript properties of a \`DeadLetterConfigProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnFunctionDeadLetterConfigPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("architectures", cdk.listValidator(cdk.validateString))(properties.architectures));
  errors.collect(cdk.propertyValidator("code", cdk.requiredValidator)(properties.code));
  errors.collect(cdk.propertyValidator("code", CfnFunctionCodePropertyValidator)(properties.code));
  errors.collect(cdk.propertyValidator("codeSigningConfigArn", cdk.validateString)(properties.codeSigningConfigArn));
  errors.collect(cdk.propertyValidator("deadLetterConfig", CfnFunctionDeadLetterConfigPropertyValidator)(properties.deadLetterConfig));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("environment", CfnFunctionEnvironmentPropertyValidator)(properties.environment));
  errors.collect(cdk.propertyValidator("ephemeralStorage", CfnFunctionEphemeralStoragePropertyValidator)(properties.ephemeralStorage));
  errors.collect(cdk.propertyValidator("fileSystemConfigs", cdk.listValidator(CfnFunctionFileSystemConfigPropertyValidator))(properties.fileSystemConfigs));
  errors.collect(cdk.propertyValidator("functionName", cdk.validateString)(properties.functionName));
  errors.collect(cdk.propertyValidator("handler", cdk.validateString)(properties.handler));
  errors.collect(cdk.propertyValidator("imageConfig", CfnFunctionImageConfigPropertyValidator)(properties.imageConfig));
  errors.collect(cdk.propertyValidator("kmsKeyArn", cdk.validateString)(properties.kmsKeyArn));
  errors.collect(cdk.propertyValidator("layers", cdk.listValidator(cdk.validateString))(properties.layers));
  errors.collect(cdk.propertyValidator("memorySize", cdk.validateNumber)(properties.memorySize));
  errors.collect(cdk.propertyValidator("packageType", cdk.validateString)(properties.packageType));
  errors.collect(cdk.propertyValidator("reservedConcurrentExecutions", cdk.validateNumber)(properties.reservedConcurrentExecutions));
  errors.collect(cdk.propertyValidator("role", cdk.requiredValidator)(properties.role));
  errors.collect(cdk.propertyValidator("role", cdk.validateString)(properties.role));
  errors.collect(cdk.propertyValidator("runtime", cdk.validateString)(properties.runtime));
  errors.collect(cdk.propertyValidator("runtimeManagementConfig", CfnFunctionRuntimeManagementConfigPropertyValidator)(properties.runtimeManagementConfig));
  errors.collect(cdk.propertyValidator("snapStart", CfnFunctionSnapStartPropertyValidator)(properties.snapStart));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnFunctionTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("timeout", cdk.validateNumber)(properties.timeout));
  errors.collect(cdk.propertyValidator("tracingConfig", CfnFunctionTracingConfigPropertyValidator)(properties.tracingConfig));
  errors.collect(cdk.propertyValidator("vpcConfig", CfnFunctionVpcConfigPropertyValidator)(properties.vpcConfig));
  return errors.wrap("supplied properties not correct for \\"DeadLetterConfigProperty\\"");
}

// @ts-ignore TS6133
function convertCfnFunctionDeadLetterConfigPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnFunctionDeadLetterConfigPropertyValidator(properties).assertSuccess();
  return {
    "Architectures": cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),
    "Code": convertCfnFunctionCodePropertyToCloudFormation(properties.code),
    "CodeSigningConfigArn": cdk.stringToCloudFormation(properties.codeSigningConfigArn),
    "DeadLetterConfig": convertCfnFunctionDeadLetterConfigPropertyToCloudFormation(properties.deadLetterConfig),
    "Description": cdk.stringToCloudFormation(properties.description),
    "Environment": convertCfnFunctionEnvironmentPropertyToCloudFormation(properties.environment),
    "EphemeralStorage": convertCfnFunctionEphemeralStoragePropertyToCloudFormation(properties.ephemeralStorage),
    "FileSystemConfigs": cdk.listMapper(convertCfnFunctionFileSystemConfigPropertyToCloudFormation)(properties.fileSystemConfigs),
    "FunctionName": cdk.stringToCloudFormation(properties.functionName),
    "Handler": cdk.stringToCloudFormation(properties.handler),
    "ImageConfig": convertCfnFunctionImageConfigPropertyToCloudFormation(properties.imageConfig),
    "KmsKeyArn": cdk.stringToCloudFormation(properties.kmsKeyArn),
    "Layers": cdk.listMapper(cdk.stringToCloudFormation)(properties.layers),
    "MemorySize": cdk.numberToCloudFormation(properties.memorySize),
    "PackageType": cdk.stringToCloudFormation(properties.packageType),
    "ReservedConcurrentExecutions": cdk.numberToCloudFormation(properties.reservedConcurrentExecutions),
    "Role": cdk.stringToCloudFormation(properties.role),
    "Runtime": cdk.stringToCloudFormation(properties.runtime),
    "RuntimeManagementConfig": convertCfnFunctionRuntimeManagementConfigPropertyToCloudFormation(properties.runtimeManagementConfig),
    "SnapStart": convertCfnFunctionSnapStartPropertyToCloudFormation(properties.snapStart),
    "Tags": cdk.listMapper(convertCfnFunctionTagPropertyToCloudFormation)(properties.tags),
    "Timeout": cdk.numberToCloudFormation(properties.timeout),
    "TracingConfig": convertCfnFunctionTracingConfigPropertyToCloudFormation(properties.tracingConfig),
    "VpcConfig": convertCfnFunctionVpcConfigPropertyToCloudFormation(properties.vpcConfig)
  };
}

// @ts-ignore TS6133
function CfnFunctionDeadLetterConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.DeadLetterConfigProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.DeadLetterConfigProperty>();
  ret.addPropertyResult("architectures", "Architectures", (properties.Architectures != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Architectures) : undefined));
  ret.addPropertyResult("code", "Code", (properties.Code != null ? CfnFunctionCodePropertyFromCloudFormation(properties.Code) : undefined));
  ret.addPropertyResult("codeSigningConfigArn", "CodeSigningConfigArn", (properties.CodeSigningConfigArn != null ? cfn_parse.FromCloudFormation.getString(properties.CodeSigningConfigArn) : undefined));
  ret.addPropertyResult("deadLetterConfig", "DeadLetterConfig", (properties.DeadLetterConfig != null ? CfnFunctionDeadLetterConfigPropertyFromCloudFormation(properties.DeadLetterConfig) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("environment", "Environment", (properties.Environment != null ? CfnFunctionEnvironmentPropertyFromCloudFormation(properties.Environment) : undefined));
  ret.addPropertyResult("ephemeralStorage", "EphemeralStorage", (properties.EphemeralStorage != null ? CfnFunctionEphemeralStoragePropertyFromCloudFormation(properties.EphemeralStorage) : undefined));
  ret.addPropertyResult("fileSystemConfigs", "FileSystemConfigs", (properties.FileSystemConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionFileSystemConfigPropertyFromCloudFormation)(properties.FileSystemConfigs) : undefined));
  ret.addPropertyResult("functionName", "FunctionName", (properties.FunctionName != null ? cfn_parse.FromCloudFormation.getString(properties.FunctionName) : undefined));
  ret.addPropertyResult("handler", "Handler", (properties.Handler != null ? cfn_parse.FromCloudFormation.getString(properties.Handler) : undefined));
  ret.addPropertyResult("imageConfig", "ImageConfig", (properties.ImageConfig != null ? CfnFunctionImageConfigPropertyFromCloudFormation(properties.ImageConfig) : undefined));
  ret.addPropertyResult("kmsKeyArn", "KmsKeyArn", (properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined));
  ret.addPropertyResult("layers", "Layers", (properties.Layers != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Layers) : undefined));
  ret.addPropertyResult("memorySize", "MemorySize", (properties.MemorySize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemorySize) : undefined));
  ret.addPropertyResult("packageType", "PackageType", (properties.PackageType != null ? cfn_parse.FromCloudFormation.getString(properties.PackageType) : undefined));
  ret.addPropertyResult("reservedConcurrentExecutions", "ReservedConcurrentExecutions", (properties.ReservedConcurrentExecutions != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReservedConcurrentExecutions) : undefined));
  ret.addPropertyResult("role", "Role", (properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined));
  ret.addPropertyResult("runtime", "Runtime", (properties.Runtime != null ? cfn_parse.FromCloudFormation.getString(properties.Runtime) : undefined));
  ret.addPropertyResult("runtimeManagementConfig", "RuntimeManagementConfig", (properties.RuntimeManagementConfig != null ? CfnFunctionRuntimeManagementConfigPropertyFromCloudFormation(properties.RuntimeManagementConfig) : undefined));
  ret.addPropertyResult("snapStart", "SnapStart", (properties.SnapStart != null ? CfnFunctionSnapStartPropertyFromCloudFormation(properties.SnapStart) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("timeout", "Timeout", (properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined));
  ret.addPropertyResult("tracingConfig", "TracingConfig", (properties.TracingConfig != null ? CfnFunctionTracingConfigPropertyFromCloudFormation(properties.TracingConfig) : undefined));
  ret.addPropertyResult("vpcConfig", "VpcConfig", (properties.VpcConfig != null ? CfnFunctionVpcConfigPropertyFromCloudFormation(properties.VpcConfig) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`ImageConfigProperty\`
 *
 * @param properties - the TypeScript properties of a \`ImageConfigProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnFunctionImageConfigPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("architectures", cdk.listValidator(cdk.validateString))(properties.architectures));
  errors.collect(cdk.propertyValidator("code", cdk.requiredValidator)(properties.code));
  errors.collect(cdk.propertyValidator("code", CfnFunctionCodePropertyValidator)(properties.code));
  errors.collect(cdk.propertyValidator("codeSigningConfigArn", cdk.validateString)(properties.codeSigningConfigArn));
  errors.collect(cdk.propertyValidator("deadLetterConfig", CfnFunctionDeadLetterConfigPropertyValidator)(properties.deadLetterConfig));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("environment", CfnFunctionEnvironmentPropertyValidator)(properties.environment));
  errors.collect(cdk.propertyValidator("ephemeralStorage", CfnFunctionEphemeralStoragePropertyValidator)(properties.ephemeralStorage));
  errors.collect(cdk.propertyValidator("fileSystemConfigs", cdk.listValidator(CfnFunctionFileSystemConfigPropertyValidator))(properties.fileSystemConfigs));
  errors.collect(cdk.propertyValidator("functionName", cdk.validateString)(properties.functionName));
  errors.collect(cdk.propertyValidator("handler", cdk.validateString)(properties.handler));
  errors.collect(cdk.propertyValidator("imageConfig", CfnFunctionImageConfigPropertyValidator)(properties.imageConfig));
  errors.collect(cdk.propertyValidator("kmsKeyArn", cdk.validateString)(properties.kmsKeyArn));
  errors.collect(cdk.propertyValidator("layers", cdk.listValidator(cdk.validateString))(properties.layers));
  errors.collect(cdk.propertyValidator("memorySize", cdk.validateNumber)(properties.memorySize));
  errors.collect(cdk.propertyValidator("packageType", cdk.validateString)(properties.packageType));
  errors.collect(cdk.propertyValidator("reservedConcurrentExecutions", cdk.validateNumber)(properties.reservedConcurrentExecutions));
  errors.collect(cdk.propertyValidator("role", cdk.requiredValidator)(properties.role));
  errors.collect(cdk.propertyValidator("role", cdk.validateString)(properties.role));
  errors.collect(cdk.propertyValidator("runtime", cdk.validateString)(properties.runtime));
  errors.collect(cdk.propertyValidator("runtimeManagementConfig", CfnFunctionRuntimeManagementConfigPropertyValidator)(properties.runtimeManagementConfig));
  errors.collect(cdk.propertyValidator("snapStart", CfnFunctionSnapStartPropertyValidator)(properties.snapStart));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnFunctionTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("timeout", cdk.validateNumber)(properties.timeout));
  errors.collect(cdk.propertyValidator("tracingConfig", CfnFunctionTracingConfigPropertyValidator)(properties.tracingConfig));
  errors.collect(cdk.propertyValidator("vpcConfig", CfnFunctionVpcConfigPropertyValidator)(properties.vpcConfig));
  return errors.wrap("supplied properties not correct for \\"ImageConfigProperty\\"");
}

// @ts-ignore TS6133
function convertCfnFunctionImageConfigPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnFunctionImageConfigPropertyValidator(properties).assertSuccess();
  return {
    "Architectures": cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),
    "Code": convertCfnFunctionCodePropertyToCloudFormation(properties.code),
    "CodeSigningConfigArn": cdk.stringToCloudFormation(properties.codeSigningConfigArn),
    "DeadLetterConfig": convertCfnFunctionDeadLetterConfigPropertyToCloudFormation(properties.deadLetterConfig),
    "Description": cdk.stringToCloudFormation(properties.description),
    "Environment": convertCfnFunctionEnvironmentPropertyToCloudFormation(properties.environment),
    "EphemeralStorage": convertCfnFunctionEphemeralStoragePropertyToCloudFormation(properties.ephemeralStorage),
    "FileSystemConfigs": cdk.listMapper(convertCfnFunctionFileSystemConfigPropertyToCloudFormation)(properties.fileSystemConfigs),
    "FunctionName": cdk.stringToCloudFormation(properties.functionName),
    "Handler": cdk.stringToCloudFormation(properties.handler),
    "ImageConfig": convertCfnFunctionImageConfigPropertyToCloudFormation(properties.imageConfig),
    "KmsKeyArn": cdk.stringToCloudFormation(properties.kmsKeyArn),
    "Layers": cdk.listMapper(cdk.stringToCloudFormation)(properties.layers),
    "MemorySize": cdk.numberToCloudFormation(properties.memorySize),
    "PackageType": cdk.stringToCloudFormation(properties.packageType),
    "ReservedConcurrentExecutions": cdk.numberToCloudFormation(properties.reservedConcurrentExecutions),
    "Role": cdk.stringToCloudFormation(properties.role),
    "Runtime": cdk.stringToCloudFormation(properties.runtime),
    "RuntimeManagementConfig": convertCfnFunctionRuntimeManagementConfigPropertyToCloudFormation(properties.runtimeManagementConfig),
    "SnapStart": convertCfnFunctionSnapStartPropertyToCloudFormation(properties.snapStart),
    "Tags": cdk.listMapper(convertCfnFunctionTagPropertyToCloudFormation)(properties.tags),
    "Timeout": cdk.numberToCloudFormation(properties.timeout),
    "TracingConfig": convertCfnFunctionTracingConfigPropertyToCloudFormation(properties.tracingConfig),
    "VpcConfig": convertCfnFunctionVpcConfigPropertyToCloudFormation(properties.vpcConfig)
  };
}

// @ts-ignore TS6133
function CfnFunctionImageConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.ImageConfigProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.ImageConfigProperty>();
  ret.addPropertyResult("architectures", "Architectures", (properties.Architectures != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Architectures) : undefined));
  ret.addPropertyResult("code", "Code", (properties.Code != null ? CfnFunctionCodePropertyFromCloudFormation(properties.Code) : undefined));
  ret.addPropertyResult("codeSigningConfigArn", "CodeSigningConfigArn", (properties.CodeSigningConfigArn != null ? cfn_parse.FromCloudFormation.getString(properties.CodeSigningConfigArn) : undefined));
  ret.addPropertyResult("deadLetterConfig", "DeadLetterConfig", (properties.DeadLetterConfig != null ? CfnFunctionDeadLetterConfigPropertyFromCloudFormation(properties.DeadLetterConfig) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("environment", "Environment", (properties.Environment != null ? CfnFunctionEnvironmentPropertyFromCloudFormation(properties.Environment) : undefined));
  ret.addPropertyResult("ephemeralStorage", "EphemeralStorage", (properties.EphemeralStorage != null ? CfnFunctionEphemeralStoragePropertyFromCloudFormation(properties.EphemeralStorage) : undefined));
  ret.addPropertyResult("fileSystemConfigs", "FileSystemConfigs", (properties.FileSystemConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionFileSystemConfigPropertyFromCloudFormation)(properties.FileSystemConfigs) : undefined));
  ret.addPropertyResult("functionName", "FunctionName", (properties.FunctionName != null ? cfn_parse.FromCloudFormation.getString(properties.FunctionName) : undefined));
  ret.addPropertyResult("handler", "Handler", (properties.Handler != null ? cfn_parse.FromCloudFormation.getString(properties.Handler) : undefined));
  ret.addPropertyResult("imageConfig", "ImageConfig", (properties.ImageConfig != null ? CfnFunctionImageConfigPropertyFromCloudFormation(properties.ImageConfig) : undefined));
  ret.addPropertyResult("kmsKeyArn", "KmsKeyArn", (properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined));
  ret.addPropertyResult("layers", "Layers", (properties.Layers != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Layers) : undefined));
  ret.addPropertyResult("memorySize", "MemorySize", (properties.MemorySize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemorySize) : undefined));
  ret.addPropertyResult("packageType", "PackageType", (properties.PackageType != null ? cfn_parse.FromCloudFormation.getString(properties.PackageType) : undefined));
  ret.addPropertyResult("reservedConcurrentExecutions", "ReservedConcurrentExecutions", (properties.ReservedConcurrentExecutions != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReservedConcurrentExecutions) : undefined));
  ret.addPropertyResult("role", "Role", (properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined));
  ret.addPropertyResult("runtime", "Runtime", (properties.Runtime != null ? cfn_parse.FromCloudFormation.getString(properties.Runtime) : undefined));
  ret.addPropertyResult("runtimeManagementConfig", "RuntimeManagementConfig", (properties.RuntimeManagementConfig != null ? CfnFunctionRuntimeManagementConfigPropertyFromCloudFormation(properties.RuntimeManagementConfig) : undefined));
  ret.addPropertyResult("snapStart", "SnapStart", (properties.SnapStart != null ? CfnFunctionSnapStartPropertyFromCloudFormation(properties.SnapStart) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("timeout", "Timeout", (properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined));
  ret.addPropertyResult("tracingConfig", "TracingConfig", (properties.TracingConfig != null ? CfnFunctionTracingConfigPropertyFromCloudFormation(properties.TracingConfig) : undefined));
  ret.addPropertyResult("vpcConfig", "VpcConfig", (properties.VpcConfig != null ? CfnFunctionVpcConfigPropertyFromCloudFormation(properties.VpcConfig) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`TagProperty\`
 *
 * @param properties - the TypeScript properties of a \`TagProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnFunctionTagPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("architectures", cdk.listValidator(cdk.validateString))(properties.architectures));
  errors.collect(cdk.propertyValidator("code", cdk.requiredValidator)(properties.code));
  errors.collect(cdk.propertyValidator("code", CfnFunctionCodePropertyValidator)(properties.code));
  errors.collect(cdk.propertyValidator("codeSigningConfigArn", cdk.validateString)(properties.codeSigningConfigArn));
  errors.collect(cdk.propertyValidator("deadLetterConfig", CfnFunctionDeadLetterConfigPropertyValidator)(properties.deadLetterConfig));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("environment", CfnFunctionEnvironmentPropertyValidator)(properties.environment));
  errors.collect(cdk.propertyValidator("ephemeralStorage", CfnFunctionEphemeralStoragePropertyValidator)(properties.ephemeralStorage));
  errors.collect(cdk.propertyValidator("fileSystemConfigs", cdk.listValidator(CfnFunctionFileSystemConfigPropertyValidator))(properties.fileSystemConfigs));
  errors.collect(cdk.propertyValidator("functionName", cdk.validateString)(properties.functionName));
  errors.collect(cdk.propertyValidator("handler", cdk.validateString)(properties.handler));
  errors.collect(cdk.propertyValidator("imageConfig", CfnFunctionImageConfigPropertyValidator)(properties.imageConfig));
  errors.collect(cdk.propertyValidator("kmsKeyArn", cdk.validateString)(properties.kmsKeyArn));
  errors.collect(cdk.propertyValidator("layers", cdk.listValidator(cdk.validateString))(properties.layers));
  errors.collect(cdk.propertyValidator("memorySize", cdk.validateNumber)(properties.memorySize));
  errors.collect(cdk.propertyValidator("packageType", cdk.validateString)(properties.packageType));
  errors.collect(cdk.propertyValidator("reservedConcurrentExecutions", cdk.validateNumber)(properties.reservedConcurrentExecutions));
  errors.collect(cdk.propertyValidator("role", cdk.requiredValidator)(properties.role));
  errors.collect(cdk.propertyValidator("role", cdk.validateString)(properties.role));
  errors.collect(cdk.propertyValidator("runtime", cdk.validateString)(properties.runtime));
  errors.collect(cdk.propertyValidator("runtimeManagementConfig", CfnFunctionRuntimeManagementConfigPropertyValidator)(properties.runtimeManagementConfig));
  errors.collect(cdk.propertyValidator("snapStart", CfnFunctionSnapStartPropertyValidator)(properties.snapStart));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnFunctionTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("timeout", cdk.validateNumber)(properties.timeout));
  errors.collect(cdk.propertyValidator("tracingConfig", CfnFunctionTracingConfigPropertyValidator)(properties.tracingConfig));
  errors.collect(cdk.propertyValidator("vpcConfig", CfnFunctionVpcConfigPropertyValidator)(properties.vpcConfig));
  return errors.wrap("supplied properties not correct for \\"TagProperty\\"");
}

// @ts-ignore TS6133
function convertCfnFunctionTagPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnFunctionTagPropertyValidator(properties).assertSuccess();
  return {
    "Architectures": cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),
    "Code": convertCfnFunctionCodePropertyToCloudFormation(properties.code),
    "CodeSigningConfigArn": cdk.stringToCloudFormation(properties.codeSigningConfigArn),
    "DeadLetterConfig": convertCfnFunctionDeadLetterConfigPropertyToCloudFormation(properties.deadLetterConfig),
    "Description": cdk.stringToCloudFormation(properties.description),
    "Environment": convertCfnFunctionEnvironmentPropertyToCloudFormation(properties.environment),
    "EphemeralStorage": convertCfnFunctionEphemeralStoragePropertyToCloudFormation(properties.ephemeralStorage),
    "FileSystemConfigs": cdk.listMapper(convertCfnFunctionFileSystemConfigPropertyToCloudFormation)(properties.fileSystemConfigs),
    "FunctionName": cdk.stringToCloudFormation(properties.functionName),
    "Handler": cdk.stringToCloudFormation(properties.handler),
    "ImageConfig": convertCfnFunctionImageConfigPropertyToCloudFormation(properties.imageConfig),
    "KmsKeyArn": cdk.stringToCloudFormation(properties.kmsKeyArn),
    "Layers": cdk.listMapper(cdk.stringToCloudFormation)(properties.layers),
    "MemorySize": cdk.numberToCloudFormation(properties.memorySize),
    "PackageType": cdk.stringToCloudFormation(properties.packageType),
    "ReservedConcurrentExecutions": cdk.numberToCloudFormation(properties.reservedConcurrentExecutions),
    "Role": cdk.stringToCloudFormation(properties.role),
    "Runtime": cdk.stringToCloudFormation(properties.runtime),
    "RuntimeManagementConfig": convertCfnFunctionRuntimeManagementConfigPropertyToCloudFormation(properties.runtimeManagementConfig),
    "SnapStart": convertCfnFunctionSnapStartPropertyToCloudFormation(properties.snapStart),
    "Tags": cdk.listMapper(convertCfnFunctionTagPropertyToCloudFormation)(properties.tags),
    "Timeout": cdk.numberToCloudFormation(properties.timeout),
    "TracingConfig": convertCfnFunctionTracingConfigPropertyToCloudFormation(properties.tracingConfig),
    "VpcConfig": convertCfnFunctionVpcConfigPropertyToCloudFormation(properties.vpcConfig)
  };
}

// @ts-ignore TS6133
function CfnFunctionTagPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnFunction.TagProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.TagProperty>();
  ret.addPropertyResult("architectures", "Architectures", (properties.Architectures != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Architectures) : undefined));
  ret.addPropertyResult("code", "Code", (properties.Code != null ? CfnFunctionCodePropertyFromCloudFormation(properties.Code) : undefined));
  ret.addPropertyResult("codeSigningConfigArn", "CodeSigningConfigArn", (properties.CodeSigningConfigArn != null ? cfn_parse.FromCloudFormation.getString(properties.CodeSigningConfigArn) : undefined));
  ret.addPropertyResult("deadLetterConfig", "DeadLetterConfig", (properties.DeadLetterConfig != null ? CfnFunctionDeadLetterConfigPropertyFromCloudFormation(properties.DeadLetterConfig) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("environment", "Environment", (properties.Environment != null ? CfnFunctionEnvironmentPropertyFromCloudFormation(properties.Environment) : undefined));
  ret.addPropertyResult("ephemeralStorage", "EphemeralStorage", (properties.EphemeralStorage != null ? CfnFunctionEphemeralStoragePropertyFromCloudFormation(properties.EphemeralStorage) : undefined));
  ret.addPropertyResult("fileSystemConfigs", "FileSystemConfigs", (properties.FileSystemConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionFileSystemConfigPropertyFromCloudFormation)(properties.FileSystemConfigs) : undefined));
  ret.addPropertyResult("functionName", "FunctionName", (properties.FunctionName != null ? cfn_parse.FromCloudFormation.getString(properties.FunctionName) : undefined));
  ret.addPropertyResult("handler", "Handler", (properties.Handler != null ? cfn_parse.FromCloudFormation.getString(properties.Handler) : undefined));
  ret.addPropertyResult("imageConfig", "ImageConfig", (properties.ImageConfig != null ? CfnFunctionImageConfigPropertyFromCloudFormation(properties.ImageConfig) : undefined));
  ret.addPropertyResult("kmsKeyArn", "KmsKeyArn", (properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined));
  ret.addPropertyResult("layers", "Layers", (properties.Layers != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Layers) : undefined));
  ret.addPropertyResult("memorySize", "MemorySize", (properties.MemorySize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemorySize) : undefined));
  ret.addPropertyResult("packageType", "PackageType", (properties.PackageType != null ? cfn_parse.FromCloudFormation.getString(properties.PackageType) : undefined));
  ret.addPropertyResult("reservedConcurrentExecutions", "ReservedConcurrentExecutions", (properties.ReservedConcurrentExecutions != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReservedConcurrentExecutions) : undefined));
  ret.addPropertyResult("role", "Role", (properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined));
  ret.addPropertyResult("runtime", "Runtime", (properties.Runtime != null ? cfn_parse.FromCloudFormation.getString(properties.Runtime) : undefined));
  ret.addPropertyResult("runtimeManagementConfig", "RuntimeManagementConfig", (properties.RuntimeManagementConfig != null ? CfnFunctionRuntimeManagementConfigPropertyFromCloudFormation(properties.RuntimeManagementConfig) : undefined));
  ret.addPropertyResult("snapStart", "SnapStart", (properties.SnapStart != null ? CfnFunctionSnapStartPropertyFromCloudFormation(properties.SnapStart) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("timeout", "Timeout", (properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined));
  ret.addPropertyResult("tracingConfig", "TracingConfig", (properties.TracingConfig != null ? CfnFunctionTracingConfigPropertyFromCloudFormation(properties.TracingConfig) : undefined));
  ret.addPropertyResult("vpcConfig", "VpcConfig", (properties.VpcConfig != null ? CfnFunctionVpcConfigPropertyFromCloudFormation(properties.VpcConfig) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`FileSystemConfigProperty\`
 *
 * @param properties - the TypeScript properties of a \`FileSystemConfigProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnFunctionFileSystemConfigPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("architectures", cdk.listValidator(cdk.validateString))(properties.architectures));
  errors.collect(cdk.propertyValidator("code", cdk.requiredValidator)(properties.code));
  errors.collect(cdk.propertyValidator("code", CfnFunctionCodePropertyValidator)(properties.code));
  errors.collect(cdk.propertyValidator("codeSigningConfigArn", cdk.validateString)(properties.codeSigningConfigArn));
  errors.collect(cdk.propertyValidator("deadLetterConfig", CfnFunctionDeadLetterConfigPropertyValidator)(properties.deadLetterConfig));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("environment", CfnFunctionEnvironmentPropertyValidator)(properties.environment));
  errors.collect(cdk.propertyValidator("ephemeralStorage", CfnFunctionEphemeralStoragePropertyValidator)(properties.ephemeralStorage));
  errors.collect(cdk.propertyValidator("fileSystemConfigs", cdk.listValidator(CfnFunctionFileSystemConfigPropertyValidator))(properties.fileSystemConfigs));
  errors.collect(cdk.propertyValidator("functionName", cdk.validateString)(properties.functionName));
  errors.collect(cdk.propertyValidator("handler", cdk.validateString)(properties.handler));
  errors.collect(cdk.propertyValidator("imageConfig", CfnFunctionImageConfigPropertyValidator)(properties.imageConfig));
  errors.collect(cdk.propertyValidator("kmsKeyArn", cdk.validateString)(properties.kmsKeyArn));
  errors.collect(cdk.propertyValidator("layers", cdk.listValidator(cdk.validateString))(properties.layers));
  errors.collect(cdk.propertyValidator("memorySize", cdk.validateNumber)(properties.memorySize));
  errors.collect(cdk.propertyValidator("packageType", cdk.validateString)(properties.packageType));
  errors.collect(cdk.propertyValidator("reservedConcurrentExecutions", cdk.validateNumber)(properties.reservedConcurrentExecutions));
  errors.collect(cdk.propertyValidator("role", cdk.requiredValidator)(properties.role));
  errors.collect(cdk.propertyValidator("role", cdk.validateString)(properties.role));
  errors.collect(cdk.propertyValidator("runtime", cdk.validateString)(properties.runtime));
  errors.collect(cdk.propertyValidator("runtimeManagementConfig", CfnFunctionRuntimeManagementConfigPropertyValidator)(properties.runtimeManagementConfig));
  errors.collect(cdk.propertyValidator("snapStart", CfnFunctionSnapStartPropertyValidator)(properties.snapStart));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnFunctionTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("timeout", cdk.validateNumber)(properties.timeout));
  errors.collect(cdk.propertyValidator("tracingConfig", CfnFunctionTracingConfigPropertyValidator)(properties.tracingConfig));
  errors.collect(cdk.propertyValidator("vpcConfig", CfnFunctionVpcConfigPropertyValidator)(properties.vpcConfig));
  return errors.wrap("supplied properties not correct for \\"FileSystemConfigProperty\\"");
}

// @ts-ignore TS6133
function convertCfnFunctionFileSystemConfigPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnFunctionFileSystemConfigPropertyValidator(properties).assertSuccess();
  return {
    "Architectures": cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),
    "Code": convertCfnFunctionCodePropertyToCloudFormation(properties.code),
    "CodeSigningConfigArn": cdk.stringToCloudFormation(properties.codeSigningConfigArn),
    "DeadLetterConfig": convertCfnFunctionDeadLetterConfigPropertyToCloudFormation(properties.deadLetterConfig),
    "Description": cdk.stringToCloudFormation(properties.description),
    "Environment": convertCfnFunctionEnvironmentPropertyToCloudFormation(properties.environment),
    "EphemeralStorage": convertCfnFunctionEphemeralStoragePropertyToCloudFormation(properties.ephemeralStorage),
    "FileSystemConfigs": cdk.listMapper(convertCfnFunctionFileSystemConfigPropertyToCloudFormation)(properties.fileSystemConfigs),
    "FunctionName": cdk.stringToCloudFormation(properties.functionName),
    "Handler": cdk.stringToCloudFormation(properties.handler),
    "ImageConfig": convertCfnFunctionImageConfigPropertyToCloudFormation(properties.imageConfig),
    "KmsKeyArn": cdk.stringToCloudFormation(properties.kmsKeyArn),
    "Layers": cdk.listMapper(cdk.stringToCloudFormation)(properties.layers),
    "MemorySize": cdk.numberToCloudFormation(properties.memorySize),
    "PackageType": cdk.stringToCloudFormation(properties.packageType),
    "ReservedConcurrentExecutions": cdk.numberToCloudFormation(properties.reservedConcurrentExecutions),
    "Role": cdk.stringToCloudFormation(properties.role),
    "Runtime": cdk.stringToCloudFormation(properties.runtime),
    "RuntimeManagementConfig": convertCfnFunctionRuntimeManagementConfigPropertyToCloudFormation(properties.runtimeManagementConfig),
    "SnapStart": convertCfnFunctionSnapStartPropertyToCloudFormation(properties.snapStart),
    "Tags": cdk.listMapper(convertCfnFunctionTagPropertyToCloudFormation)(properties.tags),
    "Timeout": cdk.numberToCloudFormation(properties.timeout),
    "TracingConfig": convertCfnFunctionTracingConfigPropertyToCloudFormation(properties.tracingConfig),
    "VpcConfig": convertCfnFunctionVpcConfigPropertyToCloudFormation(properties.vpcConfig)
  };
}

// @ts-ignore TS6133
function CfnFunctionFileSystemConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.FileSystemConfigProperty>();
  ret.addPropertyResult("architectures", "Architectures", (properties.Architectures != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Architectures) : undefined));
  ret.addPropertyResult("code", "Code", (properties.Code != null ? CfnFunctionCodePropertyFromCloudFormation(properties.Code) : undefined));
  ret.addPropertyResult("codeSigningConfigArn", "CodeSigningConfigArn", (properties.CodeSigningConfigArn != null ? cfn_parse.FromCloudFormation.getString(properties.CodeSigningConfigArn) : undefined));
  ret.addPropertyResult("deadLetterConfig", "DeadLetterConfig", (properties.DeadLetterConfig != null ? CfnFunctionDeadLetterConfigPropertyFromCloudFormation(properties.DeadLetterConfig) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("environment", "Environment", (properties.Environment != null ? CfnFunctionEnvironmentPropertyFromCloudFormation(properties.Environment) : undefined));
  ret.addPropertyResult("ephemeralStorage", "EphemeralStorage", (properties.EphemeralStorage != null ? CfnFunctionEphemeralStoragePropertyFromCloudFormation(properties.EphemeralStorage) : undefined));
  ret.addPropertyResult("fileSystemConfigs", "FileSystemConfigs", (properties.FileSystemConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionFileSystemConfigPropertyFromCloudFormation)(properties.FileSystemConfigs) : undefined));
  ret.addPropertyResult("functionName", "FunctionName", (properties.FunctionName != null ? cfn_parse.FromCloudFormation.getString(properties.FunctionName) : undefined));
  ret.addPropertyResult("handler", "Handler", (properties.Handler != null ? cfn_parse.FromCloudFormation.getString(properties.Handler) : undefined));
  ret.addPropertyResult("imageConfig", "ImageConfig", (properties.ImageConfig != null ? CfnFunctionImageConfigPropertyFromCloudFormation(properties.ImageConfig) : undefined));
  ret.addPropertyResult("kmsKeyArn", "KmsKeyArn", (properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined));
  ret.addPropertyResult("layers", "Layers", (properties.Layers != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Layers) : undefined));
  ret.addPropertyResult("memorySize", "MemorySize", (properties.MemorySize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemorySize) : undefined));
  ret.addPropertyResult("packageType", "PackageType", (properties.PackageType != null ? cfn_parse.FromCloudFormation.getString(properties.PackageType) : undefined));
  ret.addPropertyResult("reservedConcurrentExecutions", "ReservedConcurrentExecutions", (properties.ReservedConcurrentExecutions != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReservedConcurrentExecutions) : undefined));
  ret.addPropertyResult("role", "Role", (properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined));
  ret.addPropertyResult("runtime", "Runtime", (properties.Runtime != null ? cfn_parse.FromCloudFormation.getString(properties.Runtime) : undefined));
  ret.addPropertyResult("runtimeManagementConfig", "RuntimeManagementConfig", (properties.RuntimeManagementConfig != null ? CfnFunctionRuntimeManagementConfigPropertyFromCloudFormation(properties.RuntimeManagementConfig) : undefined));
  ret.addPropertyResult("snapStart", "SnapStart", (properties.SnapStart != null ? CfnFunctionSnapStartPropertyFromCloudFormation(properties.SnapStart) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("timeout", "Timeout", (properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined));
  ret.addPropertyResult("tracingConfig", "TracingConfig", (properties.TracingConfig != null ? CfnFunctionTracingConfigPropertyFromCloudFormation(properties.TracingConfig) : undefined));
  ret.addPropertyResult("vpcConfig", "VpcConfig", (properties.VpcConfig != null ? CfnFunctionVpcConfigPropertyFromCloudFormation(properties.VpcConfig) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`SnapStartProperty\`
 *
 * @param properties - the TypeScript properties of a \`SnapStartProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnFunctionSnapStartPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("architectures", cdk.listValidator(cdk.validateString))(properties.architectures));
  errors.collect(cdk.propertyValidator("code", cdk.requiredValidator)(properties.code));
  errors.collect(cdk.propertyValidator("code", CfnFunctionCodePropertyValidator)(properties.code));
  errors.collect(cdk.propertyValidator("codeSigningConfigArn", cdk.validateString)(properties.codeSigningConfigArn));
  errors.collect(cdk.propertyValidator("deadLetterConfig", CfnFunctionDeadLetterConfigPropertyValidator)(properties.deadLetterConfig));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("environment", CfnFunctionEnvironmentPropertyValidator)(properties.environment));
  errors.collect(cdk.propertyValidator("ephemeralStorage", CfnFunctionEphemeralStoragePropertyValidator)(properties.ephemeralStorage));
  errors.collect(cdk.propertyValidator("fileSystemConfigs", cdk.listValidator(CfnFunctionFileSystemConfigPropertyValidator))(properties.fileSystemConfigs));
  errors.collect(cdk.propertyValidator("functionName", cdk.validateString)(properties.functionName));
  errors.collect(cdk.propertyValidator("handler", cdk.validateString)(properties.handler));
  errors.collect(cdk.propertyValidator("imageConfig", CfnFunctionImageConfigPropertyValidator)(properties.imageConfig));
  errors.collect(cdk.propertyValidator("kmsKeyArn", cdk.validateString)(properties.kmsKeyArn));
  errors.collect(cdk.propertyValidator("layers", cdk.listValidator(cdk.validateString))(properties.layers));
  errors.collect(cdk.propertyValidator("memorySize", cdk.validateNumber)(properties.memorySize));
  errors.collect(cdk.propertyValidator("packageType", cdk.validateString)(properties.packageType));
  errors.collect(cdk.propertyValidator("reservedConcurrentExecutions", cdk.validateNumber)(properties.reservedConcurrentExecutions));
  errors.collect(cdk.propertyValidator("role", cdk.requiredValidator)(properties.role));
  errors.collect(cdk.propertyValidator("role", cdk.validateString)(properties.role));
  errors.collect(cdk.propertyValidator("runtime", cdk.validateString)(properties.runtime));
  errors.collect(cdk.propertyValidator("runtimeManagementConfig", CfnFunctionRuntimeManagementConfigPropertyValidator)(properties.runtimeManagementConfig));
  errors.collect(cdk.propertyValidator("snapStart", CfnFunctionSnapStartPropertyValidator)(properties.snapStart));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnFunctionTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("timeout", cdk.validateNumber)(properties.timeout));
  errors.collect(cdk.propertyValidator("tracingConfig", CfnFunctionTracingConfigPropertyValidator)(properties.tracingConfig));
  errors.collect(cdk.propertyValidator("vpcConfig", CfnFunctionVpcConfigPropertyValidator)(properties.vpcConfig));
  return errors.wrap("supplied properties not correct for \\"SnapStartProperty\\"");
}

// @ts-ignore TS6133
function convertCfnFunctionSnapStartPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnFunctionSnapStartPropertyValidator(properties).assertSuccess();
  return {
    "Architectures": cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),
    "Code": convertCfnFunctionCodePropertyToCloudFormation(properties.code),
    "CodeSigningConfigArn": cdk.stringToCloudFormation(properties.codeSigningConfigArn),
    "DeadLetterConfig": convertCfnFunctionDeadLetterConfigPropertyToCloudFormation(properties.deadLetterConfig),
    "Description": cdk.stringToCloudFormation(properties.description),
    "Environment": convertCfnFunctionEnvironmentPropertyToCloudFormation(properties.environment),
    "EphemeralStorage": convertCfnFunctionEphemeralStoragePropertyToCloudFormation(properties.ephemeralStorage),
    "FileSystemConfigs": cdk.listMapper(convertCfnFunctionFileSystemConfigPropertyToCloudFormation)(properties.fileSystemConfigs),
    "FunctionName": cdk.stringToCloudFormation(properties.functionName),
    "Handler": cdk.stringToCloudFormation(properties.handler),
    "ImageConfig": convertCfnFunctionImageConfigPropertyToCloudFormation(properties.imageConfig),
    "KmsKeyArn": cdk.stringToCloudFormation(properties.kmsKeyArn),
    "Layers": cdk.listMapper(cdk.stringToCloudFormation)(properties.layers),
    "MemorySize": cdk.numberToCloudFormation(properties.memorySize),
    "PackageType": cdk.stringToCloudFormation(properties.packageType),
    "ReservedConcurrentExecutions": cdk.numberToCloudFormation(properties.reservedConcurrentExecutions),
    "Role": cdk.stringToCloudFormation(properties.role),
    "Runtime": cdk.stringToCloudFormation(properties.runtime),
    "RuntimeManagementConfig": convertCfnFunctionRuntimeManagementConfigPropertyToCloudFormation(properties.runtimeManagementConfig),
    "SnapStart": convertCfnFunctionSnapStartPropertyToCloudFormation(properties.snapStart),
    "Tags": cdk.listMapper(convertCfnFunctionTagPropertyToCloudFormation)(properties.tags),
    "Timeout": cdk.numberToCloudFormation(properties.timeout),
    "TracingConfig": convertCfnFunctionTracingConfigPropertyToCloudFormation(properties.tracingConfig),
    "VpcConfig": convertCfnFunctionVpcConfigPropertyToCloudFormation(properties.vpcConfig)
  };
}

// @ts-ignore TS6133
function CfnFunctionSnapStartPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnFunction.SnapStartProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.SnapStartProperty>();
  ret.addPropertyResult("architectures", "Architectures", (properties.Architectures != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Architectures) : undefined));
  ret.addPropertyResult("code", "Code", (properties.Code != null ? CfnFunctionCodePropertyFromCloudFormation(properties.Code) : undefined));
  ret.addPropertyResult("codeSigningConfigArn", "CodeSigningConfigArn", (properties.CodeSigningConfigArn != null ? cfn_parse.FromCloudFormation.getString(properties.CodeSigningConfigArn) : undefined));
  ret.addPropertyResult("deadLetterConfig", "DeadLetterConfig", (properties.DeadLetterConfig != null ? CfnFunctionDeadLetterConfigPropertyFromCloudFormation(properties.DeadLetterConfig) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("environment", "Environment", (properties.Environment != null ? CfnFunctionEnvironmentPropertyFromCloudFormation(properties.Environment) : undefined));
  ret.addPropertyResult("ephemeralStorage", "EphemeralStorage", (properties.EphemeralStorage != null ? CfnFunctionEphemeralStoragePropertyFromCloudFormation(properties.EphemeralStorage) : undefined));
  ret.addPropertyResult("fileSystemConfigs", "FileSystemConfigs", (properties.FileSystemConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionFileSystemConfigPropertyFromCloudFormation)(properties.FileSystemConfigs) : undefined));
  ret.addPropertyResult("functionName", "FunctionName", (properties.FunctionName != null ? cfn_parse.FromCloudFormation.getString(properties.FunctionName) : undefined));
  ret.addPropertyResult("handler", "Handler", (properties.Handler != null ? cfn_parse.FromCloudFormation.getString(properties.Handler) : undefined));
  ret.addPropertyResult("imageConfig", "ImageConfig", (properties.ImageConfig != null ? CfnFunctionImageConfigPropertyFromCloudFormation(properties.ImageConfig) : undefined));
  ret.addPropertyResult("kmsKeyArn", "KmsKeyArn", (properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined));
  ret.addPropertyResult("layers", "Layers", (properties.Layers != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Layers) : undefined));
  ret.addPropertyResult("memorySize", "MemorySize", (properties.MemorySize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemorySize) : undefined));
  ret.addPropertyResult("packageType", "PackageType", (properties.PackageType != null ? cfn_parse.FromCloudFormation.getString(properties.PackageType) : undefined));
  ret.addPropertyResult("reservedConcurrentExecutions", "ReservedConcurrentExecutions", (properties.ReservedConcurrentExecutions != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReservedConcurrentExecutions) : undefined));
  ret.addPropertyResult("role", "Role", (properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined));
  ret.addPropertyResult("runtime", "Runtime", (properties.Runtime != null ? cfn_parse.FromCloudFormation.getString(properties.Runtime) : undefined));
  ret.addPropertyResult("runtimeManagementConfig", "RuntimeManagementConfig", (properties.RuntimeManagementConfig != null ? CfnFunctionRuntimeManagementConfigPropertyFromCloudFormation(properties.RuntimeManagementConfig) : undefined));
  ret.addPropertyResult("snapStart", "SnapStart", (properties.SnapStart != null ? CfnFunctionSnapStartPropertyFromCloudFormation(properties.SnapStart) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("timeout", "Timeout", (properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined));
  ret.addPropertyResult("tracingConfig", "TracingConfig", (properties.TracingConfig != null ? CfnFunctionTracingConfigPropertyFromCloudFormation(properties.TracingConfig) : undefined));
  ret.addPropertyResult("vpcConfig", "VpcConfig", (properties.VpcConfig != null ? CfnFunctionVpcConfigPropertyFromCloudFormation(properties.VpcConfig) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`RuntimeManagementConfigProperty\`
 *
 * @param properties - the TypeScript properties of a \`RuntimeManagementConfigProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnFunctionRuntimeManagementConfigPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("architectures", cdk.listValidator(cdk.validateString))(properties.architectures));
  errors.collect(cdk.propertyValidator("code", cdk.requiredValidator)(properties.code));
  errors.collect(cdk.propertyValidator("code", CfnFunctionCodePropertyValidator)(properties.code));
  errors.collect(cdk.propertyValidator("codeSigningConfigArn", cdk.validateString)(properties.codeSigningConfigArn));
  errors.collect(cdk.propertyValidator("deadLetterConfig", CfnFunctionDeadLetterConfigPropertyValidator)(properties.deadLetterConfig));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("environment", CfnFunctionEnvironmentPropertyValidator)(properties.environment));
  errors.collect(cdk.propertyValidator("ephemeralStorage", CfnFunctionEphemeralStoragePropertyValidator)(properties.ephemeralStorage));
  errors.collect(cdk.propertyValidator("fileSystemConfigs", cdk.listValidator(CfnFunctionFileSystemConfigPropertyValidator))(properties.fileSystemConfigs));
  errors.collect(cdk.propertyValidator("functionName", cdk.validateString)(properties.functionName));
  errors.collect(cdk.propertyValidator("handler", cdk.validateString)(properties.handler));
  errors.collect(cdk.propertyValidator("imageConfig", CfnFunctionImageConfigPropertyValidator)(properties.imageConfig));
  errors.collect(cdk.propertyValidator("kmsKeyArn", cdk.validateString)(properties.kmsKeyArn));
  errors.collect(cdk.propertyValidator("layers", cdk.listValidator(cdk.validateString))(properties.layers));
  errors.collect(cdk.propertyValidator("memorySize", cdk.validateNumber)(properties.memorySize));
  errors.collect(cdk.propertyValidator("packageType", cdk.validateString)(properties.packageType));
  errors.collect(cdk.propertyValidator("reservedConcurrentExecutions", cdk.validateNumber)(properties.reservedConcurrentExecutions));
  errors.collect(cdk.propertyValidator("role", cdk.requiredValidator)(properties.role));
  errors.collect(cdk.propertyValidator("role", cdk.validateString)(properties.role));
  errors.collect(cdk.propertyValidator("runtime", cdk.validateString)(properties.runtime));
  errors.collect(cdk.propertyValidator("runtimeManagementConfig", CfnFunctionRuntimeManagementConfigPropertyValidator)(properties.runtimeManagementConfig));
  errors.collect(cdk.propertyValidator("snapStart", CfnFunctionSnapStartPropertyValidator)(properties.snapStart));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnFunctionTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("timeout", cdk.validateNumber)(properties.timeout));
  errors.collect(cdk.propertyValidator("tracingConfig", CfnFunctionTracingConfigPropertyValidator)(properties.tracingConfig));
  errors.collect(cdk.propertyValidator("vpcConfig", CfnFunctionVpcConfigPropertyValidator)(properties.vpcConfig));
  return errors.wrap("supplied properties not correct for \\"RuntimeManagementConfigProperty\\"");
}

// @ts-ignore TS6133
function convertCfnFunctionRuntimeManagementConfigPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnFunctionRuntimeManagementConfigPropertyValidator(properties).assertSuccess();
  return {
    "Architectures": cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),
    "Code": convertCfnFunctionCodePropertyToCloudFormation(properties.code),
    "CodeSigningConfigArn": cdk.stringToCloudFormation(properties.codeSigningConfigArn),
    "DeadLetterConfig": convertCfnFunctionDeadLetterConfigPropertyToCloudFormation(properties.deadLetterConfig),
    "Description": cdk.stringToCloudFormation(properties.description),
    "Environment": convertCfnFunctionEnvironmentPropertyToCloudFormation(properties.environment),
    "EphemeralStorage": convertCfnFunctionEphemeralStoragePropertyToCloudFormation(properties.ephemeralStorage),
    "FileSystemConfigs": cdk.listMapper(convertCfnFunctionFileSystemConfigPropertyToCloudFormation)(properties.fileSystemConfigs),
    "FunctionName": cdk.stringToCloudFormation(properties.functionName),
    "Handler": cdk.stringToCloudFormation(properties.handler),
    "ImageConfig": convertCfnFunctionImageConfigPropertyToCloudFormation(properties.imageConfig),
    "KmsKeyArn": cdk.stringToCloudFormation(properties.kmsKeyArn),
    "Layers": cdk.listMapper(cdk.stringToCloudFormation)(properties.layers),
    "MemorySize": cdk.numberToCloudFormation(properties.memorySize),
    "PackageType": cdk.stringToCloudFormation(properties.packageType),
    "ReservedConcurrentExecutions": cdk.numberToCloudFormation(properties.reservedConcurrentExecutions),
    "Role": cdk.stringToCloudFormation(properties.role),
    "Runtime": cdk.stringToCloudFormation(properties.runtime),
    "RuntimeManagementConfig": convertCfnFunctionRuntimeManagementConfigPropertyToCloudFormation(properties.runtimeManagementConfig),
    "SnapStart": convertCfnFunctionSnapStartPropertyToCloudFormation(properties.snapStart),
    "Tags": cdk.listMapper(convertCfnFunctionTagPropertyToCloudFormation)(properties.tags),
    "Timeout": cdk.numberToCloudFormation(properties.timeout),
    "TracingConfig": convertCfnFunctionTracingConfigPropertyToCloudFormation(properties.tracingConfig),
    "VpcConfig": convertCfnFunctionVpcConfigPropertyToCloudFormation(properties.vpcConfig)
  };
}

// @ts-ignore TS6133
function CfnFunctionRuntimeManagementConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnFunction.RuntimeManagementConfigProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.RuntimeManagementConfigProperty>();
  ret.addPropertyResult("architectures", "Architectures", (properties.Architectures != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Architectures) : undefined));
  ret.addPropertyResult("code", "Code", (properties.Code != null ? CfnFunctionCodePropertyFromCloudFormation(properties.Code) : undefined));
  ret.addPropertyResult("codeSigningConfigArn", "CodeSigningConfigArn", (properties.CodeSigningConfigArn != null ? cfn_parse.FromCloudFormation.getString(properties.CodeSigningConfigArn) : undefined));
  ret.addPropertyResult("deadLetterConfig", "DeadLetterConfig", (properties.DeadLetterConfig != null ? CfnFunctionDeadLetterConfigPropertyFromCloudFormation(properties.DeadLetterConfig) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("environment", "Environment", (properties.Environment != null ? CfnFunctionEnvironmentPropertyFromCloudFormation(properties.Environment) : undefined));
  ret.addPropertyResult("ephemeralStorage", "EphemeralStorage", (properties.EphemeralStorage != null ? CfnFunctionEphemeralStoragePropertyFromCloudFormation(properties.EphemeralStorage) : undefined));
  ret.addPropertyResult("fileSystemConfigs", "FileSystemConfigs", (properties.FileSystemConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionFileSystemConfigPropertyFromCloudFormation)(properties.FileSystemConfigs) : undefined));
  ret.addPropertyResult("functionName", "FunctionName", (properties.FunctionName != null ? cfn_parse.FromCloudFormation.getString(properties.FunctionName) : undefined));
  ret.addPropertyResult("handler", "Handler", (properties.Handler != null ? cfn_parse.FromCloudFormation.getString(properties.Handler) : undefined));
  ret.addPropertyResult("imageConfig", "ImageConfig", (properties.ImageConfig != null ? CfnFunctionImageConfigPropertyFromCloudFormation(properties.ImageConfig) : undefined));
  ret.addPropertyResult("kmsKeyArn", "KmsKeyArn", (properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined));
  ret.addPropertyResult("layers", "Layers", (properties.Layers != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Layers) : undefined));
  ret.addPropertyResult("memorySize", "MemorySize", (properties.MemorySize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemorySize) : undefined));
  ret.addPropertyResult("packageType", "PackageType", (properties.PackageType != null ? cfn_parse.FromCloudFormation.getString(properties.PackageType) : undefined));
  ret.addPropertyResult("reservedConcurrentExecutions", "ReservedConcurrentExecutions", (properties.ReservedConcurrentExecutions != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReservedConcurrentExecutions) : undefined));
  ret.addPropertyResult("role", "Role", (properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined));
  ret.addPropertyResult("runtime", "Runtime", (properties.Runtime != null ? cfn_parse.FromCloudFormation.getString(properties.Runtime) : undefined));
  ret.addPropertyResult("runtimeManagementConfig", "RuntimeManagementConfig", (properties.RuntimeManagementConfig != null ? CfnFunctionRuntimeManagementConfigPropertyFromCloudFormation(properties.RuntimeManagementConfig) : undefined));
  ret.addPropertyResult("snapStart", "SnapStart", (properties.SnapStart != null ? CfnFunctionSnapStartPropertyFromCloudFormation(properties.SnapStart) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("timeout", "Timeout", (properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined));
  ret.addPropertyResult("tracingConfig", "TracingConfig", (properties.TracingConfig != null ? CfnFunctionTracingConfigPropertyFromCloudFormation(properties.TracingConfig) : undefined));
  ret.addPropertyResult("vpcConfig", "VpcConfig", (properties.VpcConfig != null ? CfnFunctionVpcConfigPropertyFromCloudFormation(properties.VpcConfig) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`VpcConfigProperty\`
 *
 * @param properties - the TypeScript properties of a \`VpcConfigProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnFunctionVpcConfigPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("architectures", cdk.listValidator(cdk.validateString))(properties.architectures));
  errors.collect(cdk.propertyValidator("code", cdk.requiredValidator)(properties.code));
  errors.collect(cdk.propertyValidator("code", CfnFunctionCodePropertyValidator)(properties.code));
  errors.collect(cdk.propertyValidator("codeSigningConfigArn", cdk.validateString)(properties.codeSigningConfigArn));
  errors.collect(cdk.propertyValidator("deadLetterConfig", CfnFunctionDeadLetterConfigPropertyValidator)(properties.deadLetterConfig));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("environment", CfnFunctionEnvironmentPropertyValidator)(properties.environment));
  errors.collect(cdk.propertyValidator("ephemeralStorage", CfnFunctionEphemeralStoragePropertyValidator)(properties.ephemeralStorage));
  errors.collect(cdk.propertyValidator("fileSystemConfigs", cdk.listValidator(CfnFunctionFileSystemConfigPropertyValidator))(properties.fileSystemConfigs));
  errors.collect(cdk.propertyValidator("functionName", cdk.validateString)(properties.functionName));
  errors.collect(cdk.propertyValidator("handler", cdk.validateString)(properties.handler));
  errors.collect(cdk.propertyValidator("imageConfig", CfnFunctionImageConfigPropertyValidator)(properties.imageConfig));
  errors.collect(cdk.propertyValidator("kmsKeyArn", cdk.validateString)(properties.kmsKeyArn));
  errors.collect(cdk.propertyValidator("layers", cdk.listValidator(cdk.validateString))(properties.layers));
  errors.collect(cdk.propertyValidator("memorySize", cdk.validateNumber)(properties.memorySize));
  errors.collect(cdk.propertyValidator("packageType", cdk.validateString)(properties.packageType));
  errors.collect(cdk.propertyValidator("reservedConcurrentExecutions", cdk.validateNumber)(properties.reservedConcurrentExecutions));
  errors.collect(cdk.propertyValidator("role", cdk.requiredValidator)(properties.role));
  errors.collect(cdk.propertyValidator("role", cdk.validateString)(properties.role));
  errors.collect(cdk.propertyValidator("runtime", cdk.validateString)(properties.runtime));
  errors.collect(cdk.propertyValidator("runtimeManagementConfig", CfnFunctionRuntimeManagementConfigPropertyValidator)(properties.runtimeManagementConfig));
  errors.collect(cdk.propertyValidator("snapStart", CfnFunctionSnapStartPropertyValidator)(properties.snapStart));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnFunctionTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("timeout", cdk.validateNumber)(properties.timeout));
  errors.collect(cdk.propertyValidator("tracingConfig", CfnFunctionTracingConfigPropertyValidator)(properties.tracingConfig));
  errors.collect(cdk.propertyValidator("vpcConfig", CfnFunctionVpcConfigPropertyValidator)(properties.vpcConfig));
  return errors.wrap("supplied properties not correct for \\"VpcConfigProperty\\"");
}

// @ts-ignore TS6133
function convertCfnFunctionVpcConfigPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnFunctionVpcConfigPropertyValidator(properties).assertSuccess();
  return {
    "Architectures": cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),
    "Code": convertCfnFunctionCodePropertyToCloudFormation(properties.code),
    "CodeSigningConfigArn": cdk.stringToCloudFormation(properties.codeSigningConfigArn),
    "DeadLetterConfig": convertCfnFunctionDeadLetterConfigPropertyToCloudFormation(properties.deadLetterConfig),
    "Description": cdk.stringToCloudFormation(properties.description),
    "Environment": convertCfnFunctionEnvironmentPropertyToCloudFormation(properties.environment),
    "EphemeralStorage": convertCfnFunctionEphemeralStoragePropertyToCloudFormation(properties.ephemeralStorage),
    "FileSystemConfigs": cdk.listMapper(convertCfnFunctionFileSystemConfigPropertyToCloudFormation)(properties.fileSystemConfigs),
    "FunctionName": cdk.stringToCloudFormation(properties.functionName),
    "Handler": cdk.stringToCloudFormation(properties.handler),
    "ImageConfig": convertCfnFunctionImageConfigPropertyToCloudFormation(properties.imageConfig),
    "KmsKeyArn": cdk.stringToCloudFormation(properties.kmsKeyArn),
    "Layers": cdk.listMapper(cdk.stringToCloudFormation)(properties.layers),
    "MemorySize": cdk.numberToCloudFormation(properties.memorySize),
    "PackageType": cdk.stringToCloudFormation(properties.packageType),
    "ReservedConcurrentExecutions": cdk.numberToCloudFormation(properties.reservedConcurrentExecutions),
    "Role": cdk.stringToCloudFormation(properties.role),
    "Runtime": cdk.stringToCloudFormation(properties.runtime),
    "RuntimeManagementConfig": convertCfnFunctionRuntimeManagementConfigPropertyToCloudFormation(properties.runtimeManagementConfig),
    "SnapStart": convertCfnFunctionSnapStartPropertyToCloudFormation(properties.snapStart),
    "Tags": cdk.listMapper(convertCfnFunctionTagPropertyToCloudFormation)(properties.tags),
    "Timeout": cdk.numberToCloudFormation(properties.timeout),
    "TracingConfig": convertCfnFunctionTracingConfigPropertyToCloudFormation(properties.tracingConfig),
    "VpcConfig": convertCfnFunctionVpcConfigPropertyToCloudFormation(properties.vpcConfig)
  };
}

// @ts-ignore TS6133
function CfnFunctionVpcConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnFunction.VpcConfigProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.VpcConfigProperty>();
  ret.addPropertyResult("architectures", "Architectures", (properties.Architectures != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Architectures) : undefined));
  ret.addPropertyResult("code", "Code", (properties.Code != null ? CfnFunctionCodePropertyFromCloudFormation(properties.Code) : undefined));
  ret.addPropertyResult("codeSigningConfigArn", "CodeSigningConfigArn", (properties.CodeSigningConfigArn != null ? cfn_parse.FromCloudFormation.getString(properties.CodeSigningConfigArn) : undefined));
  ret.addPropertyResult("deadLetterConfig", "DeadLetterConfig", (properties.DeadLetterConfig != null ? CfnFunctionDeadLetterConfigPropertyFromCloudFormation(properties.DeadLetterConfig) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("environment", "Environment", (properties.Environment != null ? CfnFunctionEnvironmentPropertyFromCloudFormation(properties.Environment) : undefined));
  ret.addPropertyResult("ephemeralStorage", "EphemeralStorage", (properties.EphemeralStorage != null ? CfnFunctionEphemeralStoragePropertyFromCloudFormation(properties.EphemeralStorage) : undefined));
  ret.addPropertyResult("fileSystemConfigs", "FileSystemConfigs", (properties.FileSystemConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionFileSystemConfigPropertyFromCloudFormation)(properties.FileSystemConfigs) : undefined));
  ret.addPropertyResult("functionName", "FunctionName", (properties.FunctionName != null ? cfn_parse.FromCloudFormation.getString(properties.FunctionName) : undefined));
  ret.addPropertyResult("handler", "Handler", (properties.Handler != null ? cfn_parse.FromCloudFormation.getString(properties.Handler) : undefined));
  ret.addPropertyResult("imageConfig", "ImageConfig", (properties.ImageConfig != null ? CfnFunctionImageConfigPropertyFromCloudFormation(properties.ImageConfig) : undefined));
  ret.addPropertyResult("kmsKeyArn", "KmsKeyArn", (properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined));
  ret.addPropertyResult("layers", "Layers", (properties.Layers != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Layers) : undefined));
  ret.addPropertyResult("memorySize", "MemorySize", (properties.MemorySize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemorySize) : undefined));
  ret.addPropertyResult("packageType", "PackageType", (properties.PackageType != null ? cfn_parse.FromCloudFormation.getString(properties.PackageType) : undefined));
  ret.addPropertyResult("reservedConcurrentExecutions", "ReservedConcurrentExecutions", (properties.ReservedConcurrentExecutions != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReservedConcurrentExecutions) : undefined));
  ret.addPropertyResult("role", "Role", (properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined));
  ret.addPropertyResult("runtime", "Runtime", (properties.Runtime != null ? cfn_parse.FromCloudFormation.getString(properties.Runtime) : undefined));
  ret.addPropertyResult("runtimeManagementConfig", "RuntimeManagementConfig", (properties.RuntimeManagementConfig != null ? CfnFunctionRuntimeManagementConfigPropertyFromCloudFormation(properties.RuntimeManagementConfig) : undefined));
  ret.addPropertyResult("snapStart", "SnapStart", (properties.SnapStart != null ? CfnFunctionSnapStartPropertyFromCloudFormation(properties.SnapStart) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("timeout", "Timeout", (properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined));
  ret.addPropertyResult("tracingConfig", "TracingConfig", (properties.TracingConfig != null ? CfnFunctionTracingConfigPropertyFromCloudFormation(properties.TracingConfig) : undefined));
  ret.addPropertyResult("vpcConfig", "VpcConfig", (properties.VpcConfig != null ? CfnFunctionVpcConfigPropertyFromCloudFormation(properties.VpcConfig) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`TracingConfigProperty\`
 *
 * @param properties - the TypeScript properties of a \`TracingConfigProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnFunctionTracingConfigPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("architectures", cdk.listValidator(cdk.validateString))(properties.architectures));
  errors.collect(cdk.propertyValidator("code", cdk.requiredValidator)(properties.code));
  errors.collect(cdk.propertyValidator("code", CfnFunctionCodePropertyValidator)(properties.code));
  errors.collect(cdk.propertyValidator("codeSigningConfigArn", cdk.validateString)(properties.codeSigningConfigArn));
  errors.collect(cdk.propertyValidator("deadLetterConfig", CfnFunctionDeadLetterConfigPropertyValidator)(properties.deadLetterConfig));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("environment", CfnFunctionEnvironmentPropertyValidator)(properties.environment));
  errors.collect(cdk.propertyValidator("ephemeralStorage", CfnFunctionEphemeralStoragePropertyValidator)(properties.ephemeralStorage));
  errors.collect(cdk.propertyValidator("fileSystemConfigs", cdk.listValidator(CfnFunctionFileSystemConfigPropertyValidator))(properties.fileSystemConfigs));
  errors.collect(cdk.propertyValidator("functionName", cdk.validateString)(properties.functionName));
  errors.collect(cdk.propertyValidator("handler", cdk.validateString)(properties.handler));
  errors.collect(cdk.propertyValidator("imageConfig", CfnFunctionImageConfigPropertyValidator)(properties.imageConfig));
  errors.collect(cdk.propertyValidator("kmsKeyArn", cdk.validateString)(properties.kmsKeyArn));
  errors.collect(cdk.propertyValidator("layers", cdk.listValidator(cdk.validateString))(properties.layers));
  errors.collect(cdk.propertyValidator("memorySize", cdk.validateNumber)(properties.memorySize));
  errors.collect(cdk.propertyValidator("packageType", cdk.validateString)(properties.packageType));
  errors.collect(cdk.propertyValidator("reservedConcurrentExecutions", cdk.validateNumber)(properties.reservedConcurrentExecutions));
  errors.collect(cdk.propertyValidator("role", cdk.requiredValidator)(properties.role));
  errors.collect(cdk.propertyValidator("role", cdk.validateString)(properties.role));
  errors.collect(cdk.propertyValidator("runtime", cdk.validateString)(properties.runtime));
  errors.collect(cdk.propertyValidator("runtimeManagementConfig", CfnFunctionRuntimeManagementConfigPropertyValidator)(properties.runtimeManagementConfig));
  errors.collect(cdk.propertyValidator("snapStart", CfnFunctionSnapStartPropertyValidator)(properties.snapStart));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnFunctionTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("timeout", cdk.validateNumber)(properties.timeout));
  errors.collect(cdk.propertyValidator("tracingConfig", CfnFunctionTracingConfigPropertyValidator)(properties.tracingConfig));
  errors.collect(cdk.propertyValidator("vpcConfig", CfnFunctionVpcConfigPropertyValidator)(properties.vpcConfig));
  return errors.wrap("supplied properties not correct for \\"TracingConfigProperty\\"");
}

// @ts-ignore TS6133
function convertCfnFunctionTracingConfigPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnFunctionTracingConfigPropertyValidator(properties).assertSuccess();
  return {
    "Architectures": cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),
    "Code": convertCfnFunctionCodePropertyToCloudFormation(properties.code),
    "CodeSigningConfigArn": cdk.stringToCloudFormation(properties.codeSigningConfigArn),
    "DeadLetterConfig": convertCfnFunctionDeadLetterConfigPropertyToCloudFormation(properties.deadLetterConfig),
    "Description": cdk.stringToCloudFormation(properties.description),
    "Environment": convertCfnFunctionEnvironmentPropertyToCloudFormation(properties.environment),
    "EphemeralStorage": convertCfnFunctionEphemeralStoragePropertyToCloudFormation(properties.ephemeralStorage),
    "FileSystemConfigs": cdk.listMapper(convertCfnFunctionFileSystemConfigPropertyToCloudFormation)(properties.fileSystemConfigs),
    "FunctionName": cdk.stringToCloudFormation(properties.functionName),
    "Handler": cdk.stringToCloudFormation(properties.handler),
    "ImageConfig": convertCfnFunctionImageConfigPropertyToCloudFormation(properties.imageConfig),
    "KmsKeyArn": cdk.stringToCloudFormation(properties.kmsKeyArn),
    "Layers": cdk.listMapper(cdk.stringToCloudFormation)(properties.layers),
    "MemorySize": cdk.numberToCloudFormation(properties.memorySize),
    "PackageType": cdk.stringToCloudFormation(properties.packageType),
    "ReservedConcurrentExecutions": cdk.numberToCloudFormation(properties.reservedConcurrentExecutions),
    "Role": cdk.stringToCloudFormation(properties.role),
    "Runtime": cdk.stringToCloudFormation(properties.runtime),
    "RuntimeManagementConfig": convertCfnFunctionRuntimeManagementConfigPropertyToCloudFormation(properties.runtimeManagementConfig),
    "SnapStart": convertCfnFunctionSnapStartPropertyToCloudFormation(properties.snapStart),
    "Tags": cdk.listMapper(convertCfnFunctionTagPropertyToCloudFormation)(properties.tags),
    "Timeout": cdk.numberToCloudFormation(properties.timeout),
    "TracingConfig": convertCfnFunctionTracingConfigPropertyToCloudFormation(properties.tracingConfig),
    "VpcConfig": convertCfnFunctionVpcConfigPropertyToCloudFormation(properties.vpcConfig)
  };
}

// @ts-ignore TS6133
function CfnFunctionTracingConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnFunction.TracingConfigProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.TracingConfigProperty>();
  ret.addPropertyResult("architectures", "Architectures", (properties.Architectures != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Architectures) : undefined));
  ret.addPropertyResult("code", "Code", (properties.Code != null ? CfnFunctionCodePropertyFromCloudFormation(properties.Code) : undefined));
  ret.addPropertyResult("codeSigningConfigArn", "CodeSigningConfigArn", (properties.CodeSigningConfigArn != null ? cfn_parse.FromCloudFormation.getString(properties.CodeSigningConfigArn) : undefined));
  ret.addPropertyResult("deadLetterConfig", "DeadLetterConfig", (properties.DeadLetterConfig != null ? CfnFunctionDeadLetterConfigPropertyFromCloudFormation(properties.DeadLetterConfig) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("environment", "Environment", (properties.Environment != null ? CfnFunctionEnvironmentPropertyFromCloudFormation(properties.Environment) : undefined));
  ret.addPropertyResult("ephemeralStorage", "EphemeralStorage", (properties.EphemeralStorage != null ? CfnFunctionEphemeralStoragePropertyFromCloudFormation(properties.EphemeralStorage) : undefined));
  ret.addPropertyResult("fileSystemConfigs", "FileSystemConfigs", (properties.FileSystemConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionFileSystemConfigPropertyFromCloudFormation)(properties.FileSystemConfigs) : undefined));
  ret.addPropertyResult("functionName", "FunctionName", (properties.FunctionName != null ? cfn_parse.FromCloudFormation.getString(properties.FunctionName) : undefined));
  ret.addPropertyResult("handler", "Handler", (properties.Handler != null ? cfn_parse.FromCloudFormation.getString(properties.Handler) : undefined));
  ret.addPropertyResult("imageConfig", "ImageConfig", (properties.ImageConfig != null ? CfnFunctionImageConfigPropertyFromCloudFormation(properties.ImageConfig) : undefined));
  ret.addPropertyResult("kmsKeyArn", "KmsKeyArn", (properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined));
  ret.addPropertyResult("layers", "Layers", (properties.Layers != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Layers) : undefined));
  ret.addPropertyResult("memorySize", "MemorySize", (properties.MemorySize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemorySize) : undefined));
  ret.addPropertyResult("packageType", "PackageType", (properties.PackageType != null ? cfn_parse.FromCloudFormation.getString(properties.PackageType) : undefined));
  ret.addPropertyResult("reservedConcurrentExecutions", "ReservedConcurrentExecutions", (properties.ReservedConcurrentExecutions != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReservedConcurrentExecutions) : undefined));
  ret.addPropertyResult("role", "Role", (properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined));
  ret.addPropertyResult("runtime", "Runtime", (properties.Runtime != null ? cfn_parse.FromCloudFormation.getString(properties.Runtime) : undefined));
  ret.addPropertyResult("runtimeManagementConfig", "RuntimeManagementConfig", (properties.RuntimeManagementConfig != null ? CfnFunctionRuntimeManagementConfigPropertyFromCloudFormation(properties.RuntimeManagementConfig) : undefined));
  ret.addPropertyResult("snapStart", "SnapStart", (properties.SnapStart != null ? CfnFunctionSnapStartPropertyFromCloudFormation(properties.SnapStart) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("timeout", "Timeout", (properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined));
  ret.addPropertyResult("tracingConfig", "TracingConfig", (properties.TracingConfig != null ? CfnFunctionTracingConfigPropertyFromCloudFormation(properties.TracingConfig) : undefined));
  ret.addPropertyResult("vpcConfig", "VpcConfig", (properties.VpcConfig != null ? CfnFunctionVpcConfigPropertyFromCloudFormation(properties.VpcConfig) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`SnapStartResponseProperty\`
 *
 * @param properties - the TypeScript properties of a \`SnapStartResponseProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnFunctionSnapStartResponsePropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("architectures", cdk.listValidator(cdk.validateString))(properties.architectures));
  errors.collect(cdk.propertyValidator("code", cdk.requiredValidator)(properties.code));
  errors.collect(cdk.propertyValidator("code", CfnFunctionCodePropertyValidator)(properties.code));
  errors.collect(cdk.propertyValidator("codeSigningConfigArn", cdk.validateString)(properties.codeSigningConfigArn));
  errors.collect(cdk.propertyValidator("deadLetterConfig", CfnFunctionDeadLetterConfigPropertyValidator)(properties.deadLetterConfig));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("environment", CfnFunctionEnvironmentPropertyValidator)(properties.environment));
  errors.collect(cdk.propertyValidator("ephemeralStorage", CfnFunctionEphemeralStoragePropertyValidator)(properties.ephemeralStorage));
  errors.collect(cdk.propertyValidator("fileSystemConfigs", cdk.listValidator(CfnFunctionFileSystemConfigPropertyValidator))(properties.fileSystemConfigs));
  errors.collect(cdk.propertyValidator("functionName", cdk.validateString)(properties.functionName));
  errors.collect(cdk.propertyValidator("handler", cdk.validateString)(properties.handler));
  errors.collect(cdk.propertyValidator("imageConfig", CfnFunctionImageConfigPropertyValidator)(properties.imageConfig));
  errors.collect(cdk.propertyValidator("kmsKeyArn", cdk.validateString)(properties.kmsKeyArn));
  errors.collect(cdk.propertyValidator("layers", cdk.listValidator(cdk.validateString))(properties.layers));
  errors.collect(cdk.propertyValidator("memorySize", cdk.validateNumber)(properties.memorySize));
  errors.collect(cdk.propertyValidator("packageType", cdk.validateString)(properties.packageType));
  errors.collect(cdk.propertyValidator("reservedConcurrentExecutions", cdk.validateNumber)(properties.reservedConcurrentExecutions));
  errors.collect(cdk.propertyValidator("role", cdk.requiredValidator)(properties.role));
  errors.collect(cdk.propertyValidator("role", cdk.validateString)(properties.role));
  errors.collect(cdk.propertyValidator("runtime", cdk.validateString)(properties.runtime));
  errors.collect(cdk.propertyValidator("runtimeManagementConfig", CfnFunctionRuntimeManagementConfigPropertyValidator)(properties.runtimeManagementConfig));
  errors.collect(cdk.propertyValidator("snapStart", CfnFunctionSnapStartPropertyValidator)(properties.snapStart));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnFunctionTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("timeout", cdk.validateNumber)(properties.timeout));
  errors.collect(cdk.propertyValidator("tracingConfig", CfnFunctionTracingConfigPropertyValidator)(properties.tracingConfig));
  errors.collect(cdk.propertyValidator("vpcConfig", CfnFunctionVpcConfigPropertyValidator)(properties.vpcConfig));
  return errors.wrap("supplied properties not correct for \\"SnapStartResponseProperty\\"");
}

// @ts-ignore TS6133
function convertCfnFunctionSnapStartResponsePropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnFunctionSnapStartResponsePropertyValidator(properties).assertSuccess();
  return {
    "Architectures": cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),
    "Code": convertCfnFunctionCodePropertyToCloudFormation(properties.code),
    "CodeSigningConfigArn": cdk.stringToCloudFormation(properties.codeSigningConfigArn),
    "DeadLetterConfig": convertCfnFunctionDeadLetterConfigPropertyToCloudFormation(properties.deadLetterConfig),
    "Description": cdk.stringToCloudFormation(properties.description),
    "Environment": convertCfnFunctionEnvironmentPropertyToCloudFormation(properties.environment),
    "EphemeralStorage": convertCfnFunctionEphemeralStoragePropertyToCloudFormation(properties.ephemeralStorage),
    "FileSystemConfigs": cdk.listMapper(convertCfnFunctionFileSystemConfigPropertyToCloudFormation)(properties.fileSystemConfigs),
    "FunctionName": cdk.stringToCloudFormation(properties.functionName),
    "Handler": cdk.stringToCloudFormation(properties.handler),
    "ImageConfig": convertCfnFunctionImageConfigPropertyToCloudFormation(properties.imageConfig),
    "KmsKeyArn": cdk.stringToCloudFormation(properties.kmsKeyArn),
    "Layers": cdk.listMapper(cdk.stringToCloudFormation)(properties.layers),
    "MemorySize": cdk.numberToCloudFormation(properties.memorySize),
    "PackageType": cdk.stringToCloudFormation(properties.packageType),
    "ReservedConcurrentExecutions": cdk.numberToCloudFormation(properties.reservedConcurrentExecutions),
    "Role": cdk.stringToCloudFormation(properties.role),
    "Runtime": cdk.stringToCloudFormation(properties.runtime),
    "RuntimeManagementConfig": convertCfnFunctionRuntimeManagementConfigPropertyToCloudFormation(properties.runtimeManagementConfig),
    "SnapStart": convertCfnFunctionSnapStartPropertyToCloudFormation(properties.snapStart),
    "Tags": cdk.listMapper(convertCfnFunctionTagPropertyToCloudFormation)(properties.tags),
    "Timeout": cdk.numberToCloudFormation(properties.timeout),
    "TracingConfig": convertCfnFunctionTracingConfigPropertyToCloudFormation(properties.tracingConfig),
    "VpcConfig": convertCfnFunctionVpcConfigPropertyToCloudFormation(properties.vpcConfig)
  };
}

// @ts-ignore TS6133
function CfnFunctionSnapStartResponsePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnFunction.SnapStartResponseProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.SnapStartResponseProperty>();
  ret.addPropertyResult("architectures", "Architectures", (properties.Architectures != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Architectures) : undefined));
  ret.addPropertyResult("code", "Code", (properties.Code != null ? CfnFunctionCodePropertyFromCloudFormation(properties.Code) : undefined));
  ret.addPropertyResult("codeSigningConfigArn", "CodeSigningConfigArn", (properties.CodeSigningConfigArn != null ? cfn_parse.FromCloudFormation.getString(properties.CodeSigningConfigArn) : undefined));
  ret.addPropertyResult("deadLetterConfig", "DeadLetterConfig", (properties.DeadLetterConfig != null ? CfnFunctionDeadLetterConfigPropertyFromCloudFormation(properties.DeadLetterConfig) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("environment", "Environment", (properties.Environment != null ? CfnFunctionEnvironmentPropertyFromCloudFormation(properties.Environment) : undefined));
  ret.addPropertyResult("ephemeralStorage", "EphemeralStorage", (properties.EphemeralStorage != null ? CfnFunctionEphemeralStoragePropertyFromCloudFormation(properties.EphemeralStorage) : undefined));
  ret.addPropertyResult("fileSystemConfigs", "FileSystemConfigs", (properties.FileSystemConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionFileSystemConfigPropertyFromCloudFormation)(properties.FileSystemConfigs) : undefined));
  ret.addPropertyResult("functionName", "FunctionName", (properties.FunctionName != null ? cfn_parse.FromCloudFormation.getString(properties.FunctionName) : undefined));
  ret.addPropertyResult("handler", "Handler", (properties.Handler != null ? cfn_parse.FromCloudFormation.getString(properties.Handler) : undefined));
  ret.addPropertyResult("imageConfig", "ImageConfig", (properties.ImageConfig != null ? CfnFunctionImageConfigPropertyFromCloudFormation(properties.ImageConfig) : undefined));
  ret.addPropertyResult("kmsKeyArn", "KmsKeyArn", (properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined));
  ret.addPropertyResult("layers", "Layers", (properties.Layers != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Layers) : undefined));
  ret.addPropertyResult("memorySize", "MemorySize", (properties.MemorySize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemorySize) : undefined));
  ret.addPropertyResult("packageType", "PackageType", (properties.PackageType != null ? cfn_parse.FromCloudFormation.getString(properties.PackageType) : undefined));
  ret.addPropertyResult("reservedConcurrentExecutions", "ReservedConcurrentExecutions", (properties.ReservedConcurrentExecutions != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReservedConcurrentExecutions) : undefined));
  ret.addPropertyResult("role", "Role", (properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined));
  ret.addPropertyResult("runtime", "Runtime", (properties.Runtime != null ? cfn_parse.FromCloudFormation.getString(properties.Runtime) : undefined));
  ret.addPropertyResult("runtimeManagementConfig", "RuntimeManagementConfig", (properties.RuntimeManagementConfig != null ? CfnFunctionRuntimeManagementConfigPropertyFromCloudFormation(properties.RuntimeManagementConfig) : undefined));
  ret.addPropertyResult("snapStart", "SnapStart", (properties.SnapStart != null ? CfnFunctionSnapStartPropertyFromCloudFormation(properties.SnapStart) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("timeout", "Timeout", (properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined));
  ret.addPropertyResult("tracingConfig", "TracingConfig", (properties.TracingConfig != null ? CfnFunctionTracingConfigPropertyFromCloudFormation(properties.TracingConfig) : undefined));
  ret.addPropertyResult("vpcConfig", "VpcConfig", (properties.VpcConfig != null ? CfnFunctionVpcConfigPropertyFromCloudFormation(properties.VpcConfig) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`CfnFunctionProps\`
 *
 * @param properties - the TypeScript properties of a \`CfnFunctionProps\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnFunctionPropsValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("architectures", cdk.listValidator(cdk.validateString))(properties.architectures));
  errors.collect(cdk.propertyValidator("code", cdk.requiredValidator)(properties.code));
  errors.collect(cdk.propertyValidator("code", CfnFunctionCodePropertyValidator)(properties.code));
  errors.collect(cdk.propertyValidator("codeSigningConfigArn", cdk.validateString)(properties.codeSigningConfigArn));
  errors.collect(cdk.propertyValidator("deadLetterConfig", CfnFunctionDeadLetterConfigPropertyValidator)(properties.deadLetterConfig));
  errors.collect(cdk.propertyValidator("description", cdk.validateString)(properties.description));
  errors.collect(cdk.propertyValidator("environment", CfnFunctionEnvironmentPropertyValidator)(properties.environment));
  errors.collect(cdk.propertyValidator("ephemeralStorage", CfnFunctionEphemeralStoragePropertyValidator)(properties.ephemeralStorage));
  errors.collect(cdk.propertyValidator("fileSystemConfigs", cdk.listValidator(CfnFunctionFileSystemConfigPropertyValidator))(properties.fileSystemConfigs));
  errors.collect(cdk.propertyValidator("functionName", cdk.validateString)(properties.functionName));
  errors.collect(cdk.propertyValidator("handler", cdk.validateString)(properties.handler));
  errors.collect(cdk.propertyValidator("imageConfig", CfnFunctionImageConfigPropertyValidator)(properties.imageConfig));
  errors.collect(cdk.propertyValidator("kmsKeyArn", cdk.validateString)(properties.kmsKeyArn));
  errors.collect(cdk.propertyValidator("layers", cdk.listValidator(cdk.validateString))(properties.layers));
  errors.collect(cdk.propertyValidator("memorySize", cdk.validateNumber)(properties.memorySize));
  errors.collect(cdk.propertyValidator("packageType", cdk.validateString)(properties.packageType));
  errors.collect(cdk.propertyValidator("reservedConcurrentExecutions", cdk.validateNumber)(properties.reservedConcurrentExecutions));
  errors.collect(cdk.propertyValidator("role", cdk.requiredValidator)(properties.role));
  errors.collect(cdk.propertyValidator("role", cdk.validateString)(properties.role));
  errors.collect(cdk.propertyValidator("runtime", cdk.validateString)(properties.runtime));
  errors.collect(cdk.propertyValidator("runtimeManagementConfig", CfnFunctionRuntimeManagementConfigPropertyValidator)(properties.runtimeManagementConfig));
  errors.collect(cdk.propertyValidator("snapStart", CfnFunctionSnapStartPropertyValidator)(properties.snapStart));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(cdk.validateCfnTag))(properties.tags));
  errors.collect(cdk.propertyValidator("timeout", cdk.validateNumber)(properties.timeout));
  errors.collect(cdk.propertyValidator("tracingConfig", CfnFunctionTracingConfigPropertyValidator)(properties.tracingConfig));
  errors.collect(cdk.propertyValidator("vpcConfig", CfnFunctionVpcConfigPropertyValidator)(properties.vpcConfig));
  return errors.wrap("supplied properties not correct for \\"CfnFunctionProps\\"");
}

// @ts-ignore TS6133
function convertCfnFunctionPropsToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnFunctionPropsValidator(properties).assertSuccess();
  return {
    "Architectures": cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),
    "Code": convertCfnFunctionCodePropertyToCloudFormation(properties.code),
    "CodeSigningConfigArn": cdk.stringToCloudFormation(properties.codeSigningConfigArn),
    "DeadLetterConfig": convertCfnFunctionDeadLetterConfigPropertyToCloudFormation(properties.deadLetterConfig),
    "Description": cdk.stringToCloudFormation(properties.description),
    "Environment": convertCfnFunctionEnvironmentPropertyToCloudFormation(properties.environment),
    "EphemeralStorage": convertCfnFunctionEphemeralStoragePropertyToCloudFormation(properties.ephemeralStorage),
    "FileSystemConfigs": cdk.listMapper(convertCfnFunctionFileSystemConfigPropertyToCloudFormation)(properties.fileSystemConfigs),
    "FunctionName": cdk.stringToCloudFormation(properties.functionName),
    "Handler": cdk.stringToCloudFormation(properties.handler),
    "ImageConfig": convertCfnFunctionImageConfigPropertyToCloudFormation(properties.imageConfig),
    "KmsKeyArn": cdk.stringToCloudFormation(properties.kmsKeyArn),
    "Layers": cdk.listMapper(cdk.stringToCloudFormation)(properties.layers),
    "MemorySize": cdk.numberToCloudFormation(properties.memorySize),
    "PackageType": cdk.stringToCloudFormation(properties.packageType),
    "ReservedConcurrentExecutions": cdk.numberToCloudFormation(properties.reservedConcurrentExecutions),
    "Role": cdk.stringToCloudFormation(properties.role),
    "Runtime": cdk.stringToCloudFormation(properties.runtime),
    "RuntimeManagementConfig": convertCfnFunctionRuntimeManagementConfigPropertyToCloudFormation(properties.runtimeManagementConfig),
    "SnapStart": convertCfnFunctionSnapStartPropertyToCloudFormation(properties.snapStart),
    "Tags": cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),
    "Timeout": cdk.numberToCloudFormation(properties.timeout),
    "TracingConfig": convertCfnFunctionTracingConfigPropertyToCloudFormation(properties.tracingConfig),
    "VpcConfig": convertCfnFunctionVpcConfigPropertyToCloudFormation(properties.vpcConfig)
  };
}

// @ts-ignore TS6133
function CfnFunctionPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunctionProps | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunctionProps>();
  ret.addPropertyResult("architectures", "Architectures", (properties.Architectures != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Architectures) : undefined));
  ret.addPropertyResult("code", "Code", (properties.Code != null ? CfnFunctionCodePropertyFromCloudFormation(properties.Code) : undefined));
  ret.addPropertyResult("codeSigningConfigArn", "CodeSigningConfigArn", (properties.CodeSigningConfigArn != null ? cfn_parse.FromCloudFormation.getString(properties.CodeSigningConfigArn) : undefined));
  ret.addPropertyResult("deadLetterConfig", "DeadLetterConfig", (properties.DeadLetterConfig != null ? CfnFunctionDeadLetterConfigPropertyFromCloudFormation(properties.DeadLetterConfig) : undefined));
  ret.addPropertyResult("description", "Description", (properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined));
  ret.addPropertyResult("environment", "Environment", (properties.Environment != null ? CfnFunctionEnvironmentPropertyFromCloudFormation(properties.Environment) : undefined));
  ret.addPropertyResult("ephemeralStorage", "EphemeralStorage", (properties.EphemeralStorage != null ? CfnFunctionEphemeralStoragePropertyFromCloudFormation(properties.EphemeralStorage) : undefined));
  ret.addPropertyResult("fileSystemConfigs", "FileSystemConfigs", (properties.FileSystemConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionFileSystemConfigPropertyFromCloudFormation)(properties.FileSystemConfigs) : undefined));
  ret.addPropertyResult("functionName", "FunctionName", (properties.FunctionName != null ? cfn_parse.FromCloudFormation.getString(properties.FunctionName) : undefined));
  ret.addPropertyResult("handler", "Handler", (properties.Handler != null ? cfn_parse.FromCloudFormation.getString(properties.Handler) : undefined));
  ret.addPropertyResult("imageConfig", "ImageConfig", (properties.ImageConfig != null ? CfnFunctionImageConfigPropertyFromCloudFormation(properties.ImageConfig) : undefined));
  ret.addPropertyResult("kmsKeyArn", "KmsKeyArn", (properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined));
  ret.addPropertyResult("layers", "Layers", (properties.Layers != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Layers) : undefined));
  ret.addPropertyResult("memorySize", "MemorySize", (properties.MemorySize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemorySize) : undefined));
  ret.addPropertyResult("packageType", "PackageType", (properties.PackageType != null ? cfn_parse.FromCloudFormation.getString(properties.PackageType) : undefined));
  ret.addPropertyResult("reservedConcurrentExecutions", "ReservedConcurrentExecutions", (properties.ReservedConcurrentExecutions != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReservedConcurrentExecutions) : undefined));
  ret.addPropertyResult("role", "Role", (properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined));
  ret.addPropertyResult("runtime", "Runtime", (properties.Runtime != null ? cfn_parse.FromCloudFormation.getString(properties.Runtime) : undefined));
  ret.addPropertyResult("runtimeManagementConfig", "RuntimeManagementConfig", (properties.RuntimeManagementConfig != null ? CfnFunctionRuntimeManagementConfigPropertyFromCloudFormation(properties.RuntimeManagementConfig) : undefined));
  ret.addPropertyResult("snapStart", "SnapStart", (properties.SnapStart != null ? CfnFunctionSnapStartPropertyFromCloudFormation(properties.SnapStart) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined));
  ret.addPropertyResult("timeout", "Timeout", (properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined));
  ret.addPropertyResult("tracingConfig", "TracingConfig", (properties.TracingConfig != null ? CfnFunctionTracingConfigPropertyFromCloudFormation(properties.TracingConfig) : undefined));
  ret.addPropertyResult("vpcConfig", "VpcConfig", (properties.VpcConfig != null ? CfnFunctionVpcConfigPropertyFromCloudFormation(properties.VpcConfig) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}",
}
`;

exports[`AWS::RDS::DBCluster 1`] = `
{
  "augmentations": "// Copyright 2012-2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.
/* eslint-disable prettier/prettier,max-len */
import * as cw from "aws-cdk-lib/aws-cloudwatch";
import { DatabaseClusterBase } from "./cluster";

declare module "./cluster-ref" {
  interface IDatabaseCluster {
    /**
     * Return the given named metric for this DBCluster
     */
    metric(metricName: string, props?: cw.MetricOptions): cw.Metric;

    /**
     * The percentage of CPU utilization.
     *
     * Average over 5 minutes
     */
    metricCPUUtilization(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of database connections in use.
     *
     * Average over 5 minutes
     */
    metricDatabaseConnections(props?: cw.MetricOptions): cw.Metric;

    /**
     * The average number of deadlocks in the database per second.
     *
     * Average over 5 minutes
     */
    metricDeadlocks(props?: cw.MetricOptions): cw.Metric;

    /**
     * The amount of time that the instance has been running, in seconds.
     *
     * Average over 5 minutes
     */
    metricEngineUptime(props?: cw.MetricOptions): cw.Metric;

    /**
     * The amount of available random access memory, in bytes.
     *
     * Average over 5 minutes
     */
    metricFreeableMemory(props?: cw.MetricOptions): cw.Metric;

    /**
     * The amount of local storage available, in bytes.
     *
     * Average over 5 minutes
     */
    metricFreeLocalStorage(props?: cw.MetricOptions): cw.Metric;

    /**
     * The amount of network throughput received from clients by each instance, in bytes per second.
     *
     * Average over 5 minutes
     */
    metricNetworkReceiveThroughput(props?: cw.MetricOptions): cw.Metric;

    /**
     * The amount of network throughput both received from and transmitted to clients by each instance, in bytes per second.
     *
     * Average over 5 minutes
     */
    metricNetworkThroughput(props?: cw.MetricOptions): cw.Metric;

    /**
     * The amount of network throughput sent to clients by each instance, in bytes per second.
     *
     * Average over 5 minutes
     */
    metricNetworkTransmitThroughput(props?: cw.MetricOptions): cw.Metric;

    /**
     * The total amount of backup storage in bytes consumed by all Aurora snapshots outside its backup retention window.
     *
     * Average over 5 minutes
     */
    metricSnapshotStorageUsed(props?: cw.MetricOptions): cw.Metric;

    /**
     * The total amount of backup storage in bytes for which you are billed.
     *
     * Average over 5 minutes
     */
    metricTotalBackupStorageBilled(props?: cw.MetricOptions): cw.Metric;

    /**
     * The amount of storage used by your Aurora DB instance, in bytes.
     *
     * Average over 5 minutes
     */
    metricVolumeBytesUsed(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of billed read I/O operations from a cluster volume, reported at 5-minute intervals.
     *
     * Average over 5 minutes
     */
    metricVolumeReadIOPs(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of write disk I/O operations to the cluster volume, reported at 5-minute intervals.
     *
     * Average over 5 minutes
     */
    metricVolumeWriteIOPs(props?: cw.MetricOptions): cw.Metric;
  }
}



declare module "./cluster" {
  interface DatabaseClusterBase {
    /**
     * Return the given named metric for this DBCluster
     */
    metric(metricName: string, props?: cw.MetricOptions): cw.Metric;

    /**
     * The percentage of CPU utilization.
     *
     * Average over 5 minutes
     */
    metricCPUUtilization(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of database connections in use.
     *
     * Average over 5 minutes
     */
    metricDatabaseConnections(props?: cw.MetricOptions): cw.Metric;

    /**
     * The average number of deadlocks in the database per second.
     *
     * Average over 5 minutes
     */
    metricDeadlocks(props?: cw.MetricOptions): cw.Metric;

    /**
     * The amount of time that the instance has been running, in seconds.
     *
     * Average over 5 minutes
     */
    metricEngineUptime(props?: cw.MetricOptions): cw.Metric;

    /**
     * The amount of available random access memory, in bytes.
     *
     * Average over 5 minutes
     */
    metricFreeableMemory(props?: cw.MetricOptions): cw.Metric;

    /**
     * The amount of local storage available, in bytes.
     *
     * Average over 5 minutes
     */
    metricFreeLocalStorage(props?: cw.MetricOptions): cw.Metric;

    /**
     * The amount of network throughput received from clients by each instance, in bytes per second.
     *
     * Average over 5 minutes
     */
    metricNetworkReceiveThroughput(props?: cw.MetricOptions): cw.Metric;

    /**
     * The amount of network throughput both received from and transmitted to clients by each instance, in bytes per second.
     *
     * Average over 5 minutes
     */
    metricNetworkThroughput(props?: cw.MetricOptions): cw.Metric;

    /**
     * The amount of network throughput sent to clients by each instance, in bytes per second.
     *
     * Average over 5 minutes
     */
    metricNetworkTransmitThroughput(props?: cw.MetricOptions): cw.Metric;

    /**
     * The total amount of backup storage in bytes consumed by all Aurora snapshots outside its backup retention window.
     *
     * Average over 5 minutes
     */
    metricSnapshotStorageUsed(props?: cw.MetricOptions): cw.Metric;

    /**
     * The total amount of backup storage in bytes for which you are billed.
     *
     * Average over 5 minutes
     */
    metricTotalBackupStorageBilled(props?: cw.MetricOptions): cw.Metric;

    /**
     * The amount of storage used by your Aurora DB instance, in bytes.
     *
     * Average over 5 minutes
     */
    metricVolumeBytesUsed(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of billed read I/O operations from a cluster volume, reported at 5-minute intervals.
     *
     * Average over 5 minutes
     */
    metricVolumeReadIOPs(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of write disk I/O operations to the cluster volume, reported at 5-minute intervals.
     *
     * Average over 5 minutes
     */
    metricVolumeWriteIOPs(props?: cw.MetricOptions): cw.Metric;
  }
}

DatabaseClusterBase.prototype.metric = function(metricName: string, props?: cw.MetricOptions) {
  return new cw.Metric({
    "namespace": "AWS/RDS",
    "metricName": metricName,
    "dimensionsMap": {
      "DBClusterIdentifier": this.clusterIdentifier
    },
    ...props
  }).attachTo(this);
};
DatabaseClusterBase.prototype.metricCPUUtilization = function(props?: cw.MetricOptions) {
  return this.metric("CPUUtilization", {
    "statistic": "Average",
    ...props
  });
};
DatabaseClusterBase.prototype.metricDatabaseConnections = function(props?: cw.MetricOptions) {
  return this.metric("DatabaseConnections", {
    "statistic": "Average",
    ...props
  });
};
DatabaseClusterBase.prototype.metricDeadlocks = function(props?: cw.MetricOptions) {
  return this.metric("Deadlocks", {
    "statistic": "Average",
    ...props
  });
};
DatabaseClusterBase.prototype.metricEngineUptime = function(props?: cw.MetricOptions) {
  return this.metric("EngineUptime", {
    "statistic": "Average",
    ...props
  });
};
DatabaseClusterBase.prototype.metricFreeableMemory = function(props?: cw.MetricOptions) {
  return this.metric("FreeableMemory", {
    "statistic": "Average",
    ...props
  });
};
DatabaseClusterBase.prototype.metricFreeLocalStorage = function(props?: cw.MetricOptions) {
  return this.metric("FreeLocalStorage", {
    "statistic": "Average",
    ...props
  });
};
DatabaseClusterBase.prototype.metricNetworkReceiveThroughput = function(props?: cw.MetricOptions) {
  return this.metric("NetworkReceiveThroughput", {
    "statistic": "Average",
    ...props
  });
};
DatabaseClusterBase.prototype.metricNetworkThroughput = function(props?: cw.MetricOptions) {
  return this.metric("NetworkThroughput", {
    "statistic": "Average",
    ...props
  });
};
DatabaseClusterBase.prototype.metricNetworkTransmitThroughput = function(props?: cw.MetricOptions) {
  return this.metric("NetworkTransmitThroughput", {
    "statistic": "Average",
    ...props
  });
};
DatabaseClusterBase.prototype.metricSnapshotStorageUsed = function(props?: cw.MetricOptions) {
  return this.metric("SnapshotStorageUsed", {
    "statistic": "Average",
    ...props
  });
};
DatabaseClusterBase.prototype.metricTotalBackupStorageBilled = function(props?: cw.MetricOptions) {
  return this.metric("TotalBackupStorageBilled", {
    "statistic": "Average",
    ...props
  });
};
DatabaseClusterBase.prototype.metricVolumeBytesUsed = function(props?: cw.MetricOptions) {
  return this.metric("VolumeBytesUsed", {
    "statistic": "Average",
    ...props
  });
};
DatabaseClusterBase.prototype.metricVolumeReadIOPs = function(props?: cw.MetricOptions) {
  return this.metric("VolumeReadIOPs", {
    "statistic": "Average",
    ...props
  });
};
DatabaseClusterBase.prototype.metricVolumeWriteIOPs = function(props?: cw.MetricOptions) {
  return this.metric("VolumeWriteIOPs", {
    "statistic": "Average",
    ...props
  });
};",
  "metrics": "/* eslint-disable prettier/prettier,max-len */
export interface MetricWithDims<D> {
  readonly namespace: string;

  readonly metricName: string;

  readonly statistic: string;

  readonly dimensionsMap: D;
}

export class RDSMetrics {
  public static cpuUtilizationAverage(dimensions: { DBInstanceIdentifier: string; }): MetricWithDims<{ DBInstanceIdentifier: string; }>;

  public static cpuUtilizationAverage(dimensions: { DBClusterIdentifier: string; }): MetricWithDims<{ DBClusterIdentifier: string; }>;

  public static cpuUtilizationAverage(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/RDS",
      "metricName": "CPUUtilization",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static databaseConnectionsSum(dimensions: { DBInstanceIdentifier: string; }): MetricWithDims<{ DBInstanceIdentifier: string; }>;

  public static databaseConnectionsSum(dimensions: { DBClusterIdentifier: string; }): MetricWithDims<{ DBClusterIdentifier: string; }>;

  public static databaseConnectionsSum(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/RDS",
      "metricName": "DatabaseConnections",
      "dimensionsMap": dimensions,
      "statistic": "Sum"
    };
  }

  public static freeStorageSpaceAverage(dimensions: { DBInstanceIdentifier: string; }): MetricWithDims<{ DBInstanceIdentifier: string; }>;

  public static freeStorageSpaceAverage(dimensions: { DBClusterIdentifier: string; }): MetricWithDims<{ DBClusterIdentifier: string; }>;

  public static freeStorageSpaceAverage(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/RDS",
      "metricName": "FreeStorageSpace",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static freeableMemoryAverage(dimensions: { DBInstanceIdentifier: string; }): MetricWithDims<{ DBInstanceIdentifier: string; }>;

  public static freeableMemoryAverage(dimensions: { DBClusterIdentifier: string; }): MetricWithDims<{ DBClusterIdentifier: string; }>;

  public static freeableMemoryAverage(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/RDS",
      "metricName": "FreeableMemory",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static readLatencyAverage(dimensions: { DBInstanceIdentifier: string; }): MetricWithDims<{ DBInstanceIdentifier: string; }>;

  public static readLatencyAverage(dimensions: { DBClusterIdentifier: string; }): MetricWithDims<{ DBClusterIdentifier: string; }>;

  public static readLatencyAverage(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/RDS",
      "metricName": "ReadLatency",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static readThroughputAverage(dimensions: { DBInstanceIdentifier: string; }): MetricWithDims<{ DBInstanceIdentifier: string; }>;

  public static readThroughputAverage(dimensions: { DBClusterIdentifier: string; }): MetricWithDims<{ DBClusterIdentifier: string; }>;

  public static readThroughputAverage(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/RDS",
      "metricName": "ReadThroughput",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static readIopsAverage(dimensions: { DBInstanceIdentifier: string; }): MetricWithDims<{ DBInstanceIdentifier: string; }>;

  public static readIopsAverage(dimensions: { DBClusterIdentifier: string; }): MetricWithDims<{ DBClusterIdentifier: string; }>;

  public static readIopsAverage(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/RDS",
      "metricName": "ReadIOPS",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static writeLatencyAverage(dimensions: { DBInstanceIdentifier: string; }): MetricWithDims<{ DBInstanceIdentifier: string; }>;

  public static writeLatencyAverage(dimensions: { DBClusterIdentifier: string; }): MetricWithDims<{ DBClusterIdentifier: string; }>;

  public static writeLatencyAverage(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/RDS",
      "metricName": "WriteLatency",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static writeThroughputAverage(dimensions: { DBInstanceIdentifier: string; }): MetricWithDims<{ DBInstanceIdentifier: string; }>;

  public static writeThroughputAverage(dimensions: { DBClusterIdentifier: string; }): MetricWithDims<{ DBClusterIdentifier: string; }>;

  public static writeThroughputAverage(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/RDS",
      "metricName": "WriteThroughput",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static writeIopsAverage(dimensions: { DBInstanceIdentifier: string; }): MetricWithDims<{ DBInstanceIdentifier: string; }>;

  public static writeIopsAverage(dimensions: { DBClusterIdentifier: string; }): MetricWithDims<{ DBClusterIdentifier: string; }>;

  public static writeIopsAverage(dimensions: any): MetricWithDims<any> {
    return {
      "namespace": "AWS/RDS",
      "metricName": "WriteIOPS",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }
}",
  "module": "/* eslint-disable prettier/prettier,max-len */
import * as cdk from "aws-cdk-lib";
import * as constructs from "constructs";
import * as cfn_parse from "aws-cdk-lib/core/lib/helpers-internal";

/**
 * The \`AWS::RDS::DBCluster\` resource creates an Amazon Aurora DB cluster or Multi-AZ DB cluster.
 *
 * For more information about creating an Aurora DB cluster, see [Creating an Amazon Aurora DB cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.CreateInstance.html) in the *Amazon Aurora User Guide* .
 *
 * For more information about creating a Multi-AZ DB cluster, see [Creating a Multi-AZ DB cluster](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/create-multi-az-db-cluster.html) in the *Amazon RDS User Guide* .
 *
 * > You can only create this resource in AWS Regions where Amazon Aurora or Multi-AZ DB clusters are supported.
 *
 * *Updating DB clusters*
 *
 * When properties labeled " *Update requires:* [Replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) " are updated, AWS CloudFormation first creates a replacement DB cluster, then changes references from other dependent resources to point to the replacement DB cluster, and finally deletes the old DB cluster.
 *
 * > We highly recommend that you take a snapshot of the database before updating the stack. If you don't, you lose the data when AWS CloudFormation replaces your DB cluster. To preserve your data, perform the following procedure:
 * >
 * > - Deactivate any applications that are using the DB cluster so that there's no activity on the DB instance.
 * > - Create a snapshot of the DB cluster. For more information, see [Creating a DB Cluster Snapshot](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_CreateSnapshotCluster.html) .
 * > - If you want to restore your DB cluster using a DB cluster snapshot, modify the updated template with your DB cluster changes and add the \`SnapshotIdentifier\` property with the ID of the DB cluster snapshot that you want to use.
 * >
 * > After you restore a DB cluster with a \`SnapshotIdentifier\` property, you must specify the same \`SnapshotIdentifier\` property for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the DB cluster snapshot again, and the data in the database is not changed. However, if you don't specify the \`SnapshotIdentifier\` property, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, a new DB cluster is restored from the specified \`SnapshotIdentifier\` property, and the original DB cluster is deleted.
 * > - Update the stack.
 *
 * Currently, when you are updating the stack for an Aurora Serverless DB cluster, you can't include changes to any other properties when you specify one of the following properties: \`PreferredBackupWindow\` , \`PreferredMaintenanceWindow\` , and \`Port\` . This limitation doesn't apply to provisioned DB clusters.
 *
 * For more information about updating other properties of this resource, see \`[ModifyDBCluster](https://docs.aws.amazon.com//AmazonRDS/latest/APIReference/API_ModifyDBCluster.html)\` . For more information about updating stacks, see [AWS CloudFormation Stacks Updates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html) .
 *
 * *Deleting DB clusters*
 *
 * The default \`DeletionPolicy\` for \`AWS::RDS::DBCluster\` resources is \`Snapshot\` . For more information about how AWS CloudFormation deletes resources, see [DeletionPolicy Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html) .
 *
 * @stability external
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html
 */
export class CfnDBCluster extends cdk.CfnResource implements cdk.IInspectable, cdk.ITaggable {
  /**
   * The CloudFormation resource type name for this resource class.
   */
  public static readonly CFN_RESOURCE_TYPE_NAME: string = "AWS::RDS::DBCluster";

  /**
   * Build a CfnDBCluster from CloudFormation properties
   *
   * A factory method that creates a new instance of this class from an object
   * containing the CloudFormation properties of this resource.
   * Used in the @aws-cdk/cloudformation-include module.
   *
   * @internal
   */
  public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDBCluster {
    resourceAttributes = resourceAttributes || {};
    const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);
    const propsResult = CfnDBClusterPropsFromCloudFormation(resourceProperties);
    if (cdk.isResolvableObject(propsResult.value)) {
      throw new Error("Unexpected IResolvable");
    }
    const ret = new CfnDBCluster(scope, id, propsResult.value);
    for (const [propKey, propVal] of Object.entries(propsResult.extraProperties)) {
      ret.addPropertyOverride(propKey, propVal);
    }
    options.parser.handleAttributes(ret, resourceAttributes, id);
    return ret;
  }

  /**
   * The Amazon Resource Name (ARN) for the DB cluster.
   *
   * @cloudformationAttribute DBClusterArn
   */
  public readonly attrDbClusterArn: string;

  /**
   * The AWS Region -unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the KMS key for the DB cluster is accessed.
   *
   * @cloudformationAttribute DBClusterResourceId
   */
  public readonly attrDbClusterResourceId: string;

  /**
   * The connection endpoint for the primary instance of the DB cluster.
   *
   * @cloudformationAttribute Endpoint
   */
  public readonly attrEndpoint: cdk.IResolvable;

  /**
   * The connection endpoint for the DB cluster. For example: \`mystack-mydbcluster-123456789012.us-east-2.rds.amazonaws.com\`
   *
   * @cloudformationAttribute Endpoint.Address
   */
  public readonly attrEndpointAddress: string;

  /**
   * The port number that will accept connections on this DB cluster. For example: \`3306\`
   *
   * @cloudformationAttribute Endpoint.Port
   */
  public readonly attrEndpointPort: string;

  /**
   * The Amazon Resource Name (ARN) of the secret.
   *
   * @cloudformationAttribute MasterUserSecret.SecretArn
   */
  public readonly attrMasterUserSecretSecretArn: string;

  /**
   * @cloudformationAttribute ReadEndpoint
   */
  public readonly attrReadEndpoint: cdk.IResolvable;

  /**
   * The reader endpoint for the DB cluster. For example: \`mystack-mydbcluster-ro-123456789012.us-east-2.rds.amazonaws.com\`
   *
   * @cloudformationAttribute ReadEndpoint.Address
   */
  public readonly attrReadEndpointAddress: string;

  /**
   * The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-allocatedstorage
   */
  public allocatedStorage?: number;

  /**
   * Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-associatedroles
   */
  public associatedRoles?: Array<CfnDBCluster.DBClusterRoleProperty | cdk.IResolvable> | cdk.IResolvable;

  /**
   * A value that indicates whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-autominorversionupgrade
   */
  public autoMinorVersionUpgrade?: boolean | cdk.IResolvable;

  /**
   * A list of Availability Zones (AZs) where instances in the DB cluster can be created.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-availabilityzones
   */
  public availabilityZones?: Array<string>;

  /**
   * The target backtrack window, in seconds. To disable backtracking, set this value to 0.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-backtrackwindow
   */
  public backtrackWindow?: number;

  /**
   * The number of days for which automated backups are retained.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-backupretentionperiod
   */
  public backupRetentionPeriod?: number;

  /**
   * A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-copytagstosnapshot
   */
  public copyTagsToSnapshot?: boolean | cdk.IResolvable;

  /**
   * The name of your database.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-databasename
   */
  public databaseName?: string;

  /**
   * The DB cluster identifier. This parameter is stored as a lowercase string.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbclusteridentifier
   */
  public dbClusterIdentifier?: string;

  /**
   * The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all AWS Regions , or for all database engines.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbclusterinstanceclass
   */
  public dbClusterInstanceClass?: string;

  /**
   * The name of the DB cluster parameter group to associate with this DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbclusterparametergroupname
   */
  public dbClusterParameterGroupName?: string;

  /**
   * The name of the DB parameter group to apply to all instances of the DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbinstanceparametergroupname
   */
  public dbInstanceParameterGroupName?: string;

  /**
   * A DB subnet group that you want to associate with this DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbsubnetgroupname
   */
  public dbSubnetGroupName?: string;

  /**
   * Reserved for future use.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbsystemid
   */
  public dbSystemId?: string;

  /**
   * A value that indicates whether the DB cluster has deletion protection enabled.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-deletionprotection
   */
  public deletionProtection?: boolean | cdk.IResolvable;

  /**
   * Indicates the directory ID of the Active Directory to create the DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-domain
   */
  public domain?: string;

  /**
   * Specifies the name of the IAM role to use when making API calls to the Directory Service.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-domainiamrolename
   */
  public domainIamRoleName?: string;

  /**
   * The list of log types that need to be enabled for exporting to CloudWatch Logs.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enablecloudwatchlogsexports
   */
  public enableCloudwatchLogsExports?: Array<string>;

  /**
   * A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enablehttpendpoint
   */
  public enableHttpEndpoint?: boolean | cdk.IResolvable;

  /**
   * A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enableiamdatabaseauthentication
   */
  public enableIamDatabaseAuthentication?: boolean | cdk.IResolvable;

  /**
   * The name of the database engine to be used for this DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engine
   */
  public engine?: string;

  /**
   * The DB engine mode of the DB cluster, either \`provisioned\` , \`serverless\` , \`parallelquery\` , \`global\` , or \`multimaster\` .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enginemode
   */
  public engineMode?: string;

  /**
   * The version number of the database engine to use.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion
   */
  public engineVersion?: string;

  /**
   * If you are configuring an Aurora global database cluster and want your Aurora DB cluster to be a secondary member in the global database cluster, specify the global cluster ID of the global database cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-globalclusteridentifier
   */
  public globalClusterIdentifier?: string;

  /**
   * The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-iops
   */
  public iops?: number;

  /**
   * The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such as \`arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef\` .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-kmskeyid
   */
  public kmsKeyId?: string;

  /**
   * A value that indicates whether to manage the master user password with AWS Secrets Manager.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-managemasteruserpassword
   */
  public manageMasterUserPassword?: boolean | cdk.IResolvable;

  /**
   * The name of the master user for the DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-masterusername
   */
  public masterUsername?: string;

  /**
   * The master password for the DB instance.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-masteruserpassword
   */
  public masterUserPassword?: string;

  /**
   * Contains the secret managed by RDS in AWS Secrets Manager for the master user password.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-masterusersecret
   */
  public masterUserSecret?: cdk.IResolvable | CfnDBCluster.MasterUserSecretProperty;

  /**
   * The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-monitoringinterval
   */
  public monitoringInterval?: number;

  /**
   * The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-monitoringrolearn
   */
  public monitoringRoleArn?: string;

  /**
   * The network type of the DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-networktype
   */
  public networkType?: string;

  /**
   * A value that indicates whether to turn on Performance Insights for the DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-performanceinsightsenabled
   */
  public performanceInsightsEnabled?: boolean | cdk.IResolvable;

  /**
   * The AWS KMS key identifier for encryption of Performance Insights data.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-performanceinsightskmskeyid
   */
  public performanceInsightsKmsKeyId?: string;

  /**
   * The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-performanceinsightsretentionperiod
   */
  public performanceInsightsRetentionPeriod?: number;

  /**
   * The port number on which the DB instances in the DB cluster accept connections.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-port
   */
  public port?: number;

  /**
   * The daily time range during which automated backups are created.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-preferredbackupwindow
   */
  public preferredBackupWindow?: string;

  /**
   * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-preferredmaintenancewindow
   */
  public preferredMaintenanceWindow?: string;

  /**
   * A value that indicates whether the DB cluster is publicly accessible.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-publiclyaccessible
   */
  public publiclyAccessible?: boolean | cdk.IResolvable;

  /**
   * The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-replicationsourceidentifier
   */
  public replicationSourceIdentifier?: string;

  /**
   * The date and time to restore the DB cluster to.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-restoretotime
   */
  public restoreToTime?: string;

  /**
   * The type of restore to be performed. You can specify one of the following values:.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-restoretype
   */
  public restoreType?: string;

  /**
   * The \`ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-scalingconfiguration
   */
  public scalingConfiguration?: cdk.IResolvable | CfnDBCluster.ScalingConfigurationProperty;

  /**
   * The \`ServerlessV2ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless V2 DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration
   */
  public serverlessV2ScalingConfiguration?: cdk.IResolvable | CfnDBCluster.ServerlessV2ScalingConfigurationProperty;

  /**
   * The identifier for the DB snapshot or DB cluster snapshot to restore from.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-snapshotidentifier
   */
  public snapshotIdentifier?: string;

  /**
   * When restoring a DB cluster to a point in time, the identifier of the source DB cluster from which to restore.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-sourcedbclusteridentifier
   */
  public sourceDbClusterIdentifier?: string;

  /**
   * The AWS Region which contains the source DB cluster when replicating a DB cluster. For example, \`us-east-1\` .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-sourceregion
   */
  public sourceRegion?: string;

  /**
   * Indicates whether the DB cluster is encrypted.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-storageencrypted
   */
  public storageEncrypted?: boolean | cdk.IResolvable;

  /**
   * Specifies the storage type to be associated with the DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-storagetype
   */
  public storageType?: string;

  /**
   * Tag Manager which manages the tags for this resource
   */
  public readonly tags: cdk.TagManager;

  /**
   * An optional array of key-value pairs to apply to this DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-tags
   */
  public tagsRaw?: Array<cdk.CfnTag>;

  /**
   * A value that indicates whether to restore the DB cluster to the latest restorable backup time.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-uselatestrestorabletime
   */
  public useLatestRestorableTime?: boolean | cdk.IResolvable;

  /**
   * A list of EC2 VPC security groups to associate with this DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-vpcsecuritygroupids
   */
  public vpcSecurityGroupIds?: Array<string>;

  /**
   * @param scope Scope in which this resource is defined
   * @param id Construct identifier for this resource (unique in its scope)
   * @param props Resource properties
   */
  public constructor(scope: constructs.Construct, id: string, props: CfnDBClusterProps = {}) {
    super(scope, id, {
      "type": CfnDBCluster.CFN_RESOURCE_TYPE_NAME,
      "properties": props
    });

    this.attrDbClusterArn = cdk.Token.asString(this.getAtt("DBClusterArn", cdk.ResolutionTypeHint.STRING));
    this.attrDbClusterResourceId = cdk.Token.asString(this.getAtt("DBClusterResourceId", cdk.ResolutionTypeHint.STRING));
    this.attrEndpoint = this.getAtt("Endpoint");
    this.attrEndpointAddress = cdk.Token.asString(this.getAtt("Endpoint.Address", cdk.ResolutionTypeHint.STRING));
    this.attrEndpointPort = cdk.Token.asString(this.getAtt("Endpoint.Port", cdk.ResolutionTypeHint.STRING));
    this.attrMasterUserSecretSecretArn = cdk.Token.asString(this.getAtt("MasterUserSecret.SecretArn", cdk.ResolutionTypeHint.STRING));
    this.attrReadEndpoint = this.getAtt("ReadEndpoint");
    this.attrReadEndpointAddress = cdk.Token.asString(this.getAtt("ReadEndpoint.Address", cdk.ResolutionTypeHint.STRING));
    this.allocatedStorage = props.allocatedStorage;
    this.associatedRoles = props.associatedRoles;
    this.autoMinorVersionUpgrade = props.autoMinorVersionUpgrade;
    this.availabilityZones = props.availabilityZones;
    this.backtrackWindow = props.backtrackWindow;
    this.backupRetentionPeriod = props.backupRetentionPeriod;
    this.copyTagsToSnapshot = props.copyTagsToSnapshot;
    this.databaseName = props.databaseName;
    this.dbClusterIdentifier = props.dbClusterIdentifier;
    this.dbClusterInstanceClass = props.dbClusterInstanceClass;
    this.dbClusterParameterGroupName = props.dbClusterParameterGroupName;
    this.dbInstanceParameterGroupName = props.dbInstanceParameterGroupName;
    this.dbSubnetGroupName = props.dbSubnetGroupName;
    this.dbSystemId = props.dbSystemId;
    this.deletionProtection = props.deletionProtection;
    this.domain = props.domain;
    this.domainIamRoleName = props.domainIamRoleName;
    this.enableCloudwatchLogsExports = props.enableCloudwatchLogsExports;
    this.enableHttpEndpoint = props.enableHttpEndpoint;
    this.enableIamDatabaseAuthentication = props.enableIamDatabaseAuthentication;
    this.engine = props.engine;
    this.engineMode = props.engineMode;
    this.engineVersion = props.engineVersion;
    this.globalClusterIdentifier = props.globalClusterIdentifier;
    this.iops = props.iops;
    this.kmsKeyId = props.kmsKeyId;
    this.manageMasterUserPassword = props.manageMasterUserPassword;
    this.masterUsername = props.masterUsername;
    this.masterUserPassword = props.masterUserPassword;
    this.masterUserSecret = props.masterUserSecret;
    this.monitoringInterval = props.monitoringInterval;
    this.monitoringRoleArn = props.monitoringRoleArn;
    this.networkType = props.networkType;
    this.performanceInsightsEnabled = props.performanceInsightsEnabled;
    this.performanceInsightsKmsKeyId = props.performanceInsightsKmsKeyId;
    this.performanceInsightsRetentionPeriod = props.performanceInsightsRetentionPeriod;
    this.port = props.port;
    this.preferredBackupWindow = props.preferredBackupWindow;
    this.preferredMaintenanceWindow = props.preferredMaintenanceWindow;
    this.publiclyAccessible = props.publiclyAccessible;
    this.replicationSourceIdentifier = props.replicationSourceIdentifier;
    this.restoreToTime = props.restoreToTime;
    this.restoreType = props.restoreType;
    this.scalingConfiguration = props.scalingConfiguration;
    this.serverlessV2ScalingConfiguration = props.serverlessV2ScalingConfiguration;
    this.snapshotIdentifier = props.snapshotIdentifier;
    this.sourceDbClusterIdentifier = props.sourceDbClusterIdentifier;
    this.sourceRegion = props.sourceRegion;
    this.storageEncrypted = props.storageEncrypted;
    this.storageType = props.storageType;
    this.tags = new cdk.TagManager(cdk.TagType.STANDARD, "AWS::RDS::DBCluster", props.tags, {
      "tagPropertyName": "tags"
    });
    this.tagsRaw = props.tags;
    this.useLatestRestorableTime = props.useLatestRestorableTime;
    this.vpcSecurityGroupIds = props.vpcSecurityGroupIds;
    if ((this.node.scope != null && cdk.Resource.isResource(this.node.scope))) {
      this.node.addValidation({
        "validate": () => ((this.cfnOptions.deletionPolicy === undefined) ? ["'AWS::RDS::DBCluster' is a stateful resource type, and you must specify a Removal Policy for it. Call 'resource.applyRemovalPolicy()'."] : [])
      });
    }
  }

  protected get cfnProperties(): Record<string, any> {
    return {
      "allocatedStorage": this.allocatedStorage,
      "associatedRoles": this.associatedRoles,
      "autoMinorVersionUpgrade": this.autoMinorVersionUpgrade,
      "availabilityZones": this.availabilityZones,
      "backtrackWindow": this.backtrackWindow,
      "backupRetentionPeriod": this.backupRetentionPeriod,
      "copyTagsToSnapshot": this.copyTagsToSnapshot,
      "databaseName": this.databaseName,
      "dbClusterIdentifier": this.dbClusterIdentifier,
      "dbClusterInstanceClass": this.dbClusterInstanceClass,
      "dbClusterParameterGroupName": this.dbClusterParameterGroupName,
      "dbInstanceParameterGroupName": this.dbInstanceParameterGroupName,
      "dbSubnetGroupName": this.dbSubnetGroupName,
      "dbSystemId": this.dbSystemId,
      "deletionProtection": this.deletionProtection,
      "domain": this.domain,
      "domainIamRoleName": this.domainIamRoleName,
      "enableCloudwatchLogsExports": this.enableCloudwatchLogsExports,
      "enableHttpEndpoint": this.enableHttpEndpoint,
      "enableIamDatabaseAuthentication": this.enableIamDatabaseAuthentication,
      "engine": this.engine,
      "engineMode": this.engineMode,
      "engineVersion": this.engineVersion,
      "globalClusterIdentifier": this.globalClusterIdentifier,
      "iops": this.iops,
      "kmsKeyId": this.kmsKeyId,
      "manageMasterUserPassword": this.manageMasterUserPassword,
      "masterUsername": this.masterUsername,
      "masterUserPassword": this.masterUserPassword,
      "masterUserSecret": this.masterUserSecret,
      "monitoringInterval": this.monitoringInterval,
      "monitoringRoleArn": this.monitoringRoleArn,
      "networkType": this.networkType,
      "performanceInsightsEnabled": this.performanceInsightsEnabled,
      "performanceInsightsKmsKeyId": this.performanceInsightsKmsKeyId,
      "performanceInsightsRetentionPeriod": this.performanceInsightsRetentionPeriod,
      "port": this.port,
      "preferredBackupWindow": this.preferredBackupWindow,
      "preferredMaintenanceWindow": this.preferredMaintenanceWindow,
      "publiclyAccessible": this.publiclyAccessible,
      "replicationSourceIdentifier": this.replicationSourceIdentifier,
      "restoreToTime": this.restoreToTime,
      "restoreType": this.restoreType,
      "scalingConfiguration": this.scalingConfiguration,
      "serverlessV2ScalingConfiguration": this.serverlessV2ScalingConfiguration,
      "snapshotIdentifier": this.snapshotIdentifier,
      "sourceDbClusterIdentifier": this.sourceDbClusterIdentifier,
      "sourceRegion": this.sourceRegion,
      "storageEncrypted": this.storageEncrypted,
      "storageType": this.storageType,
      "tags": this.tags.renderTags(),
      "useLatestRestorableTime": this.useLatestRestorableTime,
      "vpcSecurityGroupIds": this.vpcSecurityGroupIds
    };
  }

  /**
   * Examines the CloudFormation resource and discloses attributes
   *
   * @param inspector tree inspector to collect and process attributes
   */
  public inspect(inspector: cdk.TreeInspector): void {
    inspector.addAttribute("aws:cdk:cloudformation:type", CfnDBCluster.CFN_RESOURCE_TYPE_NAME);
    inspector.addAttribute("aws:cdk:cloudformation:props", this.cfnProperties);
  }

  protected renderProperties(props: Record<string, any>): Record<string, any> {
    return convertCfnDBClusterPropsToCloudFormation(props);
  }
}

export namespace CfnDBCluster {
  /**
   * Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html
   */
  export interface DBClusterRoleProperty {
    /**
     * The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-allocatedstorage
     */
    readonly allocatedStorage?: number;

    /**
     * Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster.
     *
     * IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other Amazon Web Services on your behalf.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-associatedroles
     */
    readonly associatedRoles?: Array<CfnDBCluster.DBClusterRoleProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * A value that indicates whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window.
     *
     * By default, minor engine upgrades are applied automatically.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-autominorversionupgrade
     */
    readonly autoMinorVersionUpgrade?: boolean | cdk.IResolvable;

    /**
     * A list of Availability Zones (AZs) where instances in the DB cluster can be created.
     *
     * For information on AWS Regions and Availability Zones, see [Choosing the Regions and Availability Zones](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-availabilityzones
     */
    readonly availabilityZones?: Array<string>;

    /**
     * The target backtrack window, in seconds. To disable backtracking, set this value to 0.
     *
     * > Currently, Backtrack is only supported for Aurora MySQL DB clusters.
     *
     * Default: 0
     *
     * Constraints:
     *
     * - If specified, this value must be set to a number from 0 to 259,200 (72 hours).
     *
     * Valid for: Aurora MySQL DB clusters only
     *
     * @default - 0
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-backtrackwindow
     */
    readonly backtrackWindow?: number;

    /**
     * The number of days for which automated backups are retained.
     *
     * Default: 1
     *
     * Constraints:
     *
     * - Must be a value from 1 to 35
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - 1
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-backupretentionperiod
     */
    readonly backupRetentionPeriod?: number;

    /**
     * A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster.
     *
     * The default is not to copy them.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-copytagstosnapshot
     */
    readonly copyTagsToSnapshot?: boolean | cdk.IResolvable;

    /**
     * The name of your database.
     *
     * If you don't provide a name, then Amazon RDS won't create a database in this DB cluster. For naming constraints, see [Naming Constraints](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-databasename
     */
    readonly databaseName?: string;

    /**
     * The DB cluster identifier. This parameter is stored as a lowercase string.
     *
     * Constraints:
     *
     * - Must contain from 1 to 63 letters, numbers, or hyphens.
     * - First character must be a letter.
     * - Can't end with a hyphen or contain two consecutive hyphens.
     *
     * Example: \`my-cluster1\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-dbclusteridentifier
     */
    readonly dbClusterIdentifier?: string;

    /**
     * The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all AWS Regions , or for all database engines.
     *
     * For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the *Amazon RDS User Guide* .
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-dbclusterinstanceclass
     */
    readonly dbClusterInstanceClass?: string;

    /**
     * The name of the DB cluster parameter group to associate with this DB cluster.
     *
     * > If you apply a parameter group to an existing DB cluster, then its DB instances might need to reboot. This can result in an outage while the DB instances are rebooting.
     * >
     * > If you apply a change to parameter group associated with a stopped DB cluster, then the update stack waits until the DB cluster is started.
     *
     * To list all of the available DB cluster parameter group names, use the following command:
     *
     * \`aws rds describe-db-cluster-parameter-groups --query "DBClusterParameterGroups[].DBClusterParameterGroupName" --output text\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - "default.aurora5.6"
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-dbclusterparametergroupname
     */
    readonly dbClusterParameterGroupName?: string;

    /**
     * The name of the DB parameter group to apply to all instances of the DB cluster.
     *
     * > When you apply a parameter group using the \`DBInstanceParameterGroupName\` parameter, the DB cluster isn't rebooted automatically. Also, parameter changes are applied immediately rather than during the next maintenance window.
     *
     * Default: The existing name setting
     *
     * Constraints:
     *
     * - The DB parameter group must be in the same DB parameter group family as this DB cluster.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-dbinstanceparametergroupname
     */
    readonly dbInstanceParameterGroupName?: string;

    /**
     * A DB subnet group that you want to associate with this DB cluster.
     *
     * If you are restoring a DB cluster to a point in time with \`RestoreType\` set to \`copy-on-write\` , and don't specify a DB subnet group name, then the DB cluster is restored with a default DB subnet group.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-dbsubnetgroupname
     */
    readonly dbSubnetGroupName?: string;

    /**
     * Reserved for future use.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-dbsystemid
     */
    readonly dbSystemId?: string;

    /**
     * A value that indicates whether the DB cluster has deletion protection enabled.
     *
     * The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-deletionprotection
     */
    readonly deletionProtection?: boolean | cdk.IResolvable;

    /**
     * Indicates the directory ID of the Active Directory to create the DB cluster.
     *
     * For Amazon Aurora DB clusters, Amazon RDS can use Kerberos authentication to authenticate users that connect to the DB cluster.
     *
     * For more information, see [Kerberos authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-domain
     */
    readonly domain?: string;

    /**
     * Specifies the name of the IAM role to use when making API calls to the Directory Service.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-domainiamrolename
     */
    readonly domainIamRoleName?: string;

    /**
     * The list of log types that need to be enabled for exporting to CloudWatch Logs.
     *
     * The values in the list depend on the DB engine being used. For more information, see [Publishing Database Logs to Amazon CloudWatch Logs](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the *Amazon Aurora User Guide* .
     *
     * *Aurora MySQL*
     *
     * Valid values: \`audit\` , \`error\` , \`general\` , \`slowquery\`
     *
     * *Aurora PostgreSQL*
     *
     * Valid values: \`postgresql\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-enablecloudwatchlogsexports
     */
    readonly enableCloudwatchLogsExports?: Array<string>;

    /**
     * A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster.
     *
     * By default, the HTTP endpoint is disabled.
     *
     * When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
     *
     * For more information, see [Using the Data API for Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-enablehttpendpoint
     */
    readonly enableHttpEndpoint?: boolean | cdk.IResolvable;

    /**
     * A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts.
     *
     * By default, mapping is disabled.
     *
     * For more information, see [IAM Database Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) in the *Amazon Aurora User Guide.*
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-enableiamdatabaseauthentication
     */
    readonly enableIamDatabaseAuthentication?: boolean | cdk.IResolvable;

    /**
     * The name of the database engine to be used for this DB cluster.
     *
     * Valid Values:
     *
     * - \`aurora\` (for MySQL 5.6-compatible Aurora)
     * - \`aurora-mysql\` (for MySQL 5.7-compatible and MySQL 8.0-compatible Aurora)
     * - \`aurora-postgresql\`
     * - \`mysql\`
     * - \`postgres\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-engine
     */
    readonly engine?: string;

    /**
     * The DB engine mode of the DB cluster, either \`provisioned\` , \`serverless\` , \`parallelquery\` , \`global\` , or \`multimaster\` .
     *
     * The \`serverless\` engine mode only applies for Aurora Serverless v1 DB clusters.
     *
     * The \`parallelquery\` engine mode isn't required for Aurora MySQL version 1.23 and higher 1.x versions, and version 2.09 and higher 2.x versions.
     *
     * The \`global\` engine mode isn't required for Aurora MySQL version 1.22 and higher 1.x versions, and \`global\` engine mode isn't required for any 2.x versions.
     *
     * The \`multimaster\` engine mode only applies for DB clusters created with Aurora MySQL version 5.6.10a.
     *
     * For Aurora PostgreSQL, the \`global\` engine mode isn't required, and both the \`parallelquery\` and the \`multimaster\` engine modes currently aren't supported.
     *
     * Limitations and requirements apply to some DB engine modes. For more information, see the following sections in the *Amazon Aurora User Guide* :
     *
     * - [Limitations of Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations)
     * - [Limitations of Parallel Query](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-mysql-parallel-query.html#aurora-mysql-parallel-query-limitations)
     * - [Limitations of Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html#aurora-global-database.limitations)
     * - [Limitations of Multi-Master Clusters](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations)
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-enginemode
     */
    readonly engineMode?: string;

    /**
     * The version number of the database engine to use.
     *
     * To list all of the available engine versions for \`aurora\` (for MySQL 5.6-compatible Aurora), use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"\`
     *
     * To list all of the available engine versions for \`aurora-mysql\` (for MySQL 5.7-compatible Aurora), use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"\`
     *
     * To list all of the available engine versions for \`aurora-postgresql\` , use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-engineversion
     */
    readonly engineVersion?: string;

    /**
     * If you are configuring an Aurora global database cluster and want your Aurora DB cluster to be a secondary member in the global database cluster, specify the global cluster ID of the global database cluster.
     *
     * To define the primary database cluster of the global cluster, use the [AWS::RDS::GlobalCluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html) resource.
     *
     * If you aren't configuring a global database cluster, don't specify this property.
     *
     * > To remove the DB cluster from a global database cluster, specify an empty value for the \`GlobalClusterIdentifier\` property.
     *
     * For information about Aurora global databases, see [Working with Amazon Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-globalclusteridentifier
     */
    readonly globalClusterIdentifier?: string;

    /**
     * The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.
     *
     * For information about valid IOPS values, see [Provisioned IOPS storage](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the *Amazon RDS User Guide* .
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Constraints: Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-iops
     */
    readonly iops?: number;

    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such as \`arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef\` .
     *
     * If you enable the \`StorageEncrypted\` property but don't specify this property, the default KMS key is used. If you specify this property, you must set the \`StorageEncrypted\` property to \`true\` .
     *
     * If you specify the \`SnapshotIdentifier\` property, the \`StorageEncrypted\` property value is inherited from the snapshot, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-kmskeyid
     */
    readonly kmsKeyId?: string;

    /**
     * A value that indicates whether to manage the master user password with AWS Secrets Manager.
     *
     * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
     *
     * Constraints:
     *
     * - Can't manage the master user password with AWS Secrets Manager if \`MasterUserPassword\` is specified.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-managemasteruserpassword
     */
    readonly manageMasterUserPassword?: boolean | cdk.IResolvable;

    /**
     * The name of the master user for the DB cluster.
     *
     * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-masterusername
     */
    readonly masterUsername?: string;

    /**
     * The master password for the DB instance.
     *
     * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-masteruserpassword
     */
    readonly masterUserPassword?: string;

    /**
     * Contains the secret managed by RDS in AWS Secrets Manager for the master user password.
     *
     * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-masterusersecret
     */
    readonly masterUserSecret?: cdk.IResolvable | CfnDBCluster.MasterUserSecretProperty;

    /**
     * The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster.
     *
     * To turn off collecting Enhanced Monitoring metrics, specify 0. The default is 0.
     *
     * If \`MonitoringRoleArn\` is specified, also set \`MonitoringInterval\` to a value other than 0.
     *
     * Valid Values: \`0, 1, 5, 10, 15, 30, 60\`
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @default - 0
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-monitoringinterval
     */
    readonly monitoringInterval?: number;

    /**
     * The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.
     *
     * An example is \`arn:aws:iam:123456789012:role/emaccess\` . For information on creating a monitoring role, see [Setting up and enabling Enhanced Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling) in the *Amazon RDS User Guide* .
     *
     * If \`MonitoringInterval\` is set to a value other than 0, supply a \`MonitoringRoleArn\` value.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-monitoringrolearn
     */
    readonly monitoringRoleArn?: string;

    /**
     * The network type of the DB cluster.
     *
     * Valid values:
     *
     * - \`IPV4\`
     * - \`DUAL\`
     *
     * The network type is determined by the \`DBSubnetGroup\` specified for the DB cluster. A \`DBSubnetGroup\` can support only the IPv4 protocol or the IPv4 and IPv6 protocols ( \`DUAL\` ).
     *
     * For more information, see [Working with a DB instance in a VPC](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the *Amazon Aurora User Guide.*
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-networktype
     */
    readonly networkType?: string;

    /**
     * A value that indicates whether to turn on Performance Insights for the DB cluster.
     *
     * For more information, see [Using Amazon Performance Insights](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the *Amazon RDS User Guide* .
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-performanceinsightsenabled
     */
    readonly performanceInsightsEnabled?: boolean | cdk.IResolvable;

    /**
     * The AWS KMS key identifier for encryption of Performance Insights data.
     *
     * The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
     *
     * If you don't specify a value for \`PerformanceInsightsKMSKeyId\` , then Amazon RDS uses your default KMS key. There is a default KMS key for your AWS account . Your AWS account has a different default KMS key for each AWS Region .
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-performanceinsightskmskeyid
     */
    readonly performanceInsightsKmsKeyId?: string;

    /**
     * The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:.
     *
     * - 7
     * - *month* * 31, where *month* is a number of months from 1-23
     * - 731
     *
     * For example, the following values are valid:
     *
     * - 93 (3 months * 31)
     * - 341 (11 months * 31)
     * - 589 (19 months * 31)
     * - 731
     *
     * If you specify a retention period such as 94, which isn't a valid value, RDS issues an error.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-performanceinsightsretentionperiod
     */
    readonly performanceInsightsRetentionPeriod?: number;

    /**
     * The port number on which the DB instances in the DB cluster accept connections.
     *
     * Default:
     *
     * - When \`EngineMode\` is \`provisioned\` , \`3306\` (for both Aurora MySQL and Aurora PostgreSQL)
     * - When \`EngineMode\` is \`serverless\` :
     *
     * - \`3306\` when \`Engine\` is \`aurora\` or \`aurora-mysql\`
     * - \`5432\` when \`Engine\` is \`aurora-postgresql\`
     *
     * > The \`No interruption\` on update behavior only applies to DB clusters. If you are updating a DB instance, see [Port](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-port) for the AWS::RDS::DBInstance resource.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-port
     */
    readonly port?: number;

    /**
     * The daily time range during which automated backups are created.
     *
     * For more information, see [Backup Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow) in the *Amazon Aurora User Guide.*
     *
     * Constraints:
     *
     * - Must be in the format \`hh24:mi-hh24:mi\` .
     * - Must be in Universal Coordinated Time (UTC).
     * - Must not conflict with the preferred maintenance window.
     * - Must be at least 30 minutes.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-preferredbackupwindow
     */
    readonly preferredBackupWindow?: string;

    /**
     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     *
     * Format: \`ddd:hh24:mi-ddd:hh24:mi\`
     *
     * The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see [Adjusting the Preferred DB Cluster Maintenance Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora) in the *Amazon Aurora User Guide.*
     *
     * Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
     *
     * Constraints: Minimum 30-minute window.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-preferredmaintenancewindow
     */
    readonly preferredMaintenanceWindow?: string;

    /**
     * A value that indicates whether the DB cluster is publicly accessible.
     *
     * When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.
     *
     * When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.
     *
     * Default: The default behavior varies depending on whether \`DBSubnetGroupName\` is specified.
     *
     * If \`DBSubnetGroupName\` isn't specified, and \`PubliclyAccessible\` isn't specified, the following applies:
     *
     * - If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.
     * - If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.
     *
     * If \`DBSubnetGroupName\` is specified, and \`PubliclyAccessible\` isn't specified, the following applies:
     *
     * - If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.
     * - If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-publiclyaccessible
     */
    readonly publiclyAccessible?: boolean | cdk.IResolvable;

    /**
     * The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-replicationsourceidentifier
     */
    readonly replicationSourceIdentifier?: string;

    /**
     * The date and time to restore the DB cluster to.
     *
     * Valid Values: Value must be a time in Universal Coordinated Time (UTC) format
     *
     * Constraints:
     *
     * - Must be before the latest restorable time for the DB instance
     * - Must be specified if \`UseLatestRestorableTime\` parameter isn't provided
     * - Can't be specified if the \`UseLatestRestorableTime\` parameter is enabled
     * - Can't be specified if the \`RestoreType\` parameter is \`copy-on-write\`
     *
     * Example: \`2015-03-07T23:45:00Z\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-restoretotime
     */
    readonly restoreToTime?: string;

    /**
     * The type of restore to be performed. You can specify one of the following values:.
     *
     * - \`full-copy\` - The new DB cluster is restored as a full copy of the source DB cluster.
     * - \`copy-on-write\` - The new DB cluster is restored as a clone of the source DB cluster.
     *
     * Constraints: You can't specify \`copy-on-write\` if the engine version of the source DB cluster is earlier than 1.11.
     *
     * If you don't specify a \`RestoreType\` value, then the new DB cluster is restored as a full copy of the source DB cluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - "full-copy"
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-restoretype
     */
    readonly restoreType?: string;

    /**
     * The \`ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless DB cluster.
     *
     * This property is only supported for Aurora Serverless v1. For Aurora Serverless v2, use \`ServerlessV2ScalingConfiguration\` property.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-scalingconfiguration
     */
    readonly scalingConfiguration?: cdk.IResolvable | CfnDBCluster.ScalingConfigurationProperty;

    /**
     * The \`ServerlessV2ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless V2 DB cluster.
     *
     * This property is only supported for Aurora Serverless v2. For Aurora Serverless v1, use \`ScalingConfiguration\` property.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-serverlessv2scalingconfiguration
     */
    readonly serverlessV2ScalingConfiguration?: cdk.IResolvable | CfnDBCluster.ServerlessV2ScalingConfigurationProperty;

    /**
     * The identifier for the DB snapshot or DB cluster snapshot to restore from.
     *
     * You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.
     *
     * After you restore a DB cluster with a \`SnapshotIdentifier\` property, you must specify the same \`SnapshotIdentifier\` property for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the data in the database is not changed. However, if you don't specify the \`SnapshotIdentifier\` property, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, a new DB cluster is restored from the specified \`SnapshotIdentifier\` property, and the original DB cluster is deleted.
     *
     * If you specify the \`SnapshotIdentifier\` property to restore a DB cluster (as opposed to specifying it for DB cluster updates), then don't specify the following properties:
     *
     * - \`GlobalClusterIdentifier\`
     * - \`MasterUsername\`
     * - \`MasterUserPassword\`
     * - \`ReplicationSourceIdentifier\`
     * - \`RestoreType\`
     * - \`SourceDBClusterIdentifier\`
     * - \`SourceRegion\`
     * - \`StorageEncrypted\` (for an encrypted snapshot)
     * - \`UseLatestRestorableTime\`
     *
     * Constraints:
     *
     * - Must match the identifier of an existing Snapshot.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-snapshotidentifier
     */
    readonly snapshotIdentifier?: string;

    /**
     * When restoring a DB cluster to a point in time, the identifier of the source DB cluster from which to restore.
     *
     * Constraints:
     *
     * - Must match the identifier of an existing DBCluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-sourcedbclusteridentifier
     */
    readonly sourceDbClusterIdentifier?: string;

    /**
     * The AWS Region which contains the source DB cluster when replicating a DB cluster. For example, \`us-east-1\` .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-sourceregion
     */
    readonly sourceRegion?: string;

    /**
     * Indicates whether the DB cluster is encrypted.
     *
     * If you specify the \`KmsKeyId\` property, then you must enable encryption.
     *
     * If you specify the \`SourceDBClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
     *
     * If you specify the \`SnapshotIdentifier\` and the specified snapshot is encrypted, don't specify this property. The value is inherited from the snapshot, and the specified \`KmsKeyId\` property is used.
     *
     * If you specify the \`SnapshotIdentifier\` and the specified snapshot isn't encrypted, you can use this property to specify that the restored DB cluster is encrypted. Specify the \`KmsKeyId\` property for the KMS key to use for encryption. If you don't want the restored DB cluster to be encrypted, then don't set this property or set it to \`false\` .
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-storageencrypted
     */
    readonly storageEncrypted?: boolean | cdk.IResolvable;

    /**
     * Specifies the storage type to be associated with the DB cluster.
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid values: \`io1\`
     *
     * When specified, a value for the \`Iops\` parameter is required.
     *
     * Default: \`io1\`
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-storagetype
     */
    readonly storageType?: string;

    /**
     * An optional array of key-value pairs to apply to this DB cluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnDBCluster.TagProperty> | cdk.IResolvable;

    /**
     * A value that indicates whether to restore the DB cluster to the latest restorable backup time.
     *
     * By default, the DB cluster is not restored to the latest restorable backup time.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-uselatestrestorabletime
     */
    readonly useLatestRestorableTime?: boolean | cdk.IResolvable;

    /**
     * A list of EC2 VPC security groups to associate with this DB cluster.
     *
     * If you plan to update the resource, don't specify VPC security groups in a shared VPC.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-dbclusterrole.html#cfn-rds-dbcluster-dbclusterrole-vpcsecuritygroupids
     */
    readonly vpcSecurityGroupIds?: Array<string>;
  }

  /**
   * The \`MasterUserSecret\` return value specifies the secret managed by RDS in AWS Secrets Manager for the master user password.
   *
   * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html
   */
  export interface MasterUserSecretProperty {
    /**
     * The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-allocatedstorage
     */
    readonly allocatedStorage?: number;

    /**
     * Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster.
     *
     * IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other Amazon Web Services on your behalf.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-associatedroles
     */
    readonly associatedRoles?: Array<CfnDBCluster.DBClusterRoleProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * A value that indicates whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window.
     *
     * By default, minor engine upgrades are applied automatically.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-autominorversionupgrade
     */
    readonly autoMinorVersionUpgrade?: boolean | cdk.IResolvable;

    /**
     * A list of Availability Zones (AZs) where instances in the DB cluster can be created.
     *
     * For information on AWS Regions and Availability Zones, see [Choosing the Regions and Availability Zones](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-availabilityzones
     */
    readonly availabilityZones?: Array<string>;

    /**
     * The target backtrack window, in seconds. To disable backtracking, set this value to 0.
     *
     * > Currently, Backtrack is only supported for Aurora MySQL DB clusters.
     *
     * Default: 0
     *
     * Constraints:
     *
     * - If specified, this value must be set to a number from 0 to 259,200 (72 hours).
     *
     * Valid for: Aurora MySQL DB clusters only
     *
     * @default - 0
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-backtrackwindow
     */
    readonly backtrackWindow?: number;

    /**
     * The number of days for which automated backups are retained.
     *
     * Default: 1
     *
     * Constraints:
     *
     * - Must be a value from 1 to 35
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - 1
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-backupretentionperiod
     */
    readonly backupRetentionPeriod?: number;

    /**
     * A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster.
     *
     * The default is not to copy them.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-copytagstosnapshot
     */
    readonly copyTagsToSnapshot?: boolean | cdk.IResolvable;

    /**
     * The name of your database.
     *
     * If you don't provide a name, then Amazon RDS won't create a database in this DB cluster. For naming constraints, see [Naming Constraints](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-databasename
     */
    readonly databaseName?: string;

    /**
     * The DB cluster identifier. This parameter is stored as a lowercase string.
     *
     * Constraints:
     *
     * - Must contain from 1 to 63 letters, numbers, or hyphens.
     * - First character must be a letter.
     * - Can't end with a hyphen or contain two consecutive hyphens.
     *
     * Example: \`my-cluster1\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-dbclusteridentifier
     */
    readonly dbClusterIdentifier?: string;

    /**
     * The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all AWS Regions , or for all database engines.
     *
     * For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the *Amazon RDS User Guide* .
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-dbclusterinstanceclass
     */
    readonly dbClusterInstanceClass?: string;

    /**
     * The name of the DB cluster parameter group to associate with this DB cluster.
     *
     * > If you apply a parameter group to an existing DB cluster, then its DB instances might need to reboot. This can result in an outage while the DB instances are rebooting.
     * >
     * > If you apply a change to parameter group associated with a stopped DB cluster, then the update stack waits until the DB cluster is started.
     *
     * To list all of the available DB cluster parameter group names, use the following command:
     *
     * \`aws rds describe-db-cluster-parameter-groups --query "DBClusterParameterGroups[].DBClusterParameterGroupName" --output text\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - "default.aurora5.6"
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-dbclusterparametergroupname
     */
    readonly dbClusterParameterGroupName?: string;

    /**
     * The name of the DB parameter group to apply to all instances of the DB cluster.
     *
     * > When you apply a parameter group using the \`DBInstanceParameterGroupName\` parameter, the DB cluster isn't rebooted automatically. Also, parameter changes are applied immediately rather than during the next maintenance window.
     *
     * Default: The existing name setting
     *
     * Constraints:
     *
     * - The DB parameter group must be in the same DB parameter group family as this DB cluster.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-dbinstanceparametergroupname
     */
    readonly dbInstanceParameterGroupName?: string;

    /**
     * A DB subnet group that you want to associate with this DB cluster.
     *
     * If you are restoring a DB cluster to a point in time with \`RestoreType\` set to \`copy-on-write\` , and don't specify a DB subnet group name, then the DB cluster is restored with a default DB subnet group.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-dbsubnetgroupname
     */
    readonly dbSubnetGroupName?: string;

    /**
     * Reserved for future use.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-dbsystemid
     */
    readonly dbSystemId?: string;

    /**
     * A value that indicates whether the DB cluster has deletion protection enabled.
     *
     * The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-deletionprotection
     */
    readonly deletionProtection?: boolean | cdk.IResolvable;

    /**
     * Indicates the directory ID of the Active Directory to create the DB cluster.
     *
     * For Amazon Aurora DB clusters, Amazon RDS can use Kerberos authentication to authenticate users that connect to the DB cluster.
     *
     * For more information, see [Kerberos authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-domain
     */
    readonly domain?: string;

    /**
     * Specifies the name of the IAM role to use when making API calls to the Directory Service.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-domainiamrolename
     */
    readonly domainIamRoleName?: string;

    /**
     * The list of log types that need to be enabled for exporting to CloudWatch Logs.
     *
     * The values in the list depend on the DB engine being used. For more information, see [Publishing Database Logs to Amazon CloudWatch Logs](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the *Amazon Aurora User Guide* .
     *
     * *Aurora MySQL*
     *
     * Valid values: \`audit\` , \`error\` , \`general\` , \`slowquery\`
     *
     * *Aurora PostgreSQL*
     *
     * Valid values: \`postgresql\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-enablecloudwatchlogsexports
     */
    readonly enableCloudwatchLogsExports?: Array<string>;

    /**
     * A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster.
     *
     * By default, the HTTP endpoint is disabled.
     *
     * When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
     *
     * For more information, see [Using the Data API for Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-enablehttpendpoint
     */
    readonly enableHttpEndpoint?: boolean | cdk.IResolvable;

    /**
     * A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts.
     *
     * By default, mapping is disabled.
     *
     * For more information, see [IAM Database Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) in the *Amazon Aurora User Guide.*
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-enableiamdatabaseauthentication
     */
    readonly enableIamDatabaseAuthentication?: boolean | cdk.IResolvable;

    /**
     * The name of the database engine to be used for this DB cluster.
     *
     * Valid Values:
     *
     * - \`aurora\` (for MySQL 5.6-compatible Aurora)
     * - \`aurora-mysql\` (for MySQL 5.7-compatible and MySQL 8.0-compatible Aurora)
     * - \`aurora-postgresql\`
     * - \`mysql\`
     * - \`postgres\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-engine
     */
    readonly engine?: string;

    /**
     * The DB engine mode of the DB cluster, either \`provisioned\` , \`serverless\` , \`parallelquery\` , \`global\` , or \`multimaster\` .
     *
     * The \`serverless\` engine mode only applies for Aurora Serverless v1 DB clusters.
     *
     * The \`parallelquery\` engine mode isn't required for Aurora MySQL version 1.23 and higher 1.x versions, and version 2.09 and higher 2.x versions.
     *
     * The \`global\` engine mode isn't required for Aurora MySQL version 1.22 and higher 1.x versions, and \`global\` engine mode isn't required for any 2.x versions.
     *
     * The \`multimaster\` engine mode only applies for DB clusters created with Aurora MySQL version 5.6.10a.
     *
     * For Aurora PostgreSQL, the \`global\` engine mode isn't required, and both the \`parallelquery\` and the \`multimaster\` engine modes currently aren't supported.
     *
     * Limitations and requirements apply to some DB engine modes. For more information, see the following sections in the *Amazon Aurora User Guide* :
     *
     * - [Limitations of Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations)
     * - [Limitations of Parallel Query](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-mysql-parallel-query.html#aurora-mysql-parallel-query-limitations)
     * - [Limitations of Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html#aurora-global-database.limitations)
     * - [Limitations of Multi-Master Clusters](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations)
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-enginemode
     */
    readonly engineMode?: string;

    /**
     * The version number of the database engine to use.
     *
     * To list all of the available engine versions for \`aurora\` (for MySQL 5.6-compatible Aurora), use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"\`
     *
     * To list all of the available engine versions for \`aurora-mysql\` (for MySQL 5.7-compatible Aurora), use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"\`
     *
     * To list all of the available engine versions for \`aurora-postgresql\` , use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-engineversion
     */
    readonly engineVersion?: string;

    /**
     * If you are configuring an Aurora global database cluster and want your Aurora DB cluster to be a secondary member in the global database cluster, specify the global cluster ID of the global database cluster.
     *
     * To define the primary database cluster of the global cluster, use the [AWS::RDS::GlobalCluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html) resource.
     *
     * If you aren't configuring a global database cluster, don't specify this property.
     *
     * > To remove the DB cluster from a global database cluster, specify an empty value for the \`GlobalClusterIdentifier\` property.
     *
     * For information about Aurora global databases, see [Working with Amazon Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-globalclusteridentifier
     */
    readonly globalClusterIdentifier?: string;

    /**
     * The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.
     *
     * For information about valid IOPS values, see [Provisioned IOPS storage](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the *Amazon RDS User Guide* .
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Constraints: Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-iops
     */
    readonly iops?: number;

    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such as \`arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef\` .
     *
     * If you enable the \`StorageEncrypted\` property but don't specify this property, the default KMS key is used. If you specify this property, you must set the \`StorageEncrypted\` property to \`true\` .
     *
     * If you specify the \`SnapshotIdentifier\` property, the \`StorageEncrypted\` property value is inherited from the snapshot, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-kmskeyid
     */
    readonly kmsKeyId?: string;

    /**
     * A value that indicates whether to manage the master user password with AWS Secrets Manager.
     *
     * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
     *
     * Constraints:
     *
     * - Can't manage the master user password with AWS Secrets Manager if \`MasterUserPassword\` is specified.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-managemasteruserpassword
     */
    readonly manageMasterUserPassword?: boolean | cdk.IResolvable;

    /**
     * The name of the master user for the DB cluster.
     *
     * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-masterusername
     */
    readonly masterUsername?: string;

    /**
     * The master password for the DB instance.
     *
     * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-masteruserpassword
     */
    readonly masterUserPassword?: string;

    /**
     * Contains the secret managed by RDS in AWS Secrets Manager for the master user password.
     *
     * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-masterusersecret
     */
    readonly masterUserSecret?: cdk.IResolvable | CfnDBCluster.MasterUserSecretProperty;

    /**
     * The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster.
     *
     * To turn off collecting Enhanced Monitoring metrics, specify 0. The default is 0.
     *
     * If \`MonitoringRoleArn\` is specified, also set \`MonitoringInterval\` to a value other than 0.
     *
     * Valid Values: \`0, 1, 5, 10, 15, 30, 60\`
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @default - 0
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-monitoringinterval
     */
    readonly monitoringInterval?: number;

    /**
     * The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.
     *
     * An example is \`arn:aws:iam:123456789012:role/emaccess\` . For information on creating a monitoring role, see [Setting up and enabling Enhanced Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling) in the *Amazon RDS User Guide* .
     *
     * If \`MonitoringInterval\` is set to a value other than 0, supply a \`MonitoringRoleArn\` value.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-monitoringrolearn
     */
    readonly monitoringRoleArn?: string;

    /**
     * The network type of the DB cluster.
     *
     * Valid values:
     *
     * - \`IPV4\`
     * - \`DUAL\`
     *
     * The network type is determined by the \`DBSubnetGroup\` specified for the DB cluster. A \`DBSubnetGroup\` can support only the IPv4 protocol or the IPv4 and IPv6 protocols ( \`DUAL\` ).
     *
     * For more information, see [Working with a DB instance in a VPC](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the *Amazon Aurora User Guide.*
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-networktype
     */
    readonly networkType?: string;

    /**
     * A value that indicates whether to turn on Performance Insights for the DB cluster.
     *
     * For more information, see [Using Amazon Performance Insights](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the *Amazon RDS User Guide* .
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-performanceinsightsenabled
     */
    readonly performanceInsightsEnabled?: boolean | cdk.IResolvable;

    /**
     * The AWS KMS key identifier for encryption of Performance Insights data.
     *
     * The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
     *
     * If you don't specify a value for \`PerformanceInsightsKMSKeyId\` , then Amazon RDS uses your default KMS key. There is a default KMS key for your AWS account . Your AWS account has a different default KMS key for each AWS Region .
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-performanceinsightskmskeyid
     */
    readonly performanceInsightsKmsKeyId?: string;

    /**
     * The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:.
     *
     * - 7
     * - *month* * 31, where *month* is a number of months from 1-23
     * - 731
     *
     * For example, the following values are valid:
     *
     * - 93 (3 months * 31)
     * - 341 (11 months * 31)
     * - 589 (19 months * 31)
     * - 731
     *
     * If you specify a retention period such as 94, which isn't a valid value, RDS issues an error.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-performanceinsightsretentionperiod
     */
    readonly performanceInsightsRetentionPeriod?: number;

    /**
     * The port number on which the DB instances in the DB cluster accept connections.
     *
     * Default:
     *
     * - When \`EngineMode\` is \`provisioned\` , \`3306\` (for both Aurora MySQL and Aurora PostgreSQL)
     * - When \`EngineMode\` is \`serverless\` :
     *
     * - \`3306\` when \`Engine\` is \`aurora\` or \`aurora-mysql\`
     * - \`5432\` when \`Engine\` is \`aurora-postgresql\`
     *
     * > The \`No interruption\` on update behavior only applies to DB clusters. If you are updating a DB instance, see [Port](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-port) for the AWS::RDS::DBInstance resource.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-port
     */
    readonly port?: number;

    /**
     * The daily time range during which automated backups are created.
     *
     * For more information, see [Backup Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow) in the *Amazon Aurora User Guide.*
     *
     * Constraints:
     *
     * - Must be in the format \`hh24:mi-hh24:mi\` .
     * - Must be in Universal Coordinated Time (UTC).
     * - Must not conflict with the preferred maintenance window.
     * - Must be at least 30 minutes.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-preferredbackupwindow
     */
    readonly preferredBackupWindow?: string;

    /**
     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     *
     * Format: \`ddd:hh24:mi-ddd:hh24:mi\`
     *
     * The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see [Adjusting the Preferred DB Cluster Maintenance Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora) in the *Amazon Aurora User Guide.*
     *
     * Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
     *
     * Constraints: Minimum 30-minute window.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-preferredmaintenancewindow
     */
    readonly preferredMaintenanceWindow?: string;

    /**
     * A value that indicates whether the DB cluster is publicly accessible.
     *
     * When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.
     *
     * When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.
     *
     * Default: The default behavior varies depending on whether \`DBSubnetGroupName\` is specified.
     *
     * If \`DBSubnetGroupName\` isn't specified, and \`PubliclyAccessible\` isn't specified, the following applies:
     *
     * - If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.
     * - If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.
     *
     * If \`DBSubnetGroupName\` is specified, and \`PubliclyAccessible\` isn't specified, the following applies:
     *
     * - If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.
     * - If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-publiclyaccessible
     */
    readonly publiclyAccessible?: boolean | cdk.IResolvable;

    /**
     * The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-replicationsourceidentifier
     */
    readonly replicationSourceIdentifier?: string;

    /**
     * The date and time to restore the DB cluster to.
     *
     * Valid Values: Value must be a time in Universal Coordinated Time (UTC) format
     *
     * Constraints:
     *
     * - Must be before the latest restorable time for the DB instance
     * - Must be specified if \`UseLatestRestorableTime\` parameter isn't provided
     * - Can't be specified if the \`UseLatestRestorableTime\` parameter is enabled
     * - Can't be specified if the \`RestoreType\` parameter is \`copy-on-write\`
     *
     * Example: \`2015-03-07T23:45:00Z\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-restoretotime
     */
    readonly restoreToTime?: string;

    /**
     * The type of restore to be performed. You can specify one of the following values:.
     *
     * - \`full-copy\` - The new DB cluster is restored as a full copy of the source DB cluster.
     * - \`copy-on-write\` - The new DB cluster is restored as a clone of the source DB cluster.
     *
     * Constraints: You can't specify \`copy-on-write\` if the engine version of the source DB cluster is earlier than 1.11.
     *
     * If you don't specify a \`RestoreType\` value, then the new DB cluster is restored as a full copy of the source DB cluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - "full-copy"
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-restoretype
     */
    readonly restoreType?: string;

    /**
     * The \`ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless DB cluster.
     *
     * This property is only supported for Aurora Serverless v1. For Aurora Serverless v2, use \`ServerlessV2ScalingConfiguration\` property.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-scalingconfiguration
     */
    readonly scalingConfiguration?: cdk.IResolvable | CfnDBCluster.ScalingConfigurationProperty;

    /**
     * The \`ServerlessV2ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless V2 DB cluster.
     *
     * This property is only supported for Aurora Serverless v2. For Aurora Serverless v1, use \`ScalingConfiguration\` property.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-serverlessv2scalingconfiguration
     */
    readonly serverlessV2ScalingConfiguration?: cdk.IResolvable | CfnDBCluster.ServerlessV2ScalingConfigurationProperty;

    /**
     * The identifier for the DB snapshot or DB cluster snapshot to restore from.
     *
     * You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.
     *
     * After you restore a DB cluster with a \`SnapshotIdentifier\` property, you must specify the same \`SnapshotIdentifier\` property for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the data in the database is not changed. However, if you don't specify the \`SnapshotIdentifier\` property, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, a new DB cluster is restored from the specified \`SnapshotIdentifier\` property, and the original DB cluster is deleted.
     *
     * If you specify the \`SnapshotIdentifier\` property to restore a DB cluster (as opposed to specifying it for DB cluster updates), then don't specify the following properties:
     *
     * - \`GlobalClusterIdentifier\`
     * - \`MasterUsername\`
     * - \`MasterUserPassword\`
     * - \`ReplicationSourceIdentifier\`
     * - \`RestoreType\`
     * - \`SourceDBClusterIdentifier\`
     * - \`SourceRegion\`
     * - \`StorageEncrypted\` (for an encrypted snapshot)
     * - \`UseLatestRestorableTime\`
     *
     * Constraints:
     *
     * - Must match the identifier of an existing Snapshot.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-snapshotidentifier
     */
    readonly snapshotIdentifier?: string;

    /**
     * When restoring a DB cluster to a point in time, the identifier of the source DB cluster from which to restore.
     *
     * Constraints:
     *
     * - Must match the identifier of an existing DBCluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-sourcedbclusteridentifier
     */
    readonly sourceDbClusterIdentifier?: string;

    /**
     * The AWS Region which contains the source DB cluster when replicating a DB cluster. For example, \`us-east-1\` .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-sourceregion
     */
    readonly sourceRegion?: string;

    /**
     * Indicates whether the DB cluster is encrypted.
     *
     * If you specify the \`KmsKeyId\` property, then you must enable encryption.
     *
     * If you specify the \`SourceDBClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
     *
     * If you specify the \`SnapshotIdentifier\` and the specified snapshot is encrypted, don't specify this property. The value is inherited from the snapshot, and the specified \`KmsKeyId\` property is used.
     *
     * If you specify the \`SnapshotIdentifier\` and the specified snapshot isn't encrypted, you can use this property to specify that the restored DB cluster is encrypted. Specify the \`KmsKeyId\` property for the KMS key to use for encryption. If you don't want the restored DB cluster to be encrypted, then don't set this property or set it to \`false\` .
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-storageencrypted
     */
    readonly storageEncrypted?: boolean | cdk.IResolvable;

    /**
     * Specifies the storage type to be associated with the DB cluster.
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid values: \`io1\`
     *
     * When specified, a value for the \`Iops\` parameter is required.
     *
     * Default: \`io1\`
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-storagetype
     */
    readonly storageType?: string;

    /**
     * An optional array of key-value pairs to apply to this DB cluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnDBCluster.TagProperty> | cdk.IResolvable;

    /**
     * A value that indicates whether to restore the DB cluster to the latest restorable backup time.
     *
     * By default, the DB cluster is not restored to the latest restorable backup time.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-uselatestrestorabletime
     */
    readonly useLatestRestorableTime?: boolean | cdk.IResolvable;

    /**
     * A list of EC2 VPC security groups to associate with this DB cluster.
     *
     * If you plan to update the resource, don't specify VPC security groups in a shared VPC.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html#cfn-rds-dbcluster-masterusersecret-vpcsecuritygroupids
     */
    readonly vpcSecurityGroupIds?: Array<string>;
  }

  /**
   * The \`ServerlessV2ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless V2 DB cluster.
   *
   * For more information, see [Using Amazon Aurora Serverless v2](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html) in the *Amazon Aurora User Guide* .
   *
   * If you have an Aurora cluster, you must set the \`ScalingConfigurationInfo\` attribute before you add a DB instance that uses the \`db.serverless\` DB instance class. For more information, see [Clusters that use Aurora Serverless v2 must have a capacity range specified](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.requirements.html#aurora-serverless-v2.requirements.capacity-range) in the *Amazon Aurora User Guide* .
   *
   * This property is only supported for Aurora Serverless v2. For Aurora Serverless v1, use \`ScalingConfiguration\` property.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html
   */
  export interface ServerlessV2ScalingConfigurationProperty {
    /**
     * The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-allocatedstorage
     */
    readonly allocatedStorage?: number;

    /**
     * Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster.
     *
     * IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other Amazon Web Services on your behalf.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-associatedroles
     */
    readonly associatedRoles?: Array<CfnDBCluster.DBClusterRoleProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * A value that indicates whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window.
     *
     * By default, minor engine upgrades are applied automatically.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-autominorversionupgrade
     */
    readonly autoMinorVersionUpgrade?: boolean | cdk.IResolvable;

    /**
     * A list of Availability Zones (AZs) where instances in the DB cluster can be created.
     *
     * For information on AWS Regions and Availability Zones, see [Choosing the Regions and Availability Zones](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-availabilityzones
     */
    readonly availabilityZones?: Array<string>;

    /**
     * The target backtrack window, in seconds. To disable backtracking, set this value to 0.
     *
     * > Currently, Backtrack is only supported for Aurora MySQL DB clusters.
     *
     * Default: 0
     *
     * Constraints:
     *
     * - If specified, this value must be set to a number from 0 to 259,200 (72 hours).
     *
     * Valid for: Aurora MySQL DB clusters only
     *
     * @default - 0
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-backtrackwindow
     */
    readonly backtrackWindow?: number;

    /**
     * The number of days for which automated backups are retained.
     *
     * Default: 1
     *
     * Constraints:
     *
     * - Must be a value from 1 to 35
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - 1
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-backupretentionperiod
     */
    readonly backupRetentionPeriod?: number;

    /**
     * A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster.
     *
     * The default is not to copy them.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-copytagstosnapshot
     */
    readonly copyTagsToSnapshot?: boolean | cdk.IResolvable;

    /**
     * The name of your database.
     *
     * If you don't provide a name, then Amazon RDS won't create a database in this DB cluster. For naming constraints, see [Naming Constraints](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-databasename
     */
    readonly databaseName?: string;

    /**
     * The DB cluster identifier. This parameter is stored as a lowercase string.
     *
     * Constraints:
     *
     * - Must contain from 1 to 63 letters, numbers, or hyphens.
     * - First character must be a letter.
     * - Can't end with a hyphen or contain two consecutive hyphens.
     *
     * Example: \`my-cluster1\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-dbclusteridentifier
     */
    readonly dbClusterIdentifier?: string;

    /**
     * The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all AWS Regions , or for all database engines.
     *
     * For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the *Amazon RDS User Guide* .
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-dbclusterinstanceclass
     */
    readonly dbClusterInstanceClass?: string;

    /**
     * The name of the DB cluster parameter group to associate with this DB cluster.
     *
     * > If you apply a parameter group to an existing DB cluster, then its DB instances might need to reboot. This can result in an outage while the DB instances are rebooting.
     * >
     * > If you apply a change to parameter group associated with a stopped DB cluster, then the update stack waits until the DB cluster is started.
     *
     * To list all of the available DB cluster parameter group names, use the following command:
     *
     * \`aws rds describe-db-cluster-parameter-groups --query "DBClusterParameterGroups[].DBClusterParameterGroupName" --output text\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - "default.aurora5.6"
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-dbclusterparametergroupname
     */
    readonly dbClusterParameterGroupName?: string;

    /**
     * The name of the DB parameter group to apply to all instances of the DB cluster.
     *
     * > When you apply a parameter group using the \`DBInstanceParameterGroupName\` parameter, the DB cluster isn't rebooted automatically. Also, parameter changes are applied immediately rather than during the next maintenance window.
     *
     * Default: The existing name setting
     *
     * Constraints:
     *
     * - The DB parameter group must be in the same DB parameter group family as this DB cluster.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-dbinstanceparametergroupname
     */
    readonly dbInstanceParameterGroupName?: string;

    /**
     * A DB subnet group that you want to associate with this DB cluster.
     *
     * If you are restoring a DB cluster to a point in time with \`RestoreType\` set to \`copy-on-write\` , and don't specify a DB subnet group name, then the DB cluster is restored with a default DB subnet group.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-dbsubnetgroupname
     */
    readonly dbSubnetGroupName?: string;

    /**
     * Reserved for future use.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-dbsystemid
     */
    readonly dbSystemId?: string;

    /**
     * A value that indicates whether the DB cluster has deletion protection enabled.
     *
     * The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-deletionprotection
     */
    readonly deletionProtection?: boolean | cdk.IResolvable;

    /**
     * Indicates the directory ID of the Active Directory to create the DB cluster.
     *
     * For Amazon Aurora DB clusters, Amazon RDS can use Kerberos authentication to authenticate users that connect to the DB cluster.
     *
     * For more information, see [Kerberos authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-domain
     */
    readonly domain?: string;

    /**
     * Specifies the name of the IAM role to use when making API calls to the Directory Service.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-domainiamrolename
     */
    readonly domainIamRoleName?: string;

    /**
     * The list of log types that need to be enabled for exporting to CloudWatch Logs.
     *
     * The values in the list depend on the DB engine being used. For more information, see [Publishing Database Logs to Amazon CloudWatch Logs](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the *Amazon Aurora User Guide* .
     *
     * *Aurora MySQL*
     *
     * Valid values: \`audit\` , \`error\` , \`general\` , \`slowquery\`
     *
     * *Aurora PostgreSQL*
     *
     * Valid values: \`postgresql\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-enablecloudwatchlogsexports
     */
    readonly enableCloudwatchLogsExports?: Array<string>;

    /**
     * A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster.
     *
     * By default, the HTTP endpoint is disabled.
     *
     * When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
     *
     * For more information, see [Using the Data API for Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-enablehttpendpoint
     */
    readonly enableHttpEndpoint?: boolean | cdk.IResolvable;

    /**
     * A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts.
     *
     * By default, mapping is disabled.
     *
     * For more information, see [IAM Database Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) in the *Amazon Aurora User Guide.*
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-enableiamdatabaseauthentication
     */
    readonly enableIamDatabaseAuthentication?: boolean | cdk.IResolvable;

    /**
     * The name of the database engine to be used for this DB cluster.
     *
     * Valid Values:
     *
     * - \`aurora\` (for MySQL 5.6-compatible Aurora)
     * - \`aurora-mysql\` (for MySQL 5.7-compatible and MySQL 8.0-compatible Aurora)
     * - \`aurora-postgresql\`
     * - \`mysql\`
     * - \`postgres\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-engine
     */
    readonly engine?: string;

    /**
     * The DB engine mode of the DB cluster, either \`provisioned\` , \`serverless\` , \`parallelquery\` , \`global\` , or \`multimaster\` .
     *
     * The \`serverless\` engine mode only applies for Aurora Serverless v1 DB clusters.
     *
     * The \`parallelquery\` engine mode isn't required for Aurora MySQL version 1.23 and higher 1.x versions, and version 2.09 and higher 2.x versions.
     *
     * The \`global\` engine mode isn't required for Aurora MySQL version 1.22 and higher 1.x versions, and \`global\` engine mode isn't required for any 2.x versions.
     *
     * The \`multimaster\` engine mode only applies for DB clusters created with Aurora MySQL version 5.6.10a.
     *
     * For Aurora PostgreSQL, the \`global\` engine mode isn't required, and both the \`parallelquery\` and the \`multimaster\` engine modes currently aren't supported.
     *
     * Limitations and requirements apply to some DB engine modes. For more information, see the following sections in the *Amazon Aurora User Guide* :
     *
     * - [Limitations of Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations)
     * - [Limitations of Parallel Query](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-mysql-parallel-query.html#aurora-mysql-parallel-query-limitations)
     * - [Limitations of Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html#aurora-global-database.limitations)
     * - [Limitations of Multi-Master Clusters](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations)
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-enginemode
     */
    readonly engineMode?: string;

    /**
     * The version number of the database engine to use.
     *
     * To list all of the available engine versions for \`aurora\` (for MySQL 5.6-compatible Aurora), use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"\`
     *
     * To list all of the available engine versions for \`aurora-mysql\` (for MySQL 5.7-compatible Aurora), use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"\`
     *
     * To list all of the available engine versions for \`aurora-postgresql\` , use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-engineversion
     */
    readonly engineVersion?: string;

    /**
     * If you are configuring an Aurora global database cluster and want your Aurora DB cluster to be a secondary member in the global database cluster, specify the global cluster ID of the global database cluster.
     *
     * To define the primary database cluster of the global cluster, use the [AWS::RDS::GlobalCluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html) resource.
     *
     * If you aren't configuring a global database cluster, don't specify this property.
     *
     * > To remove the DB cluster from a global database cluster, specify an empty value for the \`GlobalClusterIdentifier\` property.
     *
     * For information about Aurora global databases, see [Working with Amazon Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-globalclusteridentifier
     */
    readonly globalClusterIdentifier?: string;

    /**
     * The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.
     *
     * For information about valid IOPS values, see [Provisioned IOPS storage](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the *Amazon RDS User Guide* .
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Constraints: Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-iops
     */
    readonly iops?: number;

    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such as \`arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef\` .
     *
     * If you enable the \`StorageEncrypted\` property but don't specify this property, the default KMS key is used. If you specify this property, you must set the \`StorageEncrypted\` property to \`true\` .
     *
     * If you specify the \`SnapshotIdentifier\` property, the \`StorageEncrypted\` property value is inherited from the snapshot, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-kmskeyid
     */
    readonly kmsKeyId?: string;

    /**
     * A value that indicates whether to manage the master user password with AWS Secrets Manager.
     *
     * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
     *
     * Constraints:
     *
     * - Can't manage the master user password with AWS Secrets Manager if \`MasterUserPassword\` is specified.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-managemasteruserpassword
     */
    readonly manageMasterUserPassword?: boolean | cdk.IResolvable;

    /**
     * The name of the master user for the DB cluster.
     *
     * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-masterusername
     */
    readonly masterUsername?: string;

    /**
     * The master password for the DB instance.
     *
     * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-masteruserpassword
     */
    readonly masterUserPassword?: string;

    /**
     * Contains the secret managed by RDS in AWS Secrets Manager for the master user password.
     *
     * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-masterusersecret
     */
    readonly masterUserSecret?: cdk.IResolvable | CfnDBCluster.MasterUserSecretProperty;

    /**
     * The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster.
     *
     * To turn off collecting Enhanced Monitoring metrics, specify 0. The default is 0.
     *
     * If \`MonitoringRoleArn\` is specified, also set \`MonitoringInterval\` to a value other than 0.
     *
     * Valid Values: \`0, 1, 5, 10, 15, 30, 60\`
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @default - 0
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-monitoringinterval
     */
    readonly monitoringInterval?: number;

    /**
     * The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.
     *
     * An example is \`arn:aws:iam:123456789012:role/emaccess\` . For information on creating a monitoring role, see [Setting up and enabling Enhanced Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling) in the *Amazon RDS User Guide* .
     *
     * If \`MonitoringInterval\` is set to a value other than 0, supply a \`MonitoringRoleArn\` value.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-monitoringrolearn
     */
    readonly monitoringRoleArn?: string;

    /**
     * The network type of the DB cluster.
     *
     * Valid values:
     *
     * - \`IPV4\`
     * - \`DUAL\`
     *
     * The network type is determined by the \`DBSubnetGroup\` specified for the DB cluster. A \`DBSubnetGroup\` can support only the IPv4 protocol or the IPv4 and IPv6 protocols ( \`DUAL\` ).
     *
     * For more information, see [Working with a DB instance in a VPC](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the *Amazon Aurora User Guide.*
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-networktype
     */
    readonly networkType?: string;

    /**
     * A value that indicates whether to turn on Performance Insights for the DB cluster.
     *
     * For more information, see [Using Amazon Performance Insights](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the *Amazon RDS User Guide* .
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-performanceinsightsenabled
     */
    readonly performanceInsightsEnabled?: boolean | cdk.IResolvable;

    /**
     * The AWS KMS key identifier for encryption of Performance Insights data.
     *
     * The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
     *
     * If you don't specify a value for \`PerformanceInsightsKMSKeyId\` , then Amazon RDS uses your default KMS key. There is a default KMS key for your AWS account . Your AWS account has a different default KMS key for each AWS Region .
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-performanceinsightskmskeyid
     */
    readonly performanceInsightsKmsKeyId?: string;

    /**
     * The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:.
     *
     * - 7
     * - *month* * 31, where *month* is a number of months from 1-23
     * - 731
     *
     * For example, the following values are valid:
     *
     * - 93 (3 months * 31)
     * - 341 (11 months * 31)
     * - 589 (19 months * 31)
     * - 731
     *
     * If you specify a retention period such as 94, which isn't a valid value, RDS issues an error.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-performanceinsightsretentionperiod
     */
    readonly performanceInsightsRetentionPeriod?: number;

    /**
     * The port number on which the DB instances in the DB cluster accept connections.
     *
     * Default:
     *
     * - When \`EngineMode\` is \`provisioned\` , \`3306\` (for both Aurora MySQL and Aurora PostgreSQL)
     * - When \`EngineMode\` is \`serverless\` :
     *
     * - \`3306\` when \`Engine\` is \`aurora\` or \`aurora-mysql\`
     * - \`5432\` when \`Engine\` is \`aurora-postgresql\`
     *
     * > The \`No interruption\` on update behavior only applies to DB clusters. If you are updating a DB instance, see [Port](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-port) for the AWS::RDS::DBInstance resource.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-port
     */
    readonly port?: number;

    /**
     * The daily time range during which automated backups are created.
     *
     * For more information, see [Backup Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow) in the *Amazon Aurora User Guide.*
     *
     * Constraints:
     *
     * - Must be in the format \`hh24:mi-hh24:mi\` .
     * - Must be in Universal Coordinated Time (UTC).
     * - Must not conflict with the preferred maintenance window.
     * - Must be at least 30 minutes.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-preferredbackupwindow
     */
    readonly preferredBackupWindow?: string;

    /**
     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     *
     * Format: \`ddd:hh24:mi-ddd:hh24:mi\`
     *
     * The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see [Adjusting the Preferred DB Cluster Maintenance Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora) in the *Amazon Aurora User Guide.*
     *
     * Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
     *
     * Constraints: Minimum 30-minute window.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-preferredmaintenancewindow
     */
    readonly preferredMaintenanceWindow?: string;

    /**
     * A value that indicates whether the DB cluster is publicly accessible.
     *
     * When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.
     *
     * When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.
     *
     * Default: The default behavior varies depending on whether \`DBSubnetGroupName\` is specified.
     *
     * If \`DBSubnetGroupName\` isn't specified, and \`PubliclyAccessible\` isn't specified, the following applies:
     *
     * - If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.
     * - If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.
     *
     * If \`DBSubnetGroupName\` is specified, and \`PubliclyAccessible\` isn't specified, the following applies:
     *
     * - If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.
     * - If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-publiclyaccessible
     */
    readonly publiclyAccessible?: boolean | cdk.IResolvable;

    /**
     * The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-replicationsourceidentifier
     */
    readonly replicationSourceIdentifier?: string;

    /**
     * The date and time to restore the DB cluster to.
     *
     * Valid Values: Value must be a time in Universal Coordinated Time (UTC) format
     *
     * Constraints:
     *
     * - Must be before the latest restorable time for the DB instance
     * - Must be specified if \`UseLatestRestorableTime\` parameter isn't provided
     * - Can't be specified if the \`UseLatestRestorableTime\` parameter is enabled
     * - Can't be specified if the \`RestoreType\` parameter is \`copy-on-write\`
     *
     * Example: \`2015-03-07T23:45:00Z\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-restoretotime
     */
    readonly restoreToTime?: string;

    /**
     * The type of restore to be performed. You can specify one of the following values:.
     *
     * - \`full-copy\` - The new DB cluster is restored as a full copy of the source DB cluster.
     * - \`copy-on-write\` - The new DB cluster is restored as a clone of the source DB cluster.
     *
     * Constraints: You can't specify \`copy-on-write\` if the engine version of the source DB cluster is earlier than 1.11.
     *
     * If you don't specify a \`RestoreType\` value, then the new DB cluster is restored as a full copy of the source DB cluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - "full-copy"
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-restoretype
     */
    readonly restoreType?: string;

    /**
     * The \`ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless DB cluster.
     *
     * This property is only supported for Aurora Serverless v1. For Aurora Serverless v2, use \`ServerlessV2ScalingConfiguration\` property.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-scalingconfiguration
     */
    readonly scalingConfiguration?: cdk.IResolvable | CfnDBCluster.ScalingConfigurationProperty;

    /**
     * The \`ServerlessV2ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless V2 DB cluster.
     *
     * This property is only supported for Aurora Serverless v2. For Aurora Serverless v1, use \`ScalingConfiguration\` property.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-serverlessv2scalingconfiguration
     */
    readonly serverlessV2ScalingConfiguration?: cdk.IResolvable | CfnDBCluster.ServerlessV2ScalingConfigurationProperty;

    /**
     * The identifier for the DB snapshot or DB cluster snapshot to restore from.
     *
     * You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.
     *
     * After you restore a DB cluster with a \`SnapshotIdentifier\` property, you must specify the same \`SnapshotIdentifier\` property for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the data in the database is not changed. However, if you don't specify the \`SnapshotIdentifier\` property, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, a new DB cluster is restored from the specified \`SnapshotIdentifier\` property, and the original DB cluster is deleted.
     *
     * If you specify the \`SnapshotIdentifier\` property to restore a DB cluster (as opposed to specifying it for DB cluster updates), then don't specify the following properties:
     *
     * - \`GlobalClusterIdentifier\`
     * - \`MasterUsername\`
     * - \`MasterUserPassword\`
     * - \`ReplicationSourceIdentifier\`
     * - \`RestoreType\`
     * - \`SourceDBClusterIdentifier\`
     * - \`SourceRegion\`
     * - \`StorageEncrypted\` (for an encrypted snapshot)
     * - \`UseLatestRestorableTime\`
     *
     * Constraints:
     *
     * - Must match the identifier of an existing Snapshot.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-snapshotidentifier
     */
    readonly snapshotIdentifier?: string;

    /**
     * When restoring a DB cluster to a point in time, the identifier of the source DB cluster from which to restore.
     *
     * Constraints:
     *
     * - Must match the identifier of an existing DBCluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-sourcedbclusteridentifier
     */
    readonly sourceDbClusterIdentifier?: string;

    /**
     * The AWS Region which contains the source DB cluster when replicating a DB cluster. For example, \`us-east-1\` .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-sourceregion
     */
    readonly sourceRegion?: string;

    /**
     * Indicates whether the DB cluster is encrypted.
     *
     * If you specify the \`KmsKeyId\` property, then you must enable encryption.
     *
     * If you specify the \`SourceDBClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
     *
     * If you specify the \`SnapshotIdentifier\` and the specified snapshot is encrypted, don't specify this property. The value is inherited from the snapshot, and the specified \`KmsKeyId\` property is used.
     *
     * If you specify the \`SnapshotIdentifier\` and the specified snapshot isn't encrypted, you can use this property to specify that the restored DB cluster is encrypted. Specify the \`KmsKeyId\` property for the KMS key to use for encryption. If you don't want the restored DB cluster to be encrypted, then don't set this property or set it to \`false\` .
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-storageencrypted
     */
    readonly storageEncrypted?: boolean | cdk.IResolvable;

    /**
     * Specifies the storage type to be associated with the DB cluster.
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid values: \`io1\`
     *
     * When specified, a value for the \`Iops\` parameter is required.
     *
     * Default: \`io1\`
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-storagetype
     */
    readonly storageType?: string;

    /**
     * An optional array of key-value pairs to apply to this DB cluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnDBCluster.TagProperty> | cdk.IResolvable;

    /**
     * A value that indicates whether to restore the DB cluster to the latest restorable backup time.
     *
     * By default, the DB cluster is not restored to the latest restorable backup time.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-uselatestrestorabletime
     */
    readonly useLatestRestorableTime?: boolean | cdk.IResolvable;

    /**
     * A list of EC2 VPC security groups to associate with this DB cluster.
     *
     * If you plan to update the resource, don't specify VPC security groups in a shared VPC.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-serverlessv2scalingconfiguration.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration-vpcsecuritygroupids
     */
    readonly vpcSecurityGroupIds?: Array<string>;
  }

  /**
   * The \`ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless DB cluster.
   *
   * For more information, see [Using Amazon Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) in the *Amazon Aurora User Guide* .
   *
   * This property is only supported for Aurora Serverless v1. For Aurora Serverless v2, use \`ServerlessV2ScalingConfiguration\` property.
   *
   * Valid for: Aurora DB clusters only
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html
   */
  export interface ScalingConfigurationProperty {
    /**
     * The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-allocatedstorage
     */
    readonly allocatedStorage?: number;

    /**
     * Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster.
     *
     * IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other Amazon Web Services on your behalf.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-associatedroles
     */
    readonly associatedRoles?: Array<CfnDBCluster.DBClusterRoleProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * A value that indicates whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window.
     *
     * By default, minor engine upgrades are applied automatically.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-autominorversionupgrade
     */
    readonly autoMinorVersionUpgrade?: boolean | cdk.IResolvable;

    /**
     * A list of Availability Zones (AZs) where instances in the DB cluster can be created.
     *
     * For information on AWS Regions and Availability Zones, see [Choosing the Regions and Availability Zones](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-availabilityzones
     */
    readonly availabilityZones?: Array<string>;

    /**
     * The target backtrack window, in seconds. To disable backtracking, set this value to 0.
     *
     * > Currently, Backtrack is only supported for Aurora MySQL DB clusters.
     *
     * Default: 0
     *
     * Constraints:
     *
     * - If specified, this value must be set to a number from 0 to 259,200 (72 hours).
     *
     * Valid for: Aurora MySQL DB clusters only
     *
     * @default - 0
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-backtrackwindow
     */
    readonly backtrackWindow?: number;

    /**
     * The number of days for which automated backups are retained.
     *
     * Default: 1
     *
     * Constraints:
     *
     * - Must be a value from 1 to 35
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - 1
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-backupretentionperiod
     */
    readonly backupRetentionPeriod?: number;

    /**
     * A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster.
     *
     * The default is not to copy them.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-copytagstosnapshot
     */
    readonly copyTagsToSnapshot?: boolean | cdk.IResolvable;

    /**
     * The name of your database.
     *
     * If you don't provide a name, then Amazon RDS won't create a database in this DB cluster. For naming constraints, see [Naming Constraints](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-databasename
     */
    readonly databaseName?: string;

    /**
     * The DB cluster identifier. This parameter is stored as a lowercase string.
     *
     * Constraints:
     *
     * - Must contain from 1 to 63 letters, numbers, or hyphens.
     * - First character must be a letter.
     * - Can't end with a hyphen or contain two consecutive hyphens.
     *
     * Example: \`my-cluster1\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-dbclusteridentifier
     */
    readonly dbClusterIdentifier?: string;

    /**
     * The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all AWS Regions , or for all database engines.
     *
     * For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the *Amazon RDS User Guide* .
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-dbclusterinstanceclass
     */
    readonly dbClusterInstanceClass?: string;

    /**
     * The name of the DB cluster parameter group to associate with this DB cluster.
     *
     * > If you apply a parameter group to an existing DB cluster, then its DB instances might need to reboot. This can result in an outage while the DB instances are rebooting.
     * >
     * > If you apply a change to parameter group associated with a stopped DB cluster, then the update stack waits until the DB cluster is started.
     *
     * To list all of the available DB cluster parameter group names, use the following command:
     *
     * \`aws rds describe-db-cluster-parameter-groups --query "DBClusterParameterGroups[].DBClusterParameterGroupName" --output text\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - "default.aurora5.6"
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-dbclusterparametergroupname
     */
    readonly dbClusterParameterGroupName?: string;

    /**
     * The name of the DB parameter group to apply to all instances of the DB cluster.
     *
     * > When you apply a parameter group using the \`DBInstanceParameterGroupName\` parameter, the DB cluster isn't rebooted automatically. Also, parameter changes are applied immediately rather than during the next maintenance window.
     *
     * Default: The existing name setting
     *
     * Constraints:
     *
     * - The DB parameter group must be in the same DB parameter group family as this DB cluster.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-dbinstanceparametergroupname
     */
    readonly dbInstanceParameterGroupName?: string;

    /**
     * A DB subnet group that you want to associate with this DB cluster.
     *
     * If you are restoring a DB cluster to a point in time with \`RestoreType\` set to \`copy-on-write\` , and don't specify a DB subnet group name, then the DB cluster is restored with a default DB subnet group.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-dbsubnetgroupname
     */
    readonly dbSubnetGroupName?: string;

    /**
     * Reserved for future use.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-dbsystemid
     */
    readonly dbSystemId?: string;

    /**
     * A value that indicates whether the DB cluster has deletion protection enabled.
     *
     * The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-deletionprotection
     */
    readonly deletionProtection?: boolean | cdk.IResolvable;

    /**
     * Indicates the directory ID of the Active Directory to create the DB cluster.
     *
     * For Amazon Aurora DB clusters, Amazon RDS can use Kerberos authentication to authenticate users that connect to the DB cluster.
     *
     * For more information, see [Kerberos authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-domain
     */
    readonly domain?: string;

    /**
     * Specifies the name of the IAM role to use when making API calls to the Directory Service.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-domainiamrolename
     */
    readonly domainIamRoleName?: string;

    /**
     * The list of log types that need to be enabled for exporting to CloudWatch Logs.
     *
     * The values in the list depend on the DB engine being used. For more information, see [Publishing Database Logs to Amazon CloudWatch Logs](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the *Amazon Aurora User Guide* .
     *
     * *Aurora MySQL*
     *
     * Valid values: \`audit\` , \`error\` , \`general\` , \`slowquery\`
     *
     * *Aurora PostgreSQL*
     *
     * Valid values: \`postgresql\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-enablecloudwatchlogsexports
     */
    readonly enableCloudwatchLogsExports?: Array<string>;

    /**
     * A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster.
     *
     * By default, the HTTP endpoint is disabled.
     *
     * When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
     *
     * For more information, see [Using the Data API for Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-enablehttpendpoint
     */
    readonly enableHttpEndpoint?: boolean | cdk.IResolvable;

    /**
     * A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts.
     *
     * By default, mapping is disabled.
     *
     * For more information, see [IAM Database Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) in the *Amazon Aurora User Guide.*
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-enableiamdatabaseauthentication
     */
    readonly enableIamDatabaseAuthentication?: boolean | cdk.IResolvable;

    /**
     * The name of the database engine to be used for this DB cluster.
     *
     * Valid Values:
     *
     * - \`aurora\` (for MySQL 5.6-compatible Aurora)
     * - \`aurora-mysql\` (for MySQL 5.7-compatible and MySQL 8.0-compatible Aurora)
     * - \`aurora-postgresql\`
     * - \`mysql\`
     * - \`postgres\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-engine
     */
    readonly engine?: string;

    /**
     * The DB engine mode of the DB cluster, either \`provisioned\` , \`serverless\` , \`parallelquery\` , \`global\` , or \`multimaster\` .
     *
     * The \`serverless\` engine mode only applies for Aurora Serverless v1 DB clusters.
     *
     * The \`parallelquery\` engine mode isn't required for Aurora MySQL version 1.23 and higher 1.x versions, and version 2.09 and higher 2.x versions.
     *
     * The \`global\` engine mode isn't required for Aurora MySQL version 1.22 and higher 1.x versions, and \`global\` engine mode isn't required for any 2.x versions.
     *
     * The \`multimaster\` engine mode only applies for DB clusters created with Aurora MySQL version 5.6.10a.
     *
     * For Aurora PostgreSQL, the \`global\` engine mode isn't required, and both the \`parallelquery\` and the \`multimaster\` engine modes currently aren't supported.
     *
     * Limitations and requirements apply to some DB engine modes. For more information, see the following sections in the *Amazon Aurora User Guide* :
     *
     * - [Limitations of Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations)
     * - [Limitations of Parallel Query](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-mysql-parallel-query.html#aurora-mysql-parallel-query-limitations)
     * - [Limitations of Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html#aurora-global-database.limitations)
     * - [Limitations of Multi-Master Clusters](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations)
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-enginemode
     */
    readonly engineMode?: string;

    /**
     * The version number of the database engine to use.
     *
     * To list all of the available engine versions for \`aurora\` (for MySQL 5.6-compatible Aurora), use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"\`
     *
     * To list all of the available engine versions for \`aurora-mysql\` (for MySQL 5.7-compatible Aurora), use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"\`
     *
     * To list all of the available engine versions for \`aurora-postgresql\` , use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-engineversion
     */
    readonly engineVersion?: string;

    /**
     * If you are configuring an Aurora global database cluster and want your Aurora DB cluster to be a secondary member in the global database cluster, specify the global cluster ID of the global database cluster.
     *
     * To define the primary database cluster of the global cluster, use the [AWS::RDS::GlobalCluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html) resource.
     *
     * If you aren't configuring a global database cluster, don't specify this property.
     *
     * > To remove the DB cluster from a global database cluster, specify an empty value for the \`GlobalClusterIdentifier\` property.
     *
     * For information about Aurora global databases, see [Working with Amazon Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-globalclusteridentifier
     */
    readonly globalClusterIdentifier?: string;

    /**
     * The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.
     *
     * For information about valid IOPS values, see [Provisioned IOPS storage](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the *Amazon RDS User Guide* .
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Constraints: Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-iops
     */
    readonly iops?: number;

    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such as \`arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef\` .
     *
     * If you enable the \`StorageEncrypted\` property but don't specify this property, the default KMS key is used. If you specify this property, you must set the \`StorageEncrypted\` property to \`true\` .
     *
     * If you specify the \`SnapshotIdentifier\` property, the \`StorageEncrypted\` property value is inherited from the snapshot, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-kmskeyid
     */
    readonly kmsKeyId?: string;

    /**
     * A value that indicates whether to manage the master user password with AWS Secrets Manager.
     *
     * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
     *
     * Constraints:
     *
     * - Can't manage the master user password with AWS Secrets Manager if \`MasterUserPassword\` is specified.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-managemasteruserpassword
     */
    readonly manageMasterUserPassword?: boolean | cdk.IResolvable;

    /**
     * The name of the master user for the DB cluster.
     *
     * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-masterusername
     */
    readonly masterUsername?: string;

    /**
     * The master password for the DB instance.
     *
     * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-masteruserpassword
     */
    readonly masterUserPassword?: string;

    /**
     * Contains the secret managed by RDS in AWS Secrets Manager for the master user password.
     *
     * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-masterusersecret
     */
    readonly masterUserSecret?: cdk.IResolvable | CfnDBCluster.MasterUserSecretProperty;

    /**
     * The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster.
     *
     * To turn off collecting Enhanced Monitoring metrics, specify 0. The default is 0.
     *
     * If \`MonitoringRoleArn\` is specified, also set \`MonitoringInterval\` to a value other than 0.
     *
     * Valid Values: \`0, 1, 5, 10, 15, 30, 60\`
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @default - 0
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-monitoringinterval
     */
    readonly monitoringInterval?: number;

    /**
     * The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.
     *
     * An example is \`arn:aws:iam:123456789012:role/emaccess\` . For information on creating a monitoring role, see [Setting up and enabling Enhanced Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling) in the *Amazon RDS User Guide* .
     *
     * If \`MonitoringInterval\` is set to a value other than 0, supply a \`MonitoringRoleArn\` value.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-monitoringrolearn
     */
    readonly monitoringRoleArn?: string;

    /**
     * The network type of the DB cluster.
     *
     * Valid values:
     *
     * - \`IPV4\`
     * - \`DUAL\`
     *
     * The network type is determined by the \`DBSubnetGroup\` specified for the DB cluster. A \`DBSubnetGroup\` can support only the IPv4 protocol or the IPv4 and IPv6 protocols ( \`DUAL\` ).
     *
     * For more information, see [Working with a DB instance in a VPC](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the *Amazon Aurora User Guide.*
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-networktype
     */
    readonly networkType?: string;

    /**
     * A value that indicates whether to turn on Performance Insights for the DB cluster.
     *
     * For more information, see [Using Amazon Performance Insights](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the *Amazon RDS User Guide* .
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-performanceinsightsenabled
     */
    readonly performanceInsightsEnabled?: boolean | cdk.IResolvable;

    /**
     * The AWS KMS key identifier for encryption of Performance Insights data.
     *
     * The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
     *
     * If you don't specify a value for \`PerformanceInsightsKMSKeyId\` , then Amazon RDS uses your default KMS key. There is a default KMS key for your AWS account . Your AWS account has a different default KMS key for each AWS Region .
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-performanceinsightskmskeyid
     */
    readonly performanceInsightsKmsKeyId?: string;

    /**
     * The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:.
     *
     * - 7
     * - *month* * 31, where *month* is a number of months from 1-23
     * - 731
     *
     * For example, the following values are valid:
     *
     * - 93 (3 months * 31)
     * - 341 (11 months * 31)
     * - 589 (19 months * 31)
     * - 731
     *
     * If you specify a retention period such as 94, which isn't a valid value, RDS issues an error.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-performanceinsightsretentionperiod
     */
    readonly performanceInsightsRetentionPeriod?: number;

    /**
     * The port number on which the DB instances in the DB cluster accept connections.
     *
     * Default:
     *
     * - When \`EngineMode\` is \`provisioned\` , \`3306\` (for both Aurora MySQL and Aurora PostgreSQL)
     * - When \`EngineMode\` is \`serverless\` :
     *
     * - \`3306\` when \`Engine\` is \`aurora\` or \`aurora-mysql\`
     * - \`5432\` when \`Engine\` is \`aurora-postgresql\`
     *
     * > The \`No interruption\` on update behavior only applies to DB clusters. If you are updating a DB instance, see [Port](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-port) for the AWS::RDS::DBInstance resource.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-port
     */
    readonly port?: number;

    /**
     * The daily time range during which automated backups are created.
     *
     * For more information, see [Backup Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow) in the *Amazon Aurora User Guide.*
     *
     * Constraints:
     *
     * - Must be in the format \`hh24:mi-hh24:mi\` .
     * - Must be in Universal Coordinated Time (UTC).
     * - Must not conflict with the preferred maintenance window.
     * - Must be at least 30 minutes.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-preferredbackupwindow
     */
    readonly preferredBackupWindow?: string;

    /**
     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     *
     * Format: \`ddd:hh24:mi-ddd:hh24:mi\`
     *
     * The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see [Adjusting the Preferred DB Cluster Maintenance Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora) in the *Amazon Aurora User Guide.*
     *
     * Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
     *
     * Constraints: Minimum 30-minute window.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-preferredmaintenancewindow
     */
    readonly preferredMaintenanceWindow?: string;

    /**
     * A value that indicates whether the DB cluster is publicly accessible.
     *
     * When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.
     *
     * When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.
     *
     * Default: The default behavior varies depending on whether \`DBSubnetGroupName\` is specified.
     *
     * If \`DBSubnetGroupName\` isn't specified, and \`PubliclyAccessible\` isn't specified, the following applies:
     *
     * - If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.
     * - If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.
     *
     * If \`DBSubnetGroupName\` is specified, and \`PubliclyAccessible\` isn't specified, the following applies:
     *
     * - If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.
     * - If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-publiclyaccessible
     */
    readonly publiclyAccessible?: boolean | cdk.IResolvable;

    /**
     * The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-replicationsourceidentifier
     */
    readonly replicationSourceIdentifier?: string;

    /**
     * The date and time to restore the DB cluster to.
     *
     * Valid Values: Value must be a time in Universal Coordinated Time (UTC) format
     *
     * Constraints:
     *
     * - Must be before the latest restorable time for the DB instance
     * - Must be specified if \`UseLatestRestorableTime\` parameter isn't provided
     * - Can't be specified if the \`UseLatestRestorableTime\` parameter is enabled
     * - Can't be specified if the \`RestoreType\` parameter is \`copy-on-write\`
     *
     * Example: \`2015-03-07T23:45:00Z\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-restoretotime
     */
    readonly restoreToTime?: string;

    /**
     * The type of restore to be performed. You can specify one of the following values:.
     *
     * - \`full-copy\` - The new DB cluster is restored as a full copy of the source DB cluster.
     * - \`copy-on-write\` - The new DB cluster is restored as a clone of the source DB cluster.
     *
     * Constraints: You can't specify \`copy-on-write\` if the engine version of the source DB cluster is earlier than 1.11.
     *
     * If you don't specify a \`RestoreType\` value, then the new DB cluster is restored as a full copy of the source DB cluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - "full-copy"
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-restoretype
     */
    readonly restoreType?: string;

    /**
     * The \`ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless DB cluster.
     *
     * This property is only supported for Aurora Serverless v1. For Aurora Serverless v2, use \`ServerlessV2ScalingConfiguration\` property.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-scalingconfiguration
     */
    readonly scalingConfiguration?: cdk.IResolvable | CfnDBCluster.ScalingConfigurationProperty;

    /**
     * The \`ServerlessV2ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless V2 DB cluster.
     *
     * This property is only supported for Aurora Serverless v2. For Aurora Serverless v1, use \`ScalingConfiguration\` property.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-serverlessv2scalingconfiguration
     */
    readonly serverlessV2ScalingConfiguration?: cdk.IResolvable | CfnDBCluster.ServerlessV2ScalingConfigurationProperty;

    /**
     * The identifier for the DB snapshot or DB cluster snapshot to restore from.
     *
     * You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.
     *
     * After you restore a DB cluster with a \`SnapshotIdentifier\` property, you must specify the same \`SnapshotIdentifier\` property for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the data in the database is not changed. However, if you don't specify the \`SnapshotIdentifier\` property, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, a new DB cluster is restored from the specified \`SnapshotIdentifier\` property, and the original DB cluster is deleted.
     *
     * If you specify the \`SnapshotIdentifier\` property to restore a DB cluster (as opposed to specifying it for DB cluster updates), then don't specify the following properties:
     *
     * - \`GlobalClusterIdentifier\`
     * - \`MasterUsername\`
     * - \`MasterUserPassword\`
     * - \`ReplicationSourceIdentifier\`
     * - \`RestoreType\`
     * - \`SourceDBClusterIdentifier\`
     * - \`SourceRegion\`
     * - \`StorageEncrypted\` (for an encrypted snapshot)
     * - \`UseLatestRestorableTime\`
     *
     * Constraints:
     *
     * - Must match the identifier of an existing Snapshot.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-snapshotidentifier
     */
    readonly snapshotIdentifier?: string;

    /**
     * When restoring a DB cluster to a point in time, the identifier of the source DB cluster from which to restore.
     *
     * Constraints:
     *
     * - Must match the identifier of an existing DBCluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-sourcedbclusteridentifier
     */
    readonly sourceDbClusterIdentifier?: string;

    /**
     * The AWS Region which contains the source DB cluster when replicating a DB cluster. For example, \`us-east-1\` .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-sourceregion
     */
    readonly sourceRegion?: string;

    /**
     * Indicates whether the DB cluster is encrypted.
     *
     * If you specify the \`KmsKeyId\` property, then you must enable encryption.
     *
     * If you specify the \`SourceDBClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
     *
     * If you specify the \`SnapshotIdentifier\` and the specified snapshot is encrypted, don't specify this property. The value is inherited from the snapshot, and the specified \`KmsKeyId\` property is used.
     *
     * If you specify the \`SnapshotIdentifier\` and the specified snapshot isn't encrypted, you can use this property to specify that the restored DB cluster is encrypted. Specify the \`KmsKeyId\` property for the KMS key to use for encryption. If you don't want the restored DB cluster to be encrypted, then don't set this property or set it to \`false\` .
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-storageencrypted
     */
    readonly storageEncrypted?: boolean | cdk.IResolvable;

    /**
     * Specifies the storage type to be associated with the DB cluster.
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid values: \`io1\`
     *
     * When specified, a value for the \`Iops\` parameter is required.
     *
     * Default: \`io1\`
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-storagetype
     */
    readonly storageType?: string;

    /**
     * An optional array of key-value pairs to apply to this DB cluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnDBCluster.TagProperty> | cdk.IResolvable;

    /**
     * A value that indicates whether to restore the DB cluster to the latest restorable backup time.
     *
     * By default, the DB cluster is not restored to the latest restorable backup time.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-uselatestrestorabletime
     */
    readonly useLatestRestorableTime?: boolean | cdk.IResolvable;

    /**
     * A list of EC2 VPC security groups to associate with this DB cluster.
     *
     * If you plan to update the resource, don't specify VPC security groups in a shared VPC.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-scalingconfiguration.html#cfn-rds-dbcluster-scalingconfiguration-vpcsecuritygroupids
     */
    readonly vpcSecurityGroupIds?: Array<string>;
  }

  /**
   * A key-value pair to associate with a resource.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html
   */
  export interface TagProperty {
    /**
     * The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-allocatedstorage
     */
    readonly allocatedStorage?: number;

    /**
     * Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster.
     *
     * IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other Amazon Web Services on your behalf.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-associatedroles
     */
    readonly associatedRoles?: Array<CfnDBCluster.DBClusterRoleProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * A value that indicates whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window.
     *
     * By default, minor engine upgrades are applied automatically.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-autominorversionupgrade
     */
    readonly autoMinorVersionUpgrade?: boolean | cdk.IResolvable;

    /**
     * A list of Availability Zones (AZs) where instances in the DB cluster can be created.
     *
     * For information on AWS Regions and Availability Zones, see [Choosing the Regions and Availability Zones](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-availabilityzones
     */
    readonly availabilityZones?: Array<string>;

    /**
     * The target backtrack window, in seconds. To disable backtracking, set this value to 0.
     *
     * > Currently, Backtrack is only supported for Aurora MySQL DB clusters.
     *
     * Default: 0
     *
     * Constraints:
     *
     * - If specified, this value must be set to a number from 0 to 259,200 (72 hours).
     *
     * Valid for: Aurora MySQL DB clusters only
     *
     * @default - 0
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-backtrackwindow
     */
    readonly backtrackWindow?: number;

    /**
     * The number of days for which automated backups are retained.
     *
     * Default: 1
     *
     * Constraints:
     *
     * - Must be a value from 1 to 35
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - 1
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-backupretentionperiod
     */
    readonly backupRetentionPeriod?: number;

    /**
     * A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster.
     *
     * The default is not to copy them.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-copytagstosnapshot
     */
    readonly copyTagsToSnapshot?: boolean | cdk.IResolvable;

    /**
     * The name of your database.
     *
     * If you don't provide a name, then Amazon RDS won't create a database in this DB cluster. For naming constraints, see [Naming Constraints](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-databasename
     */
    readonly databaseName?: string;

    /**
     * The DB cluster identifier. This parameter is stored as a lowercase string.
     *
     * Constraints:
     *
     * - Must contain from 1 to 63 letters, numbers, or hyphens.
     * - First character must be a letter.
     * - Can't end with a hyphen or contain two consecutive hyphens.
     *
     * Example: \`my-cluster1\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-dbclusteridentifier
     */
    readonly dbClusterIdentifier?: string;

    /**
     * The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all AWS Regions , or for all database engines.
     *
     * For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the *Amazon RDS User Guide* .
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-dbclusterinstanceclass
     */
    readonly dbClusterInstanceClass?: string;

    /**
     * The name of the DB cluster parameter group to associate with this DB cluster.
     *
     * > If you apply a parameter group to an existing DB cluster, then its DB instances might need to reboot. This can result in an outage while the DB instances are rebooting.
     * >
     * > If you apply a change to parameter group associated with a stopped DB cluster, then the update stack waits until the DB cluster is started.
     *
     * To list all of the available DB cluster parameter group names, use the following command:
     *
     * \`aws rds describe-db-cluster-parameter-groups --query "DBClusterParameterGroups[].DBClusterParameterGroupName" --output text\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - "default.aurora5.6"
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-dbclusterparametergroupname
     */
    readonly dbClusterParameterGroupName?: string;

    /**
     * The name of the DB parameter group to apply to all instances of the DB cluster.
     *
     * > When you apply a parameter group using the \`DBInstanceParameterGroupName\` parameter, the DB cluster isn't rebooted automatically. Also, parameter changes are applied immediately rather than during the next maintenance window.
     *
     * Default: The existing name setting
     *
     * Constraints:
     *
     * - The DB parameter group must be in the same DB parameter group family as this DB cluster.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-dbinstanceparametergroupname
     */
    readonly dbInstanceParameterGroupName?: string;

    /**
     * A DB subnet group that you want to associate with this DB cluster.
     *
     * If you are restoring a DB cluster to a point in time with \`RestoreType\` set to \`copy-on-write\` , and don't specify a DB subnet group name, then the DB cluster is restored with a default DB subnet group.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-dbsubnetgroupname
     */
    readonly dbSubnetGroupName?: string;

    /**
     * Reserved for future use.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-dbsystemid
     */
    readonly dbSystemId?: string;

    /**
     * A value that indicates whether the DB cluster has deletion protection enabled.
     *
     * The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-deletionprotection
     */
    readonly deletionProtection?: boolean | cdk.IResolvable;

    /**
     * Indicates the directory ID of the Active Directory to create the DB cluster.
     *
     * For Amazon Aurora DB clusters, Amazon RDS can use Kerberos authentication to authenticate users that connect to the DB cluster.
     *
     * For more information, see [Kerberos authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-domain
     */
    readonly domain?: string;

    /**
     * Specifies the name of the IAM role to use when making API calls to the Directory Service.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-domainiamrolename
     */
    readonly domainIamRoleName?: string;

    /**
     * The list of log types that need to be enabled for exporting to CloudWatch Logs.
     *
     * The values in the list depend on the DB engine being used. For more information, see [Publishing Database Logs to Amazon CloudWatch Logs](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the *Amazon Aurora User Guide* .
     *
     * *Aurora MySQL*
     *
     * Valid values: \`audit\` , \`error\` , \`general\` , \`slowquery\`
     *
     * *Aurora PostgreSQL*
     *
     * Valid values: \`postgresql\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-enablecloudwatchlogsexports
     */
    readonly enableCloudwatchLogsExports?: Array<string>;

    /**
     * A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster.
     *
     * By default, the HTTP endpoint is disabled.
     *
     * When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
     *
     * For more information, see [Using the Data API for Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-enablehttpendpoint
     */
    readonly enableHttpEndpoint?: boolean | cdk.IResolvable;

    /**
     * A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts.
     *
     * By default, mapping is disabled.
     *
     * For more information, see [IAM Database Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) in the *Amazon Aurora User Guide.*
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-enableiamdatabaseauthentication
     */
    readonly enableIamDatabaseAuthentication?: boolean | cdk.IResolvable;

    /**
     * The name of the database engine to be used for this DB cluster.
     *
     * Valid Values:
     *
     * - \`aurora\` (for MySQL 5.6-compatible Aurora)
     * - \`aurora-mysql\` (for MySQL 5.7-compatible and MySQL 8.0-compatible Aurora)
     * - \`aurora-postgresql\`
     * - \`mysql\`
     * - \`postgres\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-engine
     */
    readonly engine?: string;

    /**
     * The DB engine mode of the DB cluster, either \`provisioned\` , \`serverless\` , \`parallelquery\` , \`global\` , or \`multimaster\` .
     *
     * The \`serverless\` engine mode only applies for Aurora Serverless v1 DB clusters.
     *
     * The \`parallelquery\` engine mode isn't required for Aurora MySQL version 1.23 and higher 1.x versions, and version 2.09 and higher 2.x versions.
     *
     * The \`global\` engine mode isn't required for Aurora MySQL version 1.22 and higher 1.x versions, and \`global\` engine mode isn't required for any 2.x versions.
     *
     * The \`multimaster\` engine mode only applies for DB clusters created with Aurora MySQL version 5.6.10a.
     *
     * For Aurora PostgreSQL, the \`global\` engine mode isn't required, and both the \`parallelquery\` and the \`multimaster\` engine modes currently aren't supported.
     *
     * Limitations and requirements apply to some DB engine modes. For more information, see the following sections in the *Amazon Aurora User Guide* :
     *
     * - [Limitations of Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations)
     * - [Limitations of Parallel Query](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-mysql-parallel-query.html#aurora-mysql-parallel-query-limitations)
     * - [Limitations of Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html#aurora-global-database.limitations)
     * - [Limitations of Multi-Master Clusters](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations)
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-enginemode
     */
    readonly engineMode?: string;

    /**
     * The version number of the database engine to use.
     *
     * To list all of the available engine versions for \`aurora\` (for MySQL 5.6-compatible Aurora), use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"\`
     *
     * To list all of the available engine versions for \`aurora-mysql\` (for MySQL 5.7-compatible Aurora), use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"\`
     *
     * To list all of the available engine versions for \`aurora-postgresql\` , use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-engineversion
     */
    readonly engineVersion?: string;

    /**
     * If you are configuring an Aurora global database cluster and want your Aurora DB cluster to be a secondary member in the global database cluster, specify the global cluster ID of the global database cluster.
     *
     * To define the primary database cluster of the global cluster, use the [AWS::RDS::GlobalCluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html) resource.
     *
     * If you aren't configuring a global database cluster, don't specify this property.
     *
     * > To remove the DB cluster from a global database cluster, specify an empty value for the \`GlobalClusterIdentifier\` property.
     *
     * For information about Aurora global databases, see [Working with Amazon Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-globalclusteridentifier
     */
    readonly globalClusterIdentifier?: string;

    /**
     * The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.
     *
     * For information about valid IOPS values, see [Provisioned IOPS storage](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the *Amazon RDS User Guide* .
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Constraints: Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-iops
     */
    readonly iops?: number;

    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such as \`arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef\` .
     *
     * If you enable the \`StorageEncrypted\` property but don't specify this property, the default KMS key is used. If you specify this property, you must set the \`StorageEncrypted\` property to \`true\` .
     *
     * If you specify the \`SnapshotIdentifier\` property, the \`StorageEncrypted\` property value is inherited from the snapshot, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-kmskeyid
     */
    readonly kmsKeyId?: string;

    /**
     * A value that indicates whether to manage the master user password with AWS Secrets Manager.
     *
     * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
     *
     * Constraints:
     *
     * - Can't manage the master user password with AWS Secrets Manager if \`MasterUserPassword\` is specified.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-managemasteruserpassword
     */
    readonly manageMasterUserPassword?: boolean | cdk.IResolvable;

    /**
     * The name of the master user for the DB cluster.
     *
     * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-masterusername
     */
    readonly masterUsername?: string;

    /**
     * The master password for the DB instance.
     *
     * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-masteruserpassword
     */
    readonly masterUserPassword?: string;

    /**
     * Contains the secret managed by RDS in AWS Secrets Manager for the master user password.
     *
     * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-masterusersecret
     */
    readonly masterUserSecret?: cdk.IResolvable | CfnDBCluster.MasterUserSecretProperty;

    /**
     * The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster.
     *
     * To turn off collecting Enhanced Monitoring metrics, specify 0. The default is 0.
     *
     * If \`MonitoringRoleArn\` is specified, also set \`MonitoringInterval\` to a value other than 0.
     *
     * Valid Values: \`0, 1, 5, 10, 15, 30, 60\`
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @default - 0
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-monitoringinterval
     */
    readonly monitoringInterval?: number;

    /**
     * The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.
     *
     * An example is \`arn:aws:iam:123456789012:role/emaccess\` . For information on creating a monitoring role, see [Setting up and enabling Enhanced Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling) in the *Amazon RDS User Guide* .
     *
     * If \`MonitoringInterval\` is set to a value other than 0, supply a \`MonitoringRoleArn\` value.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-monitoringrolearn
     */
    readonly monitoringRoleArn?: string;

    /**
     * The network type of the DB cluster.
     *
     * Valid values:
     *
     * - \`IPV4\`
     * - \`DUAL\`
     *
     * The network type is determined by the \`DBSubnetGroup\` specified for the DB cluster. A \`DBSubnetGroup\` can support only the IPv4 protocol or the IPv4 and IPv6 protocols ( \`DUAL\` ).
     *
     * For more information, see [Working with a DB instance in a VPC](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the *Amazon Aurora User Guide.*
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-networktype
     */
    readonly networkType?: string;

    /**
     * A value that indicates whether to turn on Performance Insights for the DB cluster.
     *
     * For more information, see [Using Amazon Performance Insights](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the *Amazon RDS User Guide* .
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-performanceinsightsenabled
     */
    readonly performanceInsightsEnabled?: boolean | cdk.IResolvable;

    /**
     * The AWS KMS key identifier for encryption of Performance Insights data.
     *
     * The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
     *
     * If you don't specify a value for \`PerformanceInsightsKMSKeyId\` , then Amazon RDS uses your default KMS key. There is a default KMS key for your AWS account . Your AWS account has a different default KMS key for each AWS Region .
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-performanceinsightskmskeyid
     */
    readonly performanceInsightsKmsKeyId?: string;

    /**
     * The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:.
     *
     * - 7
     * - *month* * 31, where *month* is a number of months from 1-23
     * - 731
     *
     * For example, the following values are valid:
     *
     * - 93 (3 months * 31)
     * - 341 (11 months * 31)
     * - 589 (19 months * 31)
     * - 731
     *
     * If you specify a retention period such as 94, which isn't a valid value, RDS issues an error.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-performanceinsightsretentionperiod
     */
    readonly performanceInsightsRetentionPeriod?: number;

    /**
     * The port number on which the DB instances in the DB cluster accept connections.
     *
     * Default:
     *
     * - When \`EngineMode\` is \`provisioned\` , \`3306\` (for both Aurora MySQL and Aurora PostgreSQL)
     * - When \`EngineMode\` is \`serverless\` :
     *
     * - \`3306\` when \`Engine\` is \`aurora\` or \`aurora-mysql\`
     * - \`5432\` when \`Engine\` is \`aurora-postgresql\`
     *
     * > The \`No interruption\` on update behavior only applies to DB clusters. If you are updating a DB instance, see [Port](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-port) for the AWS::RDS::DBInstance resource.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-port
     */
    readonly port?: number;

    /**
     * The daily time range during which automated backups are created.
     *
     * For more information, see [Backup Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow) in the *Amazon Aurora User Guide.*
     *
     * Constraints:
     *
     * - Must be in the format \`hh24:mi-hh24:mi\` .
     * - Must be in Universal Coordinated Time (UTC).
     * - Must not conflict with the preferred maintenance window.
     * - Must be at least 30 minutes.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-preferredbackupwindow
     */
    readonly preferredBackupWindow?: string;

    /**
     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     *
     * Format: \`ddd:hh24:mi-ddd:hh24:mi\`
     *
     * The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see [Adjusting the Preferred DB Cluster Maintenance Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora) in the *Amazon Aurora User Guide.*
     *
     * Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
     *
     * Constraints: Minimum 30-minute window.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-preferredmaintenancewindow
     */
    readonly preferredMaintenanceWindow?: string;

    /**
     * A value that indicates whether the DB cluster is publicly accessible.
     *
     * When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.
     *
     * When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.
     *
     * Default: The default behavior varies depending on whether \`DBSubnetGroupName\` is specified.
     *
     * If \`DBSubnetGroupName\` isn't specified, and \`PubliclyAccessible\` isn't specified, the following applies:
     *
     * - If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.
     * - If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.
     *
     * If \`DBSubnetGroupName\` is specified, and \`PubliclyAccessible\` isn't specified, the following applies:
     *
     * - If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.
     * - If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-publiclyaccessible
     */
    readonly publiclyAccessible?: boolean | cdk.IResolvable;

    /**
     * The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-replicationsourceidentifier
     */
    readonly replicationSourceIdentifier?: string;

    /**
     * The date and time to restore the DB cluster to.
     *
     * Valid Values: Value must be a time in Universal Coordinated Time (UTC) format
     *
     * Constraints:
     *
     * - Must be before the latest restorable time for the DB instance
     * - Must be specified if \`UseLatestRestorableTime\` parameter isn't provided
     * - Can't be specified if the \`UseLatestRestorableTime\` parameter is enabled
     * - Can't be specified if the \`RestoreType\` parameter is \`copy-on-write\`
     *
     * Example: \`2015-03-07T23:45:00Z\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-restoretotime
     */
    readonly restoreToTime?: string;

    /**
     * The type of restore to be performed. You can specify one of the following values:.
     *
     * - \`full-copy\` - The new DB cluster is restored as a full copy of the source DB cluster.
     * - \`copy-on-write\` - The new DB cluster is restored as a clone of the source DB cluster.
     *
     * Constraints: You can't specify \`copy-on-write\` if the engine version of the source DB cluster is earlier than 1.11.
     *
     * If you don't specify a \`RestoreType\` value, then the new DB cluster is restored as a full copy of the source DB cluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - "full-copy"
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-restoretype
     */
    readonly restoreType?: string;

    /**
     * The \`ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless DB cluster.
     *
     * This property is only supported for Aurora Serverless v1. For Aurora Serverless v2, use \`ServerlessV2ScalingConfiguration\` property.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-scalingconfiguration
     */
    readonly scalingConfiguration?: cdk.IResolvable | CfnDBCluster.ScalingConfigurationProperty;

    /**
     * The \`ServerlessV2ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless V2 DB cluster.
     *
     * This property is only supported for Aurora Serverless v2. For Aurora Serverless v1, use \`ScalingConfiguration\` property.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-serverlessv2scalingconfiguration
     */
    readonly serverlessV2ScalingConfiguration?: cdk.IResolvable | CfnDBCluster.ServerlessV2ScalingConfigurationProperty;

    /**
     * The identifier for the DB snapshot or DB cluster snapshot to restore from.
     *
     * You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.
     *
     * After you restore a DB cluster with a \`SnapshotIdentifier\` property, you must specify the same \`SnapshotIdentifier\` property for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the data in the database is not changed. However, if you don't specify the \`SnapshotIdentifier\` property, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, a new DB cluster is restored from the specified \`SnapshotIdentifier\` property, and the original DB cluster is deleted.
     *
     * If you specify the \`SnapshotIdentifier\` property to restore a DB cluster (as opposed to specifying it for DB cluster updates), then don't specify the following properties:
     *
     * - \`GlobalClusterIdentifier\`
     * - \`MasterUsername\`
     * - \`MasterUserPassword\`
     * - \`ReplicationSourceIdentifier\`
     * - \`RestoreType\`
     * - \`SourceDBClusterIdentifier\`
     * - \`SourceRegion\`
     * - \`StorageEncrypted\` (for an encrypted snapshot)
     * - \`UseLatestRestorableTime\`
     *
     * Constraints:
     *
     * - Must match the identifier of an existing Snapshot.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-snapshotidentifier
     */
    readonly snapshotIdentifier?: string;

    /**
     * When restoring a DB cluster to a point in time, the identifier of the source DB cluster from which to restore.
     *
     * Constraints:
     *
     * - Must match the identifier of an existing DBCluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-sourcedbclusteridentifier
     */
    readonly sourceDbClusterIdentifier?: string;

    /**
     * The AWS Region which contains the source DB cluster when replicating a DB cluster. For example, \`us-east-1\` .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-sourceregion
     */
    readonly sourceRegion?: string;

    /**
     * Indicates whether the DB cluster is encrypted.
     *
     * If you specify the \`KmsKeyId\` property, then you must enable encryption.
     *
     * If you specify the \`SourceDBClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
     *
     * If you specify the \`SnapshotIdentifier\` and the specified snapshot is encrypted, don't specify this property. The value is inherited from the snapshot, and the specified \`KmsKeyId\` property is used.
     *
     * If you specify the \`SnapshotIdentifier\` and the specified snapshot isn't encrypted, you can use this property to specify that the restored DB cluster is encrypted. Specify the \`KmsKeyId\` property for the KMS key to use for encryption. If you don't want the restored DB cluster to be encrypted, then don't set this property or set it to \`false\` .
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-storageencrypted
     */
    readonly storageEncrypted?: boolean | cdk.IResolvable;

    /**
     * Specifies the storage type to be associated with the DB cluster.
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid values: \`io1\`
     *
     * When specified, a value for the \`Iops\` parameter is required.
     *
     * Default: \`io1\`
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-storagetype
     */
    readonly storageType?: string;

    /**
     * An optional array of key-value pairs to apply to this DB cluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnDBCluster.TagProperty> | cdk.IResolvable;

    /**
     * A value that indicates whether to restore the DB cluster to the latest restorable backup time.
     *
     * By default, the DB cluster is not restored to the latest restorable backup time.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-uselatestrestorabletime
     */
    readonly useLatestRestorableTime?: boolean | cdk.IResolvable;

    /**
     * A list of EC2 VPC security groups to associate with this DB cluster.
     *
     * If you plan to update the resource, don't specify VPC security groups in a shared VPC.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-tag.html#cfn-rds-dbcluster-tag-vpcsecuritygroupids
     */
    readonly vpcSecurityGroupIds?: Array<string>;
  }

  /**
   * Specifies the connection endpoint for the primary instance of the DB cluster.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html
   */
  export interface EndpointProperty {
    /**
     * The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-allocatedstorage
     */
    readonly allocatedStorage?: number;

    /**
     * Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster.
     *
     * IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other Amazon Web Services on your behalf.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-associatedroles
     */
    readonly associatedRoles?: Array<CfnDBCluster.DBClusterRoleProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * A value that indicates whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window.
     *
     * By default, minor engine upgrades are applied automatically.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-autominorversionupgrade
     */
    readonly autoMinorVersionUpgrade?: boolean | cdk.IResolvable;

    /**
     * A list of Availability Zones (AZs) where instances in the DB cluster can be created.
     *
     * For information on AWS Regions and Availability Zones, see [Choosing the Regions and Availability Zones](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-availabilityzones
     */
    readonly availabilityZones?: Array<string>;

    /**
     * The target backtrack window, in seconds. To disable backtracking, set this value to 0.
     *
     * > Currently, Backtrack is only supported for Aurora MySQL DB clusters.
     *
     * Default: 0
     *
     * Constraints:
     *
     * - If specified, this value must be set to a number from 0 to 259,200 (72 hours).
     *
     * Valid for: Aurora MySQL DB clusters only
     *
     * @default - 0
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-backtrackwindow
     */
    readonly backtrackWindow?: number;

    /**
     * The number of days for which automated backups are retained.
     *
     * Default: 1
     *
     * Constraints:
     *
     * - Must be a value from 1 to 35
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - 1
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-backupretentionperiod
     */
    readonly backupRetentionPeriod?: number;

    /**
     * A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster.
     *
     * The default is not to copy them.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-copytagstosnapshot
     */
    readonly copyTagsToSnapshot?: boolean | cdk.IResolvable;

    /**
     * The name of your database.
     *
     * If you don't provide a name, then Amazon RDS won't create a database in this DB cluster. For naming constraints, see [Naming Constraints](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-databasename
     */
    readonly databaseName?: string;

    /**
     * The DB cluster identifier. This parameter is stored as a lowercase string.
     *
     * Constraints:
     *
     * - Must contain from 1 to 63 letters, numbers, or hyphens.
     * - First character must be a letter.
     * - Can't end with a hyphen or contain two consecutive hyphens.
     *
     * Example: \`my-cluster1\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-dbclusteridentifier
     */
    readonly dbClusterIdentifier?: string;

    /**
     * The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all AWS Regions , or for all database engines.
     *
     * For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the *Amazon RDS User Guide* .
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-dbclusterinstanceclass
     */
    readonly dbClusterInstanceClass?: string;

    /**
     * The name of the DB cluster parameter group to associate with this DB cluster.
     *
     * > If you apply a parameter group to an existing DB cluster, then its DB instances might need to reboot. This can result in an outage while the DB instances are rebooting.
     * >
     * > If you apply a change to parameter group associated with a stopped DB cluster, then the update stack waits until the DB cluster is started.
     *
     * To list all of the available DB cluster parameter group names, use the following command:
     *
     * \`aws rds describe-db-cluster-parameter-groups --query "DBClusterParameterGroups[].DBClusterParameterGroupName" --output text\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - "default.aurora5.6"
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-dbclusterparametergroupname
     */
    readonly dbClusterParameterGroupName?: string;

    /**
     * The name of the DB parameter group to apply to all instances of the DB cluster.
     *
     * > When you apply a parameter group using the \`DBInstanceParameterGroupName\` parameter, the DB cluster isn't rebooted automatically. Also, parameter changes are applied immediately rather than during the next maintenance window.
     *
     * Default: The existing name setting
     *
     * Constraints:
     *
     * - The DB parameter group must be in the same DB parameter group family as this DB cluster.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-dbinstanceparametergroupname
     */
    readonly dbInstanceParameterGroupName?: string;

    /**
     * A DB subnet group that you want to associate with this DB cluster.
     *
     * If you are restoring a DB cluster to a point in time with \`RestoreType\` set to \`copy-on-write\` , and don't specify a DB subnet group name, then the DB cluster is restored with a default DB subnet group.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-dbsubnetgroupname
     */
    readonly dbSubnetGroupName?: string;

    /**
     * Reserved for future use.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-dbsystemid
     */
    readonly dbSystemId?: string;

    /**
     * A value that indicates whether the DB cluster has deletion protection enabled.
     *
     * The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-deletionprotection
     */
    readonly deletionProtection?: boolean | cdk.IResolvable;

    /**
     * Indicates the directory ID of the Active Directory to create the DB cluster.
     *
     * For Amazon Aurora DB clusters, Amazon RDS can use Kerberos authentication to authenticate users that connect to the DB cluster.
     *
     * For more information, see [Kerberos authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-domain
     */
    readonly domain?: string;

    /**
     * Specifies the name of the IAM role to use when making API calls to the Directory Service.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-domainiamrolename
     */
    readonly domainIamRoleName?: string;

    /**
     * The list of log types that need to be enabled for exporting to CloudWatch Logs.
     *
     * The values in the list depend on the DB engine being used. For more information, see [Publishing Database Logs to Amazon CloudWatch Logs](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the *Amazon Aurora User Guide* .
     *
     * *Aurora MySQL*
     *
     * Valid values: \`audit\` , \`error\` , \`general\` , \`slowquery\`
     *
     * *Aurora PostgreSQL*
     *
     * Valid values: \`postgresql\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-enablecloudwatchlogsexports
     */
    readonly enableCloudwatchLogsExports?: Array<string>;

    /**
     * A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster.
     *
     * By default, the HTTP endpoint is disabled.
     *
     * When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
     *
     * For more information, see [Using the Data API for Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-enablehttpendpoint
     */
    readonly enableHttpEndpoint?: boolean | cdk.IResolvable;

    /**
     * A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts.
     *
     * By default, mapping is disabled.
     *
     * For more information, see [IAM Database Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) in the *Amazon Aurora User Guide.*
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-enableiamdatabaseauthentication
     */
    readonly enableIamDatabaseAuthentication?: boolean | cdk.IResolvable;

    /**
     * The name of the database engine to be used for this DB cluster.
     *
     * Valid Values:
     *
     * - \`aurora\` (for MySQL 5.6-compatible Aurora)
     * - \`aurora-mysql\` (for MySQL 5.7-compatible and MySQL 8.0-compatible Aurora)
     * - \`aurora-postgresql\`
     * - \`mysql\`
     * - \`postgres\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-engine
     */
    readonly engine?: string;

    /**
     * The DB engine mode of the DB cluster, either \`provisioned\` , \`serverless\` , \`parallelquery\` , \`global\` , or \`multimaster\` .
     *
     * The \`serverless\` engine mode only applies for Aurora Serverless v1 DB clusters.
     *
     * The \`parallelquery\` engine mode isn't required for Aurora MySQL version 1.23 and higher 1.x versions, and version 2.09 and higher 2.x versions.
     *
     * The \`global\` engine mode isn't required for Aurora MySQL version 1.22 and higher 1.x versions, and \`global\` engine mode isn't required for any 2.x versions.
     *
     * The \`multimaster\` engine mode only applies for DB clusters created with Aurora MySQL version 5.6.10a.
     *
     * For Aurora PostgreSQL, the \`global\` engine mode isn't required, and both the \`parallelquery\` and the \`multimaster\` engine modes currently aren't supported.
     *
     * Limitations and requirements apply to some DB engine modes. For more information, see the following sections in the *Amazon Aurora User Guide* :
     *
     * - [Limitations of Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations)
     * - [Limitations of Parallel Query](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-mysql-parallel-query.html#aurora-mysql-parallel-query-limitations)
     * - [Limitations of Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html#aurora-global-database.limitations)
     * - [Limitations of Multi-Master Clusters](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations)
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-enginemode
     */
    readonly engineMode?: string;

    /**
     * The version number of the database engine to use.
     *
     * To list all of the available engine versions for \`aurora\` (for MySQL 5.6-compatible Aurora), use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"\`
     *
     * To list all of the available engine versions for \`aurora-mysql\` (for MySQL 5.7-compatible Aurora), use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"\`
     *
     * To list all of the available engine versions for \`aurora-postgresql\` , use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-engineversion
     */
    readonly engineVersion?: string;

    /**
     * If you are configuring an Aurora global database cluster and want your Aurora DB cluster to be a secondary member in the global database cluster, specify the global cluster ID of the global database cluster.
     *
     * To define the primary database cluster of the global cluster, use the [AWS::RDS::GlobalCluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html) resource.
     *
     * If you aren't configuring a global database cluster, don't specify this property.
     *
     * > To remove the DB cluster from a global database cluster, specify an empty value for the \`GlobalClusterIdentifier\` property.
     *
     * For information about Aurora global databases, see [Working with Amazon Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-globalclusteridentifier
     */
    readonly globalClusterIdentifier?: string;

    /**
     * The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.
     *
     * For information about valid IOPS values, see [Provisioned IOPS storage](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the *Amazon RDS User Guide* .
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Constraints: Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-iops
     */
    readonly iops?: number;

    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such as \`arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef\` .
     *
     * If you enable the \`StorageEncrypted\` property but don't specify this property, the default KMS key is used. If you specify this property, you must set the \`StorageEncrypted\` property to \`true\` .
     *
     * If you specify the \`SnapshotIdentifier\` property, the \`StorageEncrypted\` property value is inherited from the snapshot, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-kmskeyid
     */
    readonly kmsKeyId?: string;

    /**
     * A value that indicates whether to manage the master user password with AWS Secrets Manager.
     *
     * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
     *
     * Constraints:
     *
     * - Can't manage the master user password with AWS Secrets Manager if \`MasterUserPassword\` is specified.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-managemasteruserpassword
     */
    readonly manageMasterUserPassword?: boolean | cdk.IResolvable;

    /**
     * The name of the master user for the DB cluster.
     *
     * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-masterusername
     */
    readonly masterUsername?: string;

    /**
     * The master password for the DB instance.
     *
     * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-masteruserpassword
     */
    readonly masterUserPassword?: string;

    /**
     * Contains the secret managed by RDS in AWS Secrets Manager for the master user password.
     *
     * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-masterusersecret
     */
    readonly masterUserSecret?: cdk.IResolvable | CfnDBCluster.MasterUserSecretProperty;

    /**
     * The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster.
     *
     * To turn off collecting Enhanced Monitoring metrics, specify 0. The default is 0.
     *
     * If \`MonitoringRoleArn\` is specified, also set \`MonitoringInterval\` to a value other than 0.
     *
     * Valid Values: \`0, 1, 5, 10, 15, 30, 60\`
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @default - 0
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-monitoringinterval
     */
    readonly monitoringInterval?: number;

    /**
     * The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.
     *
     * An example is \`arn:aws:iam:123456789012:role/emaccess\` . For information on creating a monitoring role, see [Setting up and enabling Enhanced Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling) in the *Amazon RDS User Guide* .
     *
     * If \`MonitoringInterval\` is set to a value other than 0, supply a \`MonitoringRoleArn\` value.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-monitoringrolearn
     */
    readonly monitoringRoleArn?: string;

    /**
     * The network type of the DB cluster.
     *
     * Valid values:
     *
     * - \`IPV4\`
     * - \`DUAL\`
     *
     * The network type is determined by the \`DBSubnetGroup\` specified for the DB cluster. A \`DBSubnetGroup\` can support only the IPv4 protocol or the IPv4 and IPv6 protocols ( \`DUAL\` ).
     *
     * For more information, see [Working with a DB instance in a VPC](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the *Amazon Aurora User Guide.*
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-networktype
     */
    readonly networkType?: string;

    /**
     * A value that indicates whether to turn on Performance Insights for the DB cluster.
     *
     * For more information, see [Using Amazon Performance Insights](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the *Amazon RDS User Guide* .
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-performanceinsightsenabled
     */
    readonly performanceInsightsEnabled?: boolean | cdk.IResolvable;

    /**
     * The AWS KMS key identifier for encryption of Performance Insights data.
     *
     * The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
     *
     * If you don't specify a value for \`PerformanceInsightsKMSKeyId\` , then Amazon RDS uses your default KMS key. There is a default KMS key for your AWS account . Your AWS account has a different default KMS key for each AWS Region .
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-performanceinsightskmskeyid
     */
    readonly performanceInsightsKmsKeyId?: string;

    /**
     * The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:.
     *
     * - 7
     * - *month* * 31, where *month* is a number of months from 1-23
     * - 731
     *
     * For example, the following values are valid:
     *
     * - 93 (3 months * 31)
     * - 341 (11 months * 31)
     * - 589 (19 months * 31)
     * - 731
     *
     * If you specify a retention period such as 94, which isn't a valid value, RDS issues an error.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-performanceinsightsretentionperiod
     */
    readonly performanceInsightsRetentionPeriod?: number;

    /**
     * The port number on which the DB instances in the DB cluster accept connections.
     *
     * Default:
     *
     * - When \`EngineMode\` is \`provisioned\` , \`3306\` (for both Aurora MySQL and Aurora PostgreSQL)
     * - When \`EngineMode\` is \`serverless\` :
     *
     * - \`3306\` when \`Engine\` is \`aurora\` or \`aurora-mysql\`
     * - \`5432\` when \`Engine\` is \`aurora-postgresql\`
     *
     * > The \`No interruption\` on update behavior only applies to DB clusters. If you are updating a DB instance, see [Port](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-port) for the AWS::RDS::DBInstance resource.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-port
     */
    readonly port?: number;

    /**
     * The daily time range during which automated backups are created.
     *
     * For more information, see [Backup Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow) in the *Amazon Aurora User Guide.*
     *
     * Constraints:
     *
     * - Must be in the format \`hh24:mi-hh24:mi\` .
     * - Must be in Universal Coordinated Time (UTC).
     * - Must not conflict with the preferred maintenance window.
     * - Must be at least 30 minutes.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-preferredbackupwindow
     */
    readonly preferredBackupWindow?: string;

    /**
     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     *
     * Format: \`ddd:hh24:mi-ddd:hh24:mi\`
     *
     * The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see [Adjusting the Preferred DB Cluster Maintenance Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora) in the *Amazon Aurora User Guide.*
     *
     * Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
     *
     * Constraints: Minimum 30-minute window.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-preferredmaintenancewindow
     */
    readonly preferredMaintenanceWindow?: string;

    /**
     * A value that indicates whether the DB cluster is publicly accessible.
     *
     * When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.
     *
     * When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.
     *
     * Default: The default behavior varies depending on whether \`DBSubnetGroupName\` is specified.
     *
     * If \`DBSubnetGroupName\` isn't specified, and \`PubliclyAccessible\` isn't specified, the following applies:
     *
     * - If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.
     * - If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.
     *
     * If \`DBSubnetGroupName\` is specified, and \`PubliclyAccessible\` isn't specified, the following applies:
     *
     * - If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.
     * - If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-publiclyaccessible
     */
    readonly publiclyAccessible?: boolean | cdk.IResolvable;

    /**
     * The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-replicationsourceidentifier
     */
    readonly replicationSourceIdentifier?: string;

    /**
     * The date and time to restore the DB cluster to.
     *
     * Valid Values: Value must be a time in Universal Coordinated Time (UTC) format
     *
     * Constraints:
     *
     * - Must be before the latest restorable time for the DB instance
     * - Must be specified if \`UseLatestRestorableTime\` parameter isn't provided
     * - Can't be specified if the \`UseLatestRestorableTime\` parameter is enabled
     * - Can't be specified if the \`RestoreType\` parameter is \`copy-on-write\`
     *
     * Example: \`2015-03-07T23:45:00Z\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-restoretotime
     */
    readonly restoreToTime?: string;

    /**
     * The type of restore to be performed. You can specify one of the following values:.
     *
     * - \`full-copy\` - The new DB cluster is restored as a full copy of the source DB cluster.
     * - \`copy-on-write\` - The new DB cluster is restored as a clone of the source DB cluster.
     *
     * Constraints: You can't specify \`copy-on-write\` if the engine version of the source DB cluster is earlier than 1.11.
     *
     * If you don't specify a \`RestoreType\` value, then the new DB cluster is restored as a full copy of the source DB cluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - "full-copy"
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-restoretype
     */
    readonly restoreType?: string;

    /**
     * The \`ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless DB cluster.
     *
     * This property is only supported for Aurora Serverless v1. For Aurora Serverless v2, use \`ServerlessV2ScalingConfiguration\` property.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-scalingconfiguration
     */
    readonly scalingConfiguration?: cdk.IResolvable | CfnDBCluster.ScalingConfigurationProperty;

    /**
     * The \`ServerlessV2ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless V2 DB cluster.
     *
     * This property is only supported for Aurora Serverless v2. For Aurora Serverless v1, use \`ScalingConfiguration\` property.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-serverlessv2scalingconfiguration
     */
    readonly serverlessV2ScalingConfiguration?: cdk.IResolvable | CfnDBCluster.ServerlessV2ScalingConfigurationProperty;

    /**
     * The identifier for the DB snapshot or DB cluster snapshot to restore from.
     *
     * You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.
     *
     * After you restore a DB cluster with a \`SnapshotIdentifier\` property, you must specify the same \`SnapshotIdentifier\` property for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the data in the database is not changed. However, if you don't specify the \`SnapshotIdentifier\` property, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, a new DB cluster is restored from the specified \`SnapshotIdentifier\` property, and the original DB cluster is deleted.
     *
     * If you specify the \`SnapshotIdentifier\` property to restore a DB cluster (as opposed to specifying it for DB cluster updates), then don't specify the following properties:
     *
     * - \`GlobalClusterIdentifier\`
     * - \`MasterUsername\`
     * - \`MasterUserPassword\`
     * - \`ReplicationSourceIdentifier\`
     * - \`RestoreType\`
     * - \`SourceDBClusterIdentifier\`
     * - \`SourceRegion\`
     * - \`StorageEncrypted\` (for an encrypted snapshot)
     * - \`UseLatestRestorableTime\`
     *
     * Constraints:
     *
     * - Must match the identifier of an existing Snapshot.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-snapshotidentifier
     */
    readonly snapshotIdentifier?: string;

    /**
     * When restoring a DB cluster to a point in time, the identifier of the source DB cluster from which to restore.
     *
     * Constraints:
     *
     * - Must match the identifier of an existing DBCluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-sourcedbclusteridentifier
     */
    readonly sourceDbClusterIdentifier?: string;

    /**
     * The AWS Region which contains the source DB cluster when replicating a DB cluster. For example, \`us-east-1\` .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-sourceregion
     */
    readonly sourceRegion?: string;

    /**
     * Indicates whether the DB cluster is encrypted.
     *
     * If you specify the \`KmsKeyId\` property, then you must enable encryption.
     *
     * If you specify the \`SourceDBClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
     *
     * If you specify the \`SnapshotIdentifier\` and the specified snapshot is encrypted, don't specify this property. The value is inherited from the snapshot, and the specified \`KmsKeyId\` property is used.
     *
     * If you specify the \`SnapshotIdentifier\` and the specified snapshot isn't encrypted, you can use this property to specify that the restored DB cluster is encrypted. Specify the \`KmsKeyId\` property for the KMS key to use for encryption. If you don't want the restored DB cluster to be encrypted, then don't set this property or set it to \`false\` .
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-storageencrypted
     */
    readonly storageEncrypted?: boolean | cdk.IResolvable;

    /**
     * Specifies the storage type to be associated with the DB cluster.
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid values: \`io1\`
     *
     * When specified, a value for the \`Iops\` parameter is required.
     *
     * Default: \`io1\`
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-storagetype
     */
    readonly storageType?: string;

    /**
     * An optional array of key-value pairs to apply to this DB cluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnDBCluster.TagProperty> | cdk.IResolvable;

    /**
     * A value that indicates whether to restore the DB cluster to the latest restorable backup time.
     *
     * By default, the DB cluster is not restored to the latest restorable backup time.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-uselatestrestorabletime
     */
    readonly useLatestRestorableTime?: boolean | cdk.IResolvable;

    /**
     * A list of EC2 VPC security groups to associate with this DB cluster.
     *
     * If you plan to update the resource, don't specify VPC security groups in a shared VPC.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-endpoint.html#cfn-rds-dbcluster-endpoint-vpcsecuritygroupids
     */
    readonly vpcSecurityGroupIds?: Array<string>;
  }

  /**
   * The \`ReadEndpoint\` return value specifies the reader endpoint for the DB cluster.
   *
   * The reader endpoint for a DB cluster load-balances connections across the Aurora Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Aurora distributes the connection requests among the Aurora Replicas in the DB cluster. This functionality can help balance your read workload across multiple Aurora Replicas in your DB cluster.
   *
   * If a failover occurs, and the Aurora Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.
   *
   * For more information about Aurora endpoints, see [Amazon Aurora connection management](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Overview.Endpoints.html) in the *Amazon Aurora User Guide* .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html
   */
  export interface ReadEndpointProperty {
    /**
     * The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-allocatedstorage
     */
    readonly allocatedStorage?: number;

    /**
     * Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster.
     *
     * IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other Amazon Web Services on your behalf.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-associatedroles
     */
    readonly associatedRoles?: Array<CfnDBCluster.DBClusterRoleProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * A value that indicates whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window.
     *
     * By default, minor engine upgrades are applied automatically.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-autominorversionupgrade
     */
    readonly autoMinorVersionUpgrade?: boolean | cdk.IResolvable;

    /**
     * A list of Availability Zones (AZs) where instances in the DB cluster can be created.
     *
     * For information on AWS Regions and Availability Zones, see [Choosing the Regions and Availability Zones](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-availabilityzones
     */
    readonly availabilityZones?: Array<string>;

    /**
     * The target backtrack window, in seconds. To disable backtracking, set this value to 0.
     *
     * > Currently, Backtrack is only supported for Aurora MySQL DB clusters.
     *
     * Default: 0
     *
     * Constraints:
     *
     * - If specified, this value must be set to a number from 0 to 259,200 (72 hours).
     *
     * Valid for: Aurora MySQL DB clusters only
     *
     * @default - 0
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-backtrackwindow
     */
    readonly backtrackWindow?: number;

    /**
     * The number of days for which automated backups are retained.
     *
     * Default: 1
     *
     * Constraints:
     *
     * - Must be a value from 1 to 35
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - 1
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-backupretentionperiod
     */
    readonly backupRetentionPeriod?: number;

    /**
     * A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster.
     *
     * The default is not to copy them.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-copytagstosnapshot
     */
    readonly copyTagsToSnapshot?: boolean | cdk.IResolvable;

    /**
     * The name of your database.
     *
     * If you don't provide a name, then Amazon RDS won't create a database in this DB cluster. For naming constraints, see [Naming Constraints](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-databasename
     */
    readonly databaseName?: string;

    /**
     * The DB cluster identifier. This parameter is stored as a lowercase string.
     *
     * Constraints:
     *
     * - Must contain from 1 to 63 letters, numbers, or hyphens.
     * - First character must be a letter.
     * - Can't end with a hyphen or contain two consecutive hyphens.
     *
     * Example: \`my-cluster1\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-dbclusteridentifier
     */
    readonly dbClusterIdentifier?: string;

    /**
     * The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all AWS Regions , or for all database engines.
     *
     * For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the *Amazon RDS User Guide* .
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-dbclusterinstanceclass
     */
    readonly dbClusterInstanceClass?: string;

    /**
     * The name of the DB cluster parameter group to associate with this DB cluster.
     *
     * > If you apply a parameter group to an existing DB cluster, then its DB instances might need to reboot. This can result in an outage while the DB instances are rebooting.
     * >
     * > If you apply a change to parameter group associated with a stopped DB cluster, then the update stack waits until the DB cluster is started.
     *
     * To list all of the available DB cluster parameter group names, use the following command:
     *
     * \`aws rds describe-db-cluster-parameter-groups --query "DBClusterParameterGroups[].DBClusterParameterGroupName" --output text\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - "default.aurora5.6"
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-dbclusterparametergroupname
     */
    readonly dbClusterParameterGroupName?: string;

    /**
     * The name of the DB parameter group to apply to all instances of the DB cluster.
     *
     * > When you apply a parameter group using the \`DBInstanceParameterGroupName\` parameter, the DB cluster isn't rebooted automatically. Also, parameter changes are applied immediately rather than during the next maintenance window.
     *
     * Default: The existing name setting
     *
     * Constraints:
     *
     * - The DB parameter group must be in the same DB parameter group family as this DB cluster.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-dbinstanceparametergroupname
     */
    readonly dbInstanceParameterGroupName?: string;

    /**
     * A DB subnet group that you want to associate with this DB cluster.
     *
     * If you are restoring a DB cluster to a point in time with \`RestoreType\` set to \`copy-on-write\` , and don't specify a DB subnet group name, then the DB cluster is restored with a default DB subnet group.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-dbsubnetgroupname
     */
    readonly dbSubnetGroupName?: string;

    /**
     * Reserved for future use.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-dbsystemid
     */
    readonly dbSystemId?: string;

    /**
     * A value that indicates whether the DB cluster has deletion protection enabled.
     *
     * The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-deletionprotection
     */
    readonly deletionProtection?: boolean | cdk.IResolvable;

    /**
     * Indicates the directory ID of the Active Directory to create the DB cluster.
     *
     * For Amazon Aurora DB clusters, Amazon RDS can use Kerberos authentication to authenticate users that connect to the DB cluster.
     *
     * For more information, see [Kerberos authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-domain
     */
    readonly domain?: string;

    /**
     * Specifies the name of the IAM role to use when making API calls to the Directory Service.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-domainiamrolename
     */
    readonly domainIamRoleName?: string;

    /**
     * The list of log types that need to be enabled for exporting to CloudWatch Logs.
     *
     * The values in the list depend on the DB engine being used. For more information, see [Publishing Database Logs to Amazon CloudWatch Logs](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the *Amazon Aurora User Guide* .
     *
     * *Aurora MySQL*
     *
     * Valid values: \`audit\` , \`error\` , \`general\` , \`slowquery\`
     *
     * *Aurora PostgreSQL*
     *
     * Valid values: \`postgresql\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-enablecloudwatchlogsexports
     */
    readonly enableCloudwatchLogsExports?: Array<string>;

    /**
     * A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster.
     *
     * By default, the HTTP endpoint is disabled.
     *
     * When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
     *
     * For more information, see [Using the Data API for Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-enablehttpendpoint
     */
    readonly enableHttpEndpoint?: boolean | cdk.IResolvable;

    /**
     * A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts.
     *
     * By default, mapping is disabled.
     *
     * For more information, see [IAM Database Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) in the *Amazon Aurora User Guide.*
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-enableiamdatabaseauthentication
     */
    readonly enableIamDatabaseAuthentication?: boolean | cdk.IResolvable;

    /**
     * The name of the database engine to be used for this DB cluster.
     *
     * Valid Values:
     *
     * - \`aurora\` (for MySQL 5.6-compatible Aurora)
     * - \`aurora-mysql\` (for MySQL 5.7-compatible and MySQL 8.0-compatible Aurora)
     * - \`aurora-postgresql\`
     * - \`mysql\`
     * - \`postgres\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-engine
     */
    readonly engine?: string;

    /**
     * The DB engine mode of the DB cluster, either \`provisioned\` , \`serverless\` , \`parallelquery\` , \`global\` , or \`multimaster\` .
     *
     * The \`serverless\` engine mode only applies for Aurora Serverless v1 DB clusters.
     *
     * The \`parallelquery\` engine mode isn't required for Aurora MySQL version 1.23 and higher 1.x versions, and version 2.09 and higher 2.x versions.
     *
     * The \`global\` engine mode isn't required for Aurora MySQL version 1.22 and higher 1.x versions, and \`global\` engine mode isn't required for any 2.x versions.
     *
     * The \`multimaster\` engine mode only applies for DB clusters created with Aurora MySQL version 5.6.10a.
     *
     * For Aurora PostgreSQL, the \`global\` engine mode isn't required, and both the \`parallelquery\` and the \`multimaster\` engine modes currently aren't supported.
     *
     * Limitations and requirements apply to some DB engine modes. For more information, see the following sections in the *Amazon Aurora User Guide* :
     *
     * - [Limitations of Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations)
     * - [Limitations of Parallel Query](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-mysql-parallel-query.html#aurora-mysql-parallel-query-limitations)
     * - [Limitations of Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html#aurora-global-database.limitations)
     * - [Limitations of Multi-Master Clusters](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations)
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-enginemode
     */
    readonly engineMode?: string;

    /**
     * The version number of the database engine to use.
     *
     * To list all of the available engine versions for \`aurora\` (for MySQL 5.6-compatible Aurora), use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"\`
     *
     * To list all of the available engine versions for \`aurora-mysql\` (for MySQL 5.7-compatible Aurora), use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"\`
     *
     * To list all of the available engine versions for \`aurora-postgresql\` , use the following command:
     *
     * \`aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-engineversion
     */
    readonly engineVersion?: string;

    /**
     * If you are configuring an Aurora global database cluster and want your Aurora DB cluster to be a secondary member in the global database cluster, specify the global cluster ID of the global database cluster.
     *
     * To define the primary database cluster of the global cluster, use the [AWS::RDS::GlobalCluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html) resource.
     *
     * If you aren't configuring a global database cluster, don't specify this property.
     *
     * > To remove the DB cluster from a global database cluster, specify an empty value for the \`GlobalClusterIdentifier\` property.
     *
     * For information about Aurora global databases, see [Working with Amazon Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html) in the *Amazon Aurora User Guide* .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-globalclusteridentifier
     */
    readonly globalClusterIdentifier?: string;

    /**
     * The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.
     *
     * For information about valid IOPS values, see [Provisioned IOPS storage](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the *Amazon RDS User Guide* .
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Constraints: Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-iops
     */
    readonly iops?: number;

    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such as \`arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef\` .
     *
     * If you enable the \`StorageEncrypted\` property but don't specify this property, the default KMS key is used. If you specify this property, you must set the \`StorageEncrypted\` property to \`true\` .
     *
     * If you specify the \`SnapshotIdentifier\` property, the \`StorageEncrypted\` property value is inherited from the snapshot, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-kmskeyid
     */
    readonly kmsKeyId?: string;

    /**
     * A value that indicates whether to manage the master user password with AWS Secrets Manager.
     *
     * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
     *
     * Constraints:
     *
     * - Can't manage the master user password with AWS Secrets Manager if \`MasterUserPassword\` is specified.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-managemasteruserpassword
     */
    readonly manageMasterUserPassword?: boolean | cdk.IResolvable;

    /**
     * The name of the master user for the DB cluster.
     *
     * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-masterusername
     */
    readonly masterUsername?: string;

    /**
     * The master password for the DB instance.
     *
     * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-masteruserpassword
     */
    readonly masterUserPassword?: string;

    /**
     * Contains the secret managed by RDS in AWS Secrets Manager for the master user password.
     *
     * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-masterusersecret
     */
    readonly masterUserSecret?: cdk.IResolvable | CfnDBCluster.MasterUserSecretProperty;

    /**
     * The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster.
     *
     * To turn off collecting Enhanced Monitoring metrics, specify 0. The default is 0.
     *
     * If \`MonitoringRoleArn\` is specified, also set \`MonitoringInterval\` to a value other than 0.
     *
     * Valid Values: \`0, 1, 5, 10, 15, 30, 60\`
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @default - 0
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-monitoringinterval
     */
    readonly monitoringInterval?: number;

    /**
     * The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.
     *
     * An example is \`arn:aws:iam:123456789012:role/emaccess\` . For information on creating a monitoring role, see [Setting up and enabling Enhanced Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling) in the *Amazon RDS User Guide* .
     *
     * If \`MonitoringInterval\` is set to a value other than 0, supply a \`MonitoringRoleArn\` value.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-monitoringrolearn
     */
    readonly monitoringRoleArn?: string;

    /**
     * The network type of the DB cluster.
     *
     * Valid values:
     *
     * - \`IPV4\`
     * - \`DUAL\`
     *
     * The network type is determined by the \`DBSubnetGroup\` specified for the DB cluster. A \`DBSubnetGroup\` can support only the IPv4 protocol or the IPv4 and IPv6 protocols ( \`DUAL\` ).
     *
     * For more information, see [Working with a DB instance in a VPC](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the *Amazon Aurora User Guide.*
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-networktype
     */
    readonly networkType?: string;

    /**
     * A value that indicates whether to turn on Performance Insights for the DB cluster.
     *
     * For more information, see [Using Amazon Performance Insights](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the *Amazon RDS User Guide* .
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-performanceinsightsenabled
     */
    readonly performanceInsightsEnabled?: boolean | cdk.IResolvable;

    /**
     * The AWS KMS key identifier for encryption of Performance Insights data.
     *
     * The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
     *
     * If you don't specify a value for \`PerformanceInsightsKMSKeyId\` , then Amazon RDS uses your default KMS key. There is a default KMS key for your AWS account . Your AWS account has a different default KMS key for each AWS Region .
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-performanceinsightskmskeyid
     */
    readonly performanceInsightsKmsKeyId?: string;

    /**
     * The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:.
     *
     * - 7
     * - *month* * 31, where *month* is a number of months from 1-23
     * - 731
     *
     * For example, the following values are valid:
     *
     * - 93 (3 months * 31)
     * - 341 (11 months * 31)
     * - 589 (19 months * 31)
     * - 731
     *
     * If you specify a retention period such as 94, which isn't a valid value, RDS issues an error.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-performanceinsightsretentionperiod
     */
    readonly performanceInsightsRetentionPeriod?: number;

    /**
     * The port number on which the DB instances in the DB cluster accept connections.
     *
     * Default:
     *
     * - When \`EngineMode\` is \`provisioned\` , \`3306\` (for both Aurora MySQL and Aurora PostgreSQL)
     * - When \`EngineMode\` is \`serverless\` :
     *
     * - \`3306\` when \`Engine\` is \`aurora\` or \`aurora-mysql\`
     * - \`5432\` when \`Engine\` is \`aurora-postgresql\`
     *
     * > The \`No interruption\` on update behavior only applies to DB clusters. If you are updating a DB instance, see [Port](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-port) for the AWS::RDS::DBInstance resource.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-port
     */
    readonly port?: number;

    /**
     * The daily time range during which automated backups are created.
     *
     * For more information, see [Backup Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow) in the *Amazon Aurora User Guide.*
     *
     * Constraints:
     *
     * - Must be in the format \`hh24:mi-hh24:mi\` .
     * - Must be in Universal Coordinated Time (UTC).
     * - Must not conflict with the preferred maintenance window.
     * - Must be at least 30 minutes.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-preferredbackupwindow
     */
    readonly preferredBackupWindow?: string;

    /**
     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     *
     * Format: \`ddd:hh24:mi-ddd:hh24:mi\`
     *
     * The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see [Adjusting the Preferred DB Cluster Maintenance Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora) in the *Amazon Aurora User Guide.*
     *
     * Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
     *
     * Constraints: Minimum 30-minute window.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-preferredmaintenancewindow
     */
    readonly preferredMaintenanceWindow?: string;

    /**
     * A value that indicates whether the DB cluster is publicly accessible.
     *
     * When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.
     *
     * When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.
     *
     * Default: The default behavior varies depending on whether \`DBSubnetGroupName\` is specified.
     *
     * If \`DBSubnetGroupName\` isn't specified, and \`PubliclyAccessible\` isn't specified, the following applies:
     *
     * - If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.
     * - If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.
     *
     * If \`DBSubnetGroupName\` is specified, and \`PubliclyAccessible\` isn't specified, the following applies:
     *
     * - If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.
     * - If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-publiclyaccessible
     */
    readonly publiclyAccessible?: boolean | cdk.IResolvable;

    /**
     * The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-replicationsourceidentifier
     */
    readonly replicationSourceIdentifier?: string;

    /**
     * The date and time to restore the DB cluster to.
     *
     * Valid Values: Value must be a time in Universal Coordinated Time (UTC) format
     *
     * Constraints:
     *
     * - Must be before the latest restorable time for the DB instance
     * - Must be specified if \`UseLatestRestorableTime\` parameter isn't provided
     * - Can't be specified if the \`UseLatestRestorableTime\` parameter is enabled
     * - Can't be specified if the \`RestoreType\` parameter is \`copy-on-write\`
     *
     * Example: \`2015-03-07T23:45:00Z\`
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-restoretotime
     */
    readonly restoreToTime?: string;

    /**
     * The type of restore to be performed. You can specify one of the following values:.
     *
     * - \`full-copy\` - The new DB cluster is restored as a full copy of the source DB cluster.
     * - \`copy-on-write\` - The new DB cluster is restored as a clone of the source DB cluster.
     *
     * Constraints: You can't specify \`copy-on-write\` if the engine version of the source DB cluster is earlier than 1.11.
     *
     * If you don't specify a \`RestoreType\` value, then the new DB cluster is restored as a full copy of the source DB cluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @default - "full-copy"
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-restoretype
     */
    readonly restoreType?: string;

    /**
     * The \`ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless DB cluster.
     *
     * This property is only supported for Aurora Serverless v1. For Aurora Serverless v2, use \`ServerlessV2ScalingConfiguration\` property.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-scalingconfiguration
     */
    readonly scalingConfiguration?: cdk.IResolvable | CfnDBCluster.ScalingConfigurationProperty;

    /**
     * The \`ServerlessV2ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless V2 DB cluster.
     *
     * This property is only supported for Aurora Serverless v2. For Aurora Serverless v1, use \`ScalingConfiguration\` property.
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-serverlessv2scalingconfiguration
     */
    readonly serverlessV2ScalingConfiguration?: cdk.IResolvable | CfnDBCluster.ServerlessV2ScalingConfigurationProperty;

    /**
     * The identifier for the DB snapshot or DB cluster snapshot to restore from.
     *
     * You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.
     *
     * After you restore a DB cluster with a \`SnapshotIdentifier\` property, you must specify the same \`SnapshotIdentifier\` property for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the data in the database is not changed. However, if you don't specify the \`SnapshotIdentifier\` property, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, a new DB cluster is restored from the specified \`SnapshotIdentifier\` property, and the original DB cluster is deleted.
     *
     * If you specify the \`SnapshotIdentifier\` property to restore a DB cluster (as opposed to specifying it for DB cluster updates), then don't specify the following properties:
     *
     * - \`GlobalClusterIdentifier\`
     * - \`MasterUsername\`
     * - \`MasterUserPassword\`
     * - \`ReplicationSourceIdentifier\`
     * - \`RestoreType\`
     * - \`SourceDBClusterIdentifier\`
     * - \`SourceRegion\`
     * - \`StorageEncrypted\` (for an encrypted snapshot)
     * - \`UseLatestRestorableTime\`
     *
     * Constraints:
     *
     * - Must match the identifier of an existing Snapshot.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-snapshotidentifier
     */
    readonly snapshotIdentifier?: string;

    /**
     * When restoring a DB cluster to a point in time, the identifier of the source DB cluster from which to restore.
     *
     * Constraints:
     *
     * - Must match the identifier of an existing DBCluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-sourcedbclusteridentifier
     */
    readonly sourceDbClusterIdentifier?: string;

    /**
     * The AWS Region which contains the source DB cluster when replicating a DB cluster. For example, \`us-east-1\` .
     *
     * Valid for: Aurora DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-sourceregion
     */
    readonly sourceRegion?: string;

    /**
     * Indicates whether the DB cluster is encrypted.
     *
     * If you specify the \`KmsKeyId\` property, then you must enable encryption.
     *
     * If you specify the \`SourceDBClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
     *
     * If you specify the \`SnapshotIdentifier\` and the specified snapshot is encrypted, don't specify this property. The value is inherited from the snapshot, and the specified \`KmsKeyId\` property is used.
     *
     * If you specify the \`SnapshotIdentifier\` and the specified snapshot isn't encrypted, you can use this property to specify that the restored DB cluster is encrypted. Specify the \`KmsKeyId\` property for the KMS key to use for encryption. If you don't want the restored DB cluster to be encrypted, then don't set this property or set it to \`false\` .
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-storageencrypted
     */
    readonly storageEncrypted?: boolean | cdk.IResolvable;

    /**
     * Specifies the storage type to be associated with the DB cluster.
     *
     * This setting is required to create a Multi-AZ DB cluster.
     *
     * Valid values: \`io1\`
     *
     * When specified, a value for the \`Iops\` parameter is required.
     *
     * Default: \`io1\`
     *
     * Valid for: Multi-AZ DB clusters only
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-storagetype
     */
    readonly storageType?: string;

    /**
     * An optional array of key-value pairs to apply to this DB cluster.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnDBCluster.TagProperty> | cdk.IResolvable;

    /**
     * A value that indicates whether to restore the DB cluster to the latest restorable backup time.
     *
     * By default, the DB cluster is not restored to the latest restorable backup time.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-uselatestrestorabletime
     */
    readonly useLatestRestorableTime?: boolean | cdk.IResolvable;

    /**
     * A list of EC2 VPC security groups to associate with this DB cluster.
     *
     * If you plan to update the resource, don't specify VPC security groups in a shared VPC.
     *
     * Valid for: Aurora DB clusters and Multi-AZ DB clusters
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-readendpoint.html#cfn-rds-dbcluster-readendpoint-vpcsecuritygroupids
     */
    readonly vpcSecurityGroupIds?: Array<string>;
  }
}

/**
 * Properties for defining a \`CfnDBCluster\`
 *
 * @struct
 * @stability external
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html
 */
export interface CfnDBClusterProps {
  /**
   * The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
   *
   * This setting is required to create a Multi-AZ DB cluster.
   *
   * Valid for: Multi-AZ DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-allocatedstorage
   */
  readonly allocatedStorage?: number;

  /**
   * Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster.
   *
   * IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other Amazon Web Services on your behalf.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-associatedroles
   */
  readonly associatedRoles?: Array<CfnDBCluster.DBClusterRoleProperty | cdk.IResolvable> | cdk.IResolvable;

  /**
   * A value that indicates whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window.
   *
   * By default, minor engine upgrades are applied automatically.
   *
   * Valid for: Multi-AZ DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-autominorversionupgrade
   */
  readonly autoMinorVersionUpgrade?: boolean | cdk.IResolvable;

  /**
   * A list of Availability Zones (AZs) where instances in the DB cluster can be created.
   *
   * For information on AWS Regions and Availability Zones, see [Choosing the Regions and Availability Zones](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html) in the *Amazon Aurora User Guide* .
   *
   * Valid for: Aurora DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-availabilityzones
   */
  readonly availabilityZones?: Array<string>;

  /**
   * The target backtrack window, in seconds. To disable backtracking, set this value to 0.
   *
   * > Currently, Backtrack is only supported for Aurora MySQL DB clusters.
   *
   * Default: 0
   *
   * Constraints:
   *
   * - If specified, this value must be set to a number from 0 to 259,200 (72 hours).
   *
   * Valid for: Aurora MySQL DB clusters only
   *
   * @default - 0
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-backtrackwindow
   */
  readonly backtrackWindow?: number;

  /**
   * The number of days for which automated backups are retained.
   *
   * Default: 1
   *
   * Constraints:
   *
   * - Must be a value from 1 to 35
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @default - 1
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-backupretentionperiod
   */
  readonly backupRetentionPeriod?: number;

  /**
   * A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster.
   *
   * The default is not to copy them.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-copytagstosnapshot
   */
  readonly copyTagsToSnapshot?: boolean | cdk.IResolvable;

  /**
   * The name of your database.
   *
   * If you don't provide a name, then Amazon RDS won't create a database in this DB cluster. For naming constraints, see [Naming Constraints](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the *Amazon Aurora User Guide* .
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-databasename
   */
  readonly databaseName?: string;

  /**
   * The DB cluster identifier. This parameter is stored as a lowercase string.
   *
   * Constraints:
   *
   * - Must contain from 1 to 63 letters, numbers, or hyphens.
   * - First character must be a letter.
   * - Can't end with a hyphen or contain two consecutive hyphens.
   *
   * Example: \`my-cluster1\`
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbclusteridentifier
   */
  readonly dbClusterIdentifier?: string;

  /**
   * The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all AWS Regions , or for all database engines.
   *
   * For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the *Amazon RDS User Guide* .
   *
   * This setting is required to create a Multi-AZ DB cluster.
   *
   * Valid for: Multi-AZ DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbclusterinstanceclass
   */
  readonly dbClusterInstanceClass?: string;

  /**
   * The name of the DB cluster parameter group to associate with this DB cluster.
   *
   * > If you apply a parameter group to an existing DB cluster, then its DB instances might need to reboot. This can result in an outage while the DB instances are rebooting.
   * >
   * > If you apply a change to parameter group associated with a stopped DB cluster, then the update stack waits until the DB cluster is started.
   *
   * To list all of the available DB cluster parameter group names, use the following command:
   *
   * \`aws rds describe-db-cluster-parameter-groups --query "DBClusterParameterGroups[].DBClusterParameterGroupName" --output text\`
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @default - "default.aurora5.6"
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbclusterparametergroupname
   */
  readonly dbClusterParameterGroupName?: string;

  /**
   * The name of the DB parameter group to apply to all instances of the DB cluster.
   *
   * > When you apply a parameter group using the \`DBInstanceParameterGroupName\` parameter, the DB cluster isn't rebooted automatically. Also, parameter changes are applied immediately rather than during the next maintenance window.
   *
   * Default: The existing name setting
   *
   * Constraints:
   *
   * - The DB parameter group must be in the same DB parameter group family as this DB cluster.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbinstanceparametergroupname
   */
  readonly dbInstanceParameterGroupName?: string;

  /**
   * A DB subnet group that you want to associate with this DB cluster.
   *
   * If you are restoring a DB cluster to a point in time with \`RestoreType\` set to \`copy-on-write\` , and don't specify a DB subnet group name, then the DB cluster is restored with a default DB subnet group.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbsubnetgroupname
   */
  readonly dbSubnetGroupName?: string;

  /**
   * Reserved for future use.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbsystemid
   */
  readonly dbSystemId?: string;

  /**
   * A value that indicates whether the DB cluster has deletion protection enabled.
   *
   * The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-deletionprotection
   */
  readonly deletionProtection?: boolean | cdk.IResolvable;

  /**
   * Indicates the directory ID of the Active Directory to create the DB cluster.
   *
   * For Amazon Aurora DB clusters, Amazon RDS can use Kerberos authentication to authenticate users that connect to the DB cluster.
   *
   * For more information, see [Kerberos authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html) in the *Amazon Aurora User Guide* .
   *
   * Valid for: Aurora DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-domain
   */
  readonly domain?: string;

  /**
   * Specifies the name of the IAM role to use when making API calls to the Directory Service.
   *
   * Valid for: Aurora DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-domainiamrolename
   */
  readonly domainIamRoleName?: string;

  /**
   * The list of log types that need to be enabled for exporting to CloudWatch Logs.
   *
   * The values in the list depend on the DB engine being used. For more information, see [Publishing Database Logs to Amazon CloudWatch Logs](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the *Amazon Aurora User Guide* .
   *
   * *Aurora MySQL*
   *
   * Valid values: \`audit\` , \`error\` , \`general\` , \`slowquery\`
   *
   * *Aurora PostgreSQL*
   *
   * Valid values: \`postgresql\`
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enablecloudwatchlogsexports
   */
  readonly enableCloudwatchLogsExports?: Array<string>;

  /**
   * A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster.
   *
   * By default, the HTTP endpoint is disabled.
   *
   * When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
   *
   * For more information, see [Using the Data API for Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the *Amazon Aurora User Guide* .
   *
   * Valid for: Aurora DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enablehttpendpoint
   */
  readonly enableHttpEndpoint?: boolean | cdk.IResolvable;

  /**
   * A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts.
   *
   * By default, mapping is disabled.
   *
   * For more information, see [IAM Database Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) in the *Amazon Aurora User Guide.*
   *
   * Valid for: Aurora DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enableiamdatabaseauthentication
   */
  readonly enableIamDatabaseAuthentication?: boolean | cdk.IResolvable;

  /**
   * The name of the database engine to be used for this DB cluster.
   *
   * Valid Values:
   *
   * - \`aurora\` (for MySQL 5.6-compatible Aurora)
   * - \`aurora-mysql\` (for MySQL 5.7-compatible and MySQL 8.0-compatible Aurora)
   * - \`aurora-postgresql\`
   * - \`mysql\`
   * - \`postgres\`
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engine
   */
  readonly engine?: string;

  /**
   * The DB engine mode of the DB cluster, either \`provisioned\` , \`serverless\` , \`parallelquery\` , \`global\` , or \`multimaster\` .
   *
   * The \`serverless\` engine mode only applies for Aurora Serverless v1 DB clusters.
   *
   * The \`parallelquery\` engine mode isn't required for Aurora MySQL version 1.23 and higher 1.x versions, and version 2.09 and higher 2.x versions.
   *
   * The \`global\` engine mode isn't required for Aurora MySQL version 1.22 and higher 1.x versions, and \`global\` engine mode isn't required for any 2.x versions.
   *
   * The \`multimaster\` engine mode only applies for DB clusters created with Aurora MySQL version 5.6.10a.
   *
   * For Aurora PostgreSQL, the \`global\` engine mode isn't required, and both the \`parallelquery\` and the \`multimaster\` engine modes currently aren't supported.
   *
   * Limitations and requirements apply to some DB engine modes. For more information, see the following sections in the *Amazon Aurora User Guide* :
   *
   * - [Limitations of Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations)
   * - [Limitations of Parallel Query](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-mysql-parallel-query.html#aurora-mysql-parallel-query-limitations)
   * - [Limitations of Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html#aurora-global-database.limitations)
   * - [Limitations of Multi-Master Clusters](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations)
   *
   * Valid for: Aurora DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enginemode
   */
  readonly engineMode?: string;

  /**
   * The version number of the database engine to use.
   *
   * To list all of the available engine versions for \`aurora\` (for MySQL 5.6-compatible Aurora), use the following command:
   *
   * \`aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"\`
   *
   * To list all of the available engine versions for \`aurora-mysql\` (for MySQL 5.7-compatible Aurora), use the following command:
   *
   * \`aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"\`
   *
   * To list all of the available engine versions for \`aurora-postgresql\` , use the following command:
   *
   * \`aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"\`
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion
   */
  readonly engineVersion?: string;

  /**
   * If you are configuring an Aurora global database cluster and want your Aurora DB cluster to be a secondary member in the global database cluster, specify the global cluster ID of the global database cluster.
   *
   * To define the primary database cluster of the global cluster, use the [AWS::RDS::GlobalCluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html) resource.
   *
   * If you aren't configuring a global database cluster, don't specify this property.
   *
   * > To remove the DB cluster from a global database cluster, specify an empty value for the \`GlobalClusterIdentifier\` property.
   *
   * For information about Aurora global databases, see [Working with Amazon Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html) in the *Amazon Aurora User Guide* .
   *
   * Valid for: Aurora DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-globalclusteridentifier
   */
  readonly globalClusterIdentifier?: string;

  /**
   * The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.
   *
   * For information about valid IOPS values, see [Provisioned IOPS storage](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the *Amazon RDS User Guide* .
   *
   * This setting is required to create a Multi-AZ DB cluster.
   *
   * Constraints: Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
   *
   * Valid for: Multi-AZ DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-iops
   */
  readonly iops?: number;

  /**
   * The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such as \`arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef\` .
   *
   * If you enable the \`StorageEncrypted\` property but don't specify this property, the default KMS key is used. If you specify this property, you must set the \`StorageEncrypted\` property to \`true\` .
   *
   * If you specify the \`SnapshotIdentifier\` property, the \`StorageEncrypted\` property value is inherited from the snapshot, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-kmskeyid
   */
  readonly kmsKeyId?: string;

  /**
   * A value that indicates whether to manage the master user password with AWS Secrets Manager.
   *
   * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
   *
   * Constraints:
   *
   * - Can't manage the master user password with AWS Secrets Manager if \`MasterUserPassword\` is specified.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-managemasteruserpassword
   */
  readonly manageMasterUserPassword?: boolean | cdk.IResolvable;

  /**
   * The name of the master user for the DB cluster.
   *
   * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-masterusername
   */
  readonly masterUsername?: string;

  /**
   * The master password for the DB instance.
   *
   * > If you specify the \`SourceDBClusterIdentifier\` , \`SnapshotIdentifier\` , or \`GlobalClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-masteruserpassword
   */
  readonly masterUserPassword?: string;

  /**
   * Contains the secret managed by RDS in AWS Secrets Manager for the master user password.
   *
   * For more information, see [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with AWS Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-masterusersecret
   */
  readonly masterUserSecret?: cdk.IResolvable | CfnDBCluster.MasterUserSecretProperty;

  /**
   * The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster.
   *
   * To turn off collecting Enhanced Monitoring metrics, specify 0. The default is 0.
   *
   * If \`MonitoringRoleArn\` is specified, also set \`MonitoringInterval\` to a value other than 0.
   *
   * Valid Values: \`0, 1, 5, 10, 15, 30, 60\`
   *
   * Valid for: Multi-AZ DB clusters only
   *
   * @default - 0
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-monitoringinterval
   */
  readonly monitoringInterval?: number;

  /**
   * The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.
   *
   * An example is \`arn:aws:iam:123456789012:role/emaccess\` . For information on creating a monitoring role, see [Setting up and enabling Enhanced Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling) in the *Amazon RDS User Guide* .
   *
   * If \`MonitoringInterval\` is set to a value other than 0, supply a \`MonitoringRoleArn\` value.
   *
   * Valid for: Multi-AZ DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-monitoringrolearn
   */
  readonly monitoringRoleArn?: string;

  /**
   * The network type of the DB cluster.
   *
   * Valid values:
   *
   * - \`IPV4\`
   * - \`DUAL\`
   *
   * The network type is determined by the \`DBSubnetGroup\` specified for the DB cluster. A \`DBSubnetGroup\` can support only the IPv4 protocol or the IPv4 and IPv6 protocols ( \`DUAL\` ).
   *
   * For more information, see [Working with a DB instance in a VPC](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the *Amazon Aurora User Guide.*
   *
   * Valid for: Aurora DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-networktype
   */
  readonly networkType?: string;

  /**
   * A value that indicates whether to turn on Performance Insights for the DB cluster.
   *
   * For more information, see [Using Amazon Performance Insights](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the *Amazon RDS User Guide* .
   *
   * Valid for: Multi-AZ DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-performanceinsightsenabled
   */
  readonly performanceInsightsEnabled?: boolean | cdk.IResolvable;

  /**
   * The AWS KMS key identifier for encryption of Performance Insights data.
   *
   * The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
   *
   * If you don't specify a value for \`PerformanceInsightsKMSKeyId\` , then Amazon RDS uses your default KMS key. There is a default KMS key for your AWS account . Your AWS account has a different default KMS key for each AWS Region .
   *
   * Valid for: Multi-AZ DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-performanceinsightskmskeyid
   */
  readonly performanceInsightsKmsKeyId?: string;

  /**
   * The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:.
   *
   * - 7
   * - *month* * 31, where *month* is a number of months from 1-23
   * - 731
   *
   * For example, the following values are valid:
   *
   * - 93 (3 months * 31)
   * - 341 (11 months * 31)
   * - 589 (19 months * 31)
   * - 731
   *
   * If you specify a retention period such as 94, which isn't a valid value, RDS issues an error.
   *
   * Valid for: Multi-AZ DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-performanceinsightsretentionperiod
   */
  readonly performanceInsightsRetentionPeriod?: number;

  /**
   * The port number on which the DB instances in the DB cluster accept connections.
   *
   * Default:
   *
   * - When \`EngineMode\` is \`provisioned\` , \`3306\` (for both Aurora MySQL and Aurora PostgreSQL)
   * - When \`EngineMode\` is \`serverless\` :
   *
   * - \`3306\` when \`Engine\` is \`aurora\` or \`aurora-mysql\`
   * - \`5432\` when \`Engine\` is \`aurora-postgresql\`
   *
   * > The \`No interruption\` on update behavior only applies to DB clusters. If you are updating a DB instance, see [Port](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-port) for the AWS::RDS::DBInstance resource.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-port
   */
  readonly port?: number;

  /**
   * The daily time range during which automated backups are created.
   *
   * For more information, see [Backup Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow) in the *Amazon Aurora User Guide.*
   *
   * Constraints:
   *
   * - Must be in the format \`hh24:mi-hh24:mi\` .
   * - Must be in Universal Coordinated Time (UTC).
   * - Must not conflict with the preferred maintenance window.
   * - Must be at least 30 minutes.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-preferredbackupwindow
   */
  readonly preferredBackupWindow?: string;

  /**
   * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
   *
   * Format: \`ddd:hh24:mi-ddd:hh24:mi\`
   *
   * The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see [Adjusting the Preferred DB Cluster Maintenance Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora) in the *Amazon Aurora User Guide.*
   *
   * Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
   *
   * Constraints: Minimum 30-minute window.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-preferredmaintenancewindow
   */
  readonly preferredMaintenanceWindow?: string;

  /**
   * A value that indicates whether the DB cluster is publicly accessible.
   *
   * When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.
   *
   * When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.
   *
   * Default: The default behavior varies depending on whether \`DBSubnetGroupName\` is specified.
   *
   * If \`DBSubnetGroupName\` isn't specified, and \`PubliclyAccessible\` isn't specified, the following applies:
   *
   * - If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.
   * - If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.
   *
   * If \`DBSubnetGroupName\` is specified, and \`PubliclyAccessible\` isn't specified, the following applies:
   *
   * - If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.
   * - If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.
   *
   * Valid for: Multi-AZ DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-publiclyaccessible
   */
  readonly publiclyAccessible?: boolean | cdk.IResolvable;

  /**
   * The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.
   *
   * Valid for: Aurora DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-replicationsourceidentifier
   */
  readonly replicationSourceIdentifier?: string;

  /**
   * The date and time to restore the DB cluster to.
   *
   * Valid Values: Value must be a time in Universal Coordinated Time (UTC) format
   *
   * Constraints:
   *
   * - Must be before the latest restorable time for the DB instance
   * - Must be specified if \`UseLatestRestorableTime\` parameter isn't provided
   * - Can't be specified if the \`UseLatestRestorableTime\` parameter is enabled
   * - Can't be specified if the \`RestoreType\` parameter is \`copy-on-write\`
   *
   * Example: \`2015-03-07T23:45:00Z\`
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-restoretotime
   */
  readonly restoreToTime?: string;

  /**
   * The type of restore to be performed. You can specify one of the following values:.
   *
   * - \`full-copy\` - The new DB cluster is restored as a full copy of the source DB cluster.
   * - \`copy-on-write\` - The new DB cluster is restored as a clone of the source DB cluster.
   *
   * Constraints: You can't specify \`copy-on-write\` if the engine version of the source DB cluster is earlier than 1.11.
   *
   * If you don't specify a \`RestoreType\` value, then the new DB cluster is restored as a full copy of the source DB cluster.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @default - "full-copy"
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-restoretype
   */
  readonly restoreType?: string;

  /**
   * The \`ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless DB cluster.
   *
   * This property is only supported for Aurora Serverless v1. For Aurora Serverless v2, use \`ServerlessV2ScalingConfiguration\` property.
   *
   * Valid for: Aurora DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-scalingconfiguration
   */
  readonly scalingConfiguration?: cdk.IResolvable | CfnDBCluster.ScalingConfigurationProperty;

  /**
   * The \`ServerlessV2ScalingConfiguration\` property type specifies the scaling configuration of an Aurora Serverless V2 DB cluster.
   *
   * This property is only supported for Aurora Serverless v2. For Aurora Serverless v1, use \`ScalingConfiguration\` property.
   *
   * Valid for: Aurora DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration
   */
  readonly serverlessV2ScalingConfiguration?: cdk.IResolvable | CfnDBCluster.ServerlessV2ScalingConfigurationProperty;

  /**
   * The identifier for the DB snapshot or DB cluster snapshot to restore from.
   *
   * You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.
   *
   * After you restore a DB cluster with a \`SnapshotIdentifier\` property, you must specify the same \`SnapshotIdentifier\` property for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the data in the database is not changed. However, if you don't specify the \`SnapshotIdentifier\` property, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, a new DB cluster is restored from the specified \`SnapshotIdentifier\` property, and the original DB cluster is deleted.
   *
   * If you specify the \`SnapshotIdentifier\` property to restore a DB cluster (as opposed to specifying it for DB cluster updates), then don't specify the following properties:
   *
   * - \`GlobalClusterIdentifier\`
   * - \`MasterUsername\`
   * - \`MasterUserPassword\`
   * - \`ReplicationSourceIdentifier\`
   * - \`RestoreType\`
   * - \`SourceDBClusterIdentifier\`
   * - \`SourceRegion\`
   * - \`StorageEncrypted\` (for an encrypted snapshot)
   * - \`UseLatestRestorableTime\`
   *
   * Constraints:
   *
   * - Must match the identifier of an existing Snapshot.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-snapshotidentifier
   */
  readonly snapshotIdentifier?: string;

  /**
   * When restoring a DB cluster to a point in time, the identifier of the source DB cluster from which to restore.
   *
   * Constraints:
   *
   * - Must match the identifier of an existing DBCluster.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-sourcedbclusteridentifier
   */
  readonly sourceDbClusterIdentifier?: string;

  /**
   * The AWS Region which contains the source DB cluster when replicating a DB cluster. For example, \`us-east-1\` .
   *
   * Valid for: Aurora DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-sourceregion
   */
  readonly sourceRegion?: string;

  /**
   * Indicates whether the DB cluster is encrypted.
   *
   * If you specify the \`KmsKeyId\` property, then you must enable encryption.
   *
   * If you specify the \`SourceDBClusterIdentifier\` property, don't specify this property. The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the specified \`KmsKeyId\` property is used.
   *
   * If you specify the \`SnapshotIdentifier\` and the specified snapshot is encrypted, don't specify this property. The value is inherited from the snapshot, and the specified \`KmsKeyId\` property is used.
   *
   * If you specify the \`SnapshotIdentifier\` and the specified snapshot isn't encrypted, you can use this property to specify that the restored DB cluster is encrypted. Specify the \`KmsKeyId\` property for the KMS key to use for encryption. If you don't want the restored DB cluster to be encrypted, then don't set this property or set it to \`false\` .
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-storageencrypted
   */
  readonly storageEncrypted?: boolean | cdk.IResolvable;

  /**
   * Specifies the storage type to be associated with the DB cluster.
   *
   * This setting is required to create a Multi-AZ DB cluster.
   *
   * Valid values: \`io1\`
   *
   * When specified, a value for the \`Iops\` parameter is required.
   *
   * Default: \`io1\`
   *
   * Valid for: Multi-AZ DB clusters only
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-storagetype
   */
  readonly storageType?: string;

  /**
   * An optional array of key-value pairs to apply to this DB cluster.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-tags
   */
  readonly tags?: Array<cdk.CfnTag>;

  /**
   * A value that indicates whether to restore the DB cluster to the latest restorable backup time.
   *
   * By default, the DB cluster is not restored to the latest restorable backup time.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-uselatestrestorabletime
   */
  readonly useLatestRestorableTime?: boolean | cdk.IResolvable;

  /**
   * A list of EC2 VPC security groups to associate with this DB cluster.
   *
   * If you plan to update the resource, don't specify VPC security groups in a shared VPC.
   *
   * Valid for: Aurora DB clusters and Multi-AZ DB clusters
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-vpcsecuritygroupids
   */
  readonly vpcSecurityGroupIds?: Array<string>;
}

/**
 * Determine whether the given properties match those of a \`TagProperty\`
 *
 * @param properties - the TypeScript properties of a \`TagProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnDBClusterTagPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("allocatedStorage", cdk.validateNumber)(properties.allocatedStorage));
  errors.collect(cdk.propertyValidator("associatedRoles", cdk.listValidator(CfnDBClusterDBClusterRolePropertyValidator))(properties.associatedRoles));
  errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade", cdk.validateBoolean)(properties.autoMinorVersionUpgrade));
  errors.collect(cdk.propertyValidator("availabilityZones", cdk.listValidator(cdk.validateString))(properties.availabilityZones));
  errors.collect(cdk.propertyValidator("backtrackWindow", cdk.validateNumber)(properties.backtrackWindow));
  errors.collect(cdk.propertyValidator("backupRetentionPeriod", cdk.validateNumber)(properties.backupRetentionPeriod));
  errors.collect(cdk.propertyValidator("copyTagsToSnapshot", cdk.validateBoolean)(properties.copyTagsToSnapshot));
  errors.collect(cdk.propertyValidator("dbClusterIdentifier", cdk.validateString)(properties.dbClusterIdentifier));
  errors.collect(cdk.propertyValidator("dbClusterInstanceClass", cdk.validateString)(properties.dbClusterInstanceClass));
  errors.collect(cdk.propertyValidator("dbClusterParameterGroupName", cdk.validateString)(properties.dbClusterParameterGroupName));
  errors.collect(cdk.propertyValidator("dbInstanceParameterGroupName", cdk.validateString)(properties.dbInstanceParameterGroupName));
  errors.collect(cdk.propertyValidator("dbSubnetGroupName", cdk.validateString)(properties.dbSubnetGroupName));
  errors.collect(cdk.propertyValidator("dbSystemId", cdk.validateString)(properties.dbSystemId));
  errors.collect(cdk.propertyValidator("databaseName", cdk.validateString)(properties.databaseName));
  errors.collect(cdk.propertyValidator("deletionProtection", cdk.validateBoolean)(properties.deletionProtection));
  errors.collect(cdk.propertyValidator("domain", cdk.validateString)(properties.domain));
  errors.collect(cdk.propertyValidator("domainIamRoleName", cdk.validateString)(properties.domainIamRoleName));
  errors.collect(cdk.propertyValidator("enableCloudwatchLogsExports", cdk.listValidator(cdk.validateString))(properties.enableCloudwatchLogsExports));
  errors.collect(cdk.propertyValidator("enableHttpEndpoint", cdk.validateBoolean)(properties.enableHttpEndpoint));
  errors.collect(cdk.propertyValidator("enableIamDatabaseAuthentication", cdk.validateBoolean)(properties.enableIamDatabaseAuthentication));
  errors.collect(cdk.propertyValidator("engine", cdk.validateString)(properties.engine));
  errors.collect(cdk.propertyValidator("engineMode", cdk.validateString)(properties.engineMode));
  errors.collect(cdk.propertyValidator("engineVersion", cdk.validateString)(properties.engineVersion));
  errors.collect(cdk.propertyValidator("globalClusterIdentifier", cdk.validateString)(properties.globalClusterIdentifier));
  errors.collect(cdk.propertyValidator("iops", cdk.validateNumber)(properties.iops));
  errors.collect(cdk.propertyValidator("kmsKeyId", cdk.validateString)(properties.kmsKeyId));
  errors.collect(cdk.propertyValidator("manageMasterUserPassword", cdk.validateBoolean)(properties.manageMasterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserPassword", cdk.validateString)(properties.masterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserSecret", CfnDBClusterMasterUserSecretPropertyValidator)(properties.masterUserSecret));
  errors.collect(cdk.propertyValidator("masterUsername", cdk.validateString)(properties.masterUsername));
  errors.collect(cdk.propertyValidator("monitoringInterval", cdk.validateNumber)(properties.monitoringInterval));
  errors.collect(cdk.propertyValidator("monitoringRoleArn", cdk.validateString)(properties.monitoringRoleArn));
  errors.collect(cdk.propertyValidator("networkType", cdk.validateString)(properties.networkType));
  errors.collect(cdk.propertyValidator("performanceInsightsEnabled", cdk.validateBoolean)(properties.performanceInsightsEnabled));
  errors.collect(cdk.propertyValidator("performanceInsightsKmsKeyId", cdk.validateString)(properties.performanceInsightsKmsKeyId));
  errors.collect(cdk.propertyValidator("performanceInsightsRetentionPeriod", cdk.validateNumber)(properties.performanceInsightsRetentionPeriod));
  errors.collect(cdk.propertyValidator("port", cdk.validateNumber)(properties.port));
  errors.collect(cdk.propertyValidator("preferredBackupWindow", cdk.validateString)(properties.preferredBackupWindow));
  errors.collect(cdk.propertyValidator("preferredMaintenanceWindow", cdk.validateString)(properties.preferredMaintenanceWindow));
  errors.collect(cdk.propertyValidator("publiclyAccessible", cdk.validateBoolean)(properties.publiclyAccessible));
  errors.collect(cdk.propertyValidator("replicationSourceIdentifier", cdk.validateString)(properties.replicationSourceIdentifier));
  errors.collect(cdk.propertyValidator("restoreToTime", cdk.validateString)(properties.restoreToTime));
  errors.collect(cdk.propertyValidator("restoreType", cdk.validateString)(properties.restoreType));
  errors.collect(cdk.propertyValidator("scalingConfiguration", CfnDBClusterScalingConfigurationPropertyValidator)(properties.scalingConfiguration));
  errors.collect(cdk.propertyValidator("serverlessV2ScalingConfiguration", CfnDBClusterServerlessV2ScalingConfigurationPropertyValidator)(properties.serverlessV2ScalingConfiguration));
  errors.collect(cdk.propertyValidator("snapshotIdentifier", cdk.validateString)(properties.snapshotIdentifier));
  errors.collect(cdk.propertyValidator("sourceDbClusterIdentifier", cdk.validateString)(properties.sourceDbClusterIdentifier));
  errors.collect(cdk.propertyValidator("sourceRegion", cdk.validateString)(properties.sourceRegion));
  errors.collect(cdk.propertyValidator("storageEncrypted", cdk.validateBoolean)(properties.storageEncrypted));
  errors.collect(cdk.propertyValidator("storageType", cdk.validateString)(properties.storageType));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnDBClusterTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("useLatestRestorableTime", cdk.validateBoolean)(properties.useLatestRestorableTime));
  errors.collect(cdk.propertyValidator("vpcSecurityGroupIds", cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds));
  return errors.wrap("supplied properties not correct for \\"TagProperty\\"");
}

// @ts-ignore TS6133
function convertCfnDBClusterTagPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnDBClusterTagPropertyValidator(properties).assertSuccess();
  return {
    "AllocatedStorage": cdk.numberToCloudFormation(properties.allocatedStorage),
    "AssociatedRoles": cdk.listMapper(convertCfnDBClusterDBClusterRolePropertyToCloudFormation)(properties.associatedRoles),
    "AutoMinorVersionUpgrade": cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),
    "AvailabilityZones": cdk.listMapper(cdk.stringToCloudFormation)(properties.availabilityZones),
    "BacktrackWindow": cdk.numberToCloudFormation(properties.backtrackWindow),
    "BackupRetentionPeriod": cdk.numberToCloudFormation(properties.backupRetentionPeriod),
    "CopyTagsToSnapshot": cdk.booleanToCloudFormation(properties.copyTagsToSnapshot),
    "DBClusterIdentifier": cdk.stringToCloudFormation(properties.dbClusterIdentifier),
    "DBClusterInstanceClass": cdk.stringToCloudFormation(properties.dbClusterInstanceClass),
    "DBClusterParameterGroupName": cdk.stringToCloudFormation(properties.dbClusterParameterGroupName),
    "DBInstanceParameterGroupName": cdk.stringToCloudFormation(properties.dbInstanceParameterGroupName),
    "DBSubnetGroupName": cdk.stringToCloudFormation(properties.dbSubnetGroupName),
    "DBSystemId": cdk.stringToCloudFormation(properties.dbSystemId),
    "DatabaseName": cdk.stringToCloudFormation(properties.databaseName),
    "DeletionProtection": cdk.booleanToCloudFormation(properties.deletionProtection),
    "Domain": cdk.stringToCloudFormation(properties.domain),
    "DomainIAMRoleName": cdk.stringToCloudFormation(properties.domainIamRoleName),
    "EnableCloudwatchLogsExports": cdk.listMapper(cdk.stringToCloudFormation)(properties.enableCloudwatchLogsExports),
    "EnableHttpEndpoint": cdk.booleanToCloudFormation(properties.enableHttpEndpoint),
    "EnableIAMDatabaseAuthentication": cdk.booleanToCloudFormation(properties.enableIamDatabaseAuthentication),
    "Engine": cdk.stringToCloudFormation(properties.engine),
    "EngineMode": cdk.stringToCloudFormation(properties.engineMode),
    "EngineVersion": cdk.stringToCloudFormation(properties.engineVersion),
    "GlobalClusterIdentifier": cdk.stringToCloudFormation(properties.globalClusterIdentifier),
    "Iops": cdk.numberToCloudFormation(properties.iops),
    "KmsKeyId": cdk.stringToCloudFormation(properties.kmsKeyId),
    "ManageMasterUserPassword": cdk.booleanToCloudFormation(properties.manageMasterUserPassword),
    "MasterUserPassword": cdk.stringToCloudFormation(properties.masterUserPassword),
    "MasterUserSecret": convertCfnDBClusterMasterUserSecretPropertyToCloudFormation(properties.masterUserSecret),
    "MasterUsername": cdk.stringToCloudFormation(properties.masterUsername),
    "MonitoringInterval": cdk.numberToCloudFormation(properties.monitoringInterval),
    "MonitoringRoleArn": cdk.stringToCloudFormation(properties.monitoringRoleArn),
    "NetworkType": cdk.stringToCloudFormation(properties.networkType),
    "PerformanceInsightsEnabled": cdk.booleanToCloudFormation(properties.performanceInsightsEnabled),
    "PerformanceInsightsKmsKeyId": cdk.stringToCloudFormation(properties.performanceInsightsKmsKeyId),
    "PerformanceInsightsRetentionPeriod": cdk.numberToCloudFormation(properties.performanceInsightsRetentionPeriod),
    "Port": cdk.numberToCloudFormation(properties.port),
    "PreferredBackupWindow": cdk.stringToCloudFormation(properties.preferredBackupWindow),
    "PreferredMaintenanceWindow": cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),
    "PubliclyAccessible": cdk.booleanToCloudFormation(properties.publiclyAccessible),
    "ReplicationSourceIdentifier": cdk.stringToCloudFormation(properties.replicationSourceIdentifier),
    "RestoreToTime": cdk.stringToCloudFormation(properties.restoreToTime),
    "RestoreType": cdk.stringToCloudFormation(properties.restoreType),
    "ScalingConfiguration": convertCfnDBClusterScalingConfigurationPropertyToCloudFormation(properties.scalingConfiguration),
    "ServerlessV2ScalingConfiguration": convertCfnDBClusterServerlessV2ScalingConfigurationPropertyToCloudFormation(properties.serverlessV2ScalingConfiguration),
    "SnapshotIdentifier": cdk.stringToCloudFormation(properties.snapshotIdentifier),
    "SourceDBClusterIdentifier": cdk.stringToCloudFormation(properties.sourceDbClusterIdentifier),
    "SourceRegion": cdk.stringToCloudFormation(properties.sourceRegion),
    "StorageEncrypted": cdk.booleanToCloudFormation(properties.storageEncrypted),
    "StorageType": cdk.stringToCloudFormation(properties.storageType),
    "Tags": cdk.listMapper(convertCfnDBClusterTagPropertyToCloudFormation)(properties.tags),
    "UseLatestRestorableTime": cdk.booleanToCloudFormation(properties.useLatestRestorableTime),
    "VpcSecurityGroupIds": cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)
  };
}

// @ts-ignore TS6133
function CfnDBClusterTagPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnDBCluster.TagProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBCluster.TagProperty>();
  ret.addPropertyResult("allocatedStorage", "AllocatedStorage", (properties.AllocatedStorage != null ? cfn_parse.FromCloudFormation.getNumber(properties.AllocatedStorage) : undefined));
  ret.addPropertyResult("associatedRoles", "AssociatedRoles", (properties.AssociatedRoles != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterDBClusterRolePropertyFromCloudFormation)(properties.AssociatedRoles) : undefined));
  ret.addPropertyResult("autoMinorVersionUpgrade", "AutoMinorVersionUpgrade", (properties.AutoMinorVersionUpgrade != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade) : undefined));
  ret.addPropertyResult("availabilityZones", "AvailabilityZones", (properties.AvailabilityZones != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.AvailabilityZones) : undefined));
  ret.addPropertyResult("backtrackWindow", "BacktrackWindow", (properties.BacktrackWindow != null ? cfn_parse.FromCloudFormation.getNumber(properties.BacktrackWindow) : undefined));
  ret.addPropertyResult("backupRetentionPeriod", "BackupRetentionPeriod", (properties.BackupRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.BackupRetentionPeriod) : undefined));
  ret.addPropertyResult("copyTagsToSnapshot", "CopyTagsToSnapshot", (properties.CopyTagsToSnapshot != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CopyTagsToSnapshot) : undefined));
  ret.addPropertyResult("databaseName", "DatabaseName", (properties.DatabaseName != null ? cfn_parse.FromCloudFormation.getString(properties.DatabaseName) : undefined));
  ret.addPropertyResult("dbClusterIdentifier", "DBClusterIdentifier", (properties.DBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterIdentifier) : undefined));
  ret.addPropertyResult("dbClusterInstanceClass", "DBClusterInstanceClass", (properties.DBClusterInstanceClass != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterInstanceClass) : undefined));
  ret.addPropertyResult("dbClusterParameterGroupName", "DBClusterParameterGroupName", (properties.DBClusterParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterParameterGroupName) : undefined));
  ret.addPropertyResult("dbInstanceParameterGroupName", "DBInstanceParameterGroupName", (properties.DBInstanceParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBInstanceParameterGroupName) : undefined));
  ret.addPropertyResult("dbSubnetGroupName", "DBSubnetGroupName", (properties.DBSubnetGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupName) : undefined));
  ret.addPropertyResult("dbSystemId", "DBSystemId", (properties.DBSystemId != null ? cfn_parse.FromCloudFormation.getString(properties.DBSystemId) : undefined));
  ret.addPropertyResult("deletionProtection", "DeletionProtection", (properties.DeletionProtection != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeletionProtection) : undefined));
  ret.addPropertyResult("domain", "Domain", (properties.Domain != null ? cfn_parse.FromCloudFormation.getString(properties.Domain) : undefined));
  ret.addPropertyResult("domainIamRoleName", "DomainIAMRoleName", (properties.DomainIAMRoleName != null ? cfn_parse.FromCloudFormation.getString(properties.DomainIAMRoleName) : undefined));
  ret.addPropertyResult("enableCloudwatchLogsExports", "EnableCloudwatchLogsExports", (properties.EnableCloudwatchLogsExports != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EnableCloudwatchLogsExports) : undefined));
  ret.addPropertyResult("enableHttpEndpoint", "EnableHttpEndpoint", (properties.EnableHttpEndpoint != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableHttpEndpoint) : undefined));
  ret.addPropertyResult("enableIamDatabaseAuthentication", "EnableIAMDatabaseAuthentication", (properties.EnableIAMDatabaseAuthentication != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableIAMDatabaseAuthentication) : undefined));
  ret.addPropertyResult("engine", "Engine", (properties.Engine != null ? cfn_parse.FromCloudFormation.getString(properties.Engine) : undefined));
  ret.addPropertyResult("engineMode", "EngineMode", (properties.EngineMode != null ? cfn_parse.FromCloudFormation.getString(properties.EngineMode) : undefined));
  ret.addPropertyResult("engineVersion", "EngineVersion", (properties.EngineVersion != null ? cfn_parse.FromCloudFormation.getString(properties.EngineVersion) : undefined));
  ret.addPropertyResult("globalClusterIdentifier", "GlobalClusterIdentifier", (properties.GlobalClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.GlobalClusterIdentifier) : undefined));
  ret.addPropertyResult("iops", "Iops", (properties.Iops != null ? cfn_parse.FromCloudFormation.getNumber(properties.Iops) : undefined));
  ret.addPropertyResult("kmsKeyId", "KmsKeyId", (properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined));
  ret.addPropertyResult("manageMasterUserPassword", "ManageMasterUserPassword", (properties.ManageMasterUserPassword != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ManageMasterUserPassword) : undefined));
  ret.addPropertyResult("masterUsername", "MasterUsername", (properties.MasterUsername != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUsername) : undefined));
  ret.addPropertyResult("masterUserPassword", "MasterUserPassword", (properties.MasterUserPassword != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUserPassword) : undefined));
  ret.addPropertyResult("masterUserSecret", "MasterUserSecret", (properties.MasterUserSecret != null ? CfnDBClusterMasterUserSecretPropertyFromCloudFormation(properties.MasterUserSecret) : undefined));
  ret.addPropertyResult("monitoringInterval", "MonitoringInterval", (properties.MonitoringInterval != null ? cfn_parse.FromCloudFormation.getNumber(properties.MonitoringInterval) : undefined));
  ret.addPropertyResult("monitoringRoleArn", "MonitoringRoleArn", (properties.MonitoringRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.MonitoringRoleArn) : undefined));
  ret.addPropertyResult("networkType", "NetworkType", (properties.NetworkType != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkType) : undefined));
  ret.addPropertyResult("performanceInsightsEnabled", "PerformanceInsightsEnabled", (properties.PerformanceInsightsEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PerformanceInsightsEnabled) : undefined));
  ret.addPropertyResult("performanceInsightsKmsKeyId", "PerformanceInsightsKmsKeyId", (properties.PerformanceInsightsKmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.PerformanceInsightsKmsKeyId) : undefined));
  ret.addPropertyResult("performanceInsightsRetentionPeriod", "PerformanceInsightsRetentionPeriod", (properties.PerformanceInsightsRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.PerformanceInsightsRetentionPeriod) : undefined));
  ret.addPropertyResult("port", "Port", (properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined));
  ret.addPropertyResult("preferredBackupWindow", "PreferredBackupWindow", (properties.PreferredBackupWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredBackupWindow) : undefined));
  ret.addPropertyResult("preferredMaintenanceWindow", "PreferredMaintenanceWindow", (properties.PreferredMaintenanceWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow) : undefined));
  ret.addPropertyResult("publiclyAccessible", "PubliclyAccessible", (properties.PubliclyAccessible != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible) : undefined));
  ret.addPropertyResult("replicationSourceIdentifier", "ReplicationSourceIdentifier", (properties.ReplicationSourceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ReplicationSourceIdentifier) : undefined));
  ret.addPropertyResult("restoreToTime", "RestoreToTime", (properties.RestoreToTime != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreToTime) : undefined));
  ret.addPropertyResult("restoreType", "RestoreType", (properties.RestoreType != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreType) : undefined));
  ret.addPropertyResult("scalingConfiguration", "ScalingConfiguration", (properties.ScalingConfiguration != null ? CfnDBClusterScalingConfigurationPropertyFromCloudFormation(properties.ScalingConfiguration) : undefined));
  ret.addPropertyResult("serverlessV2ScalingConfiguration", "ServerlessV2ScalingConfiguration", (properties.ServerlessV2ScalingConfiguration != null ? CfnDBClusterServerlessV2ScalingConfigurationPropertyFromCloudFormation(properties.ServerlessV2ScalingConfiguration) : undefined));
  ret.addPropertyResult("snapshotIdentifier", "SnapshotIdentifier", (properties.SnapshotIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SnapshotIdentifier) : undefined));
  ret.addPropertyResult("sourceDbClusterIdentifier", "SourceDBClusterIdentifier", (properties.SourceDBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SourceDBClusterIdentifier) : undefined));
  ret.addPropertyResult("sourceRegion", "SourceRegion", (properties.SourceRegion != null ? cfn_parse.FromCloudFormation.getString(properties.SourceRegion) : undefined));
  ret.addPropertyResult("storageEncrypted", "StorageEncrypted", (properties.StorageEncrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.StorageEncrypted) : undefined));
  ret.addPropertyResult("storageType", "StorageType", (properties.StorageType != null ? cfn_parse.FromCloudFormation.getString(properties.StorageType) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("useLatestRestorableTime", "UseLatestRestorableTime", (properties.UseLatestRestorableTime != null ? cfn_parse.FromCloudFormation.getBoolean(properties.UseLatestRestorableTime) : undefined));
  ret.addPropertyResult("vpcSecurityGroupIds", "VpcSecurityGroupIds", (properties.VpcSecurityGroupIds != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`ScalingConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`ScalingConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnDBClusterScalingConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("allocatedStorage", cdk.validateNumber)(properties.allocatedStorage));
  errors.collect(cdk.propertyValidator("associatedRoles", cdk.listValidator(CfnDBClusterDBClusterRolePropertyValidator))(properties.associatedRoles));
  errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade", cdk.validateBoolean)(properties.autoMinorVersionUpgrade));
  errors.collect(cdk.propertyValidator("availabilityZones", cdk.listValidator(cdk.validateString))(properties.availabilityZones));
  errors.collect(cdk.propertyValidator("backtrackWindow", cdk.validateNumber)(properties.backtrackWindow));
  errors.collect(cdk.propertyValidator("backupRetentionPeriod", cdk.validateNumber)(properties.backupRetentionPeriod));
  errors.collect(cdk.propertyValidator("copyTagsToSnapshot", cdk.validateBoolean)(properties.copyTagsToSnapshot));
  errors.collect(cdk.propertyValidator("dbClusterIdentifier", cdk.validateString)(properties.dbClusterIdentifier));
  errors.collect(cdk.propertyValidator("dbClusterInstanceClass", cdk.validateString)(properties.dbClusterInstanceClass));
  errors.collect(cdk.propertyValidator("dbClusterParameterGroupName", cdk.validateString)(properties.dbClusterParameterGroupName));
  errors.collect(cdk.propertyValidator("dbInstanceParameterGroupName", cdk.validateString)(properties.dbInstanceParameterGroupName));
  errors.collect(cdk.propertyValidator("dbSubnetGroupName", cdk.validateString)(properties.dbSubnetGroupName));
  errors.collect(cdk.propertyValidator("dbSystemId", cdk.validateString)(properties.dbSystemId));
  errors.collect(cdk.propertyValidator("databaseName", cdk.validateString)(properties.databaseName));
  errors.collect(cdk.propertyValidator("deletionProtection", cdk.validateBoolean)(properties.deletionProtection));
  errors.collect(cdk.propertyValidator("domain", cdk.validateString)(properties.domain));
  errors.collect(cdk.propertyValidator("domainIamRoleName", cdk.validateString)(properties.domainIamRoleName));
  errors.collect(cdk.propertyValidator("enableCloudwatchLogsExports", cdk.listValidator(cdk.validateString))(properties.enableCloudwatchLogsExports));
  errors.collect(cdk.propertyValidator("enableHttpEndpoint", cdk.validateBoolean)(properties.enableHttpEndpoint));
  errors.collect(cdk.propertyValidator("enableIamDatabaseAuthentication", cdk.validateBoolean)(properties.enableIamDatabaseAuthentication));
  errors.collect(cdk.propertyValidator("engine", cdk.validateString)(properties.engine));
  errors.collect(cdk.propertyValidator("engineMode", cdk.validateString)(properties.engineMode));
  errors.collect(cdk.propertyValidator("engineVersion", cdk.validateString)(properties.engineVersion));
  errors.collect(cdk.propertyValidator("globalClusterIdentifier", cdk.validateString)(properties.globalClusterIdentifier));
  errors.collect(cdk.propertyValidator("iops", cdk.validateNumber)(properties.iops));
  errors.collect(cdk.propertyValidator("kmsKeyId", cdk.validateString)(properties.kmsKeyId));
  errors.collect(cdk.propertyValidator("manageMasterUserPassword", cdk.validateBoolean)(properties.manageMasterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserPassword", cdk.validateString)(properties.masterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserSecret", CfnDBClusterMasterUserSecretPropertyValidator)(properties.masterUserSecret));
  errors.collect(cdk.propertyValidator("masterUsername", cdk.validateString)(properties.masterUsername));
  errors.collect(cdk.propertyValidator("monitoringInterval", cdk.validateNumber)(properties.monitoringInterval));
  errors.collect(cdk.propertyValidator("monitoringRoleArn", cdk.validateString)(properties.monitoringRoleArn));
  errors.collect(cdk.propertyValidator("networkType", cdk.validateString)(properties.networkType));
  errors.collect(cdk.propertyValidator("performanceInsightsEnabled", cdk.validateBoolean)(properties.performanceInsightsEnabled));
  errors.collect(cdk.propertyValidator("performanceInsightsKmsKeyId", cdk.validateString)(properties.performanceInsightsKmsKeyId));
  errors.collect(cdk.propertyValidator("performanceInsightsRetentionPeriod", cdk.validateNumber)(properties.performanceInsightsRetentionPeriod));
  errors.collect(cdk.propertyValidator("port", cdk.validateNumber)(properties.port));
  errors.collect(cdk.propertyValidator("preferredBackupWindow", cdk.validateString)(properties.preferredBackupWindow));
  errors.collect(cdk.propertyValidator("preferredMaintenanceWindow", cdk.validateString)(properties.preferredMaintenanceWindow));
  errors.collect(cdk.propertyValidator("publiclyAccessible", cdk.validateBoolean)(properties.publiclyAccessible));
  errors.collect(cdk.propertyValidator("replicationSourceIdentifier", cdk.validateString)(properties.replicationSourceIdentifier));
  errors.collect(cdk.propertyValidator("restoreToTime", cdk.validateString)(properties.restoreToTime));
  errors.collect(cdk.propertyValidator("restoreType", cdk.validateString)(properties.restoreType));
  errors.collect(cdk.propertyValidator("scalingConfiguration", CfnDBClusterScalingConfigurationPropertyValidator)(properties.scalingConfiguration));
  errors.collect(cdk.propertyValidator("serverlessV2ScalingConfiguration", CfnDBClusterServerlessV2ScalingConfigurationPropertyValidator)(properties.serverlessV2ScalingConfiguration));
  errors.collect(cdk.propertyValidator("snapshotIdentifier", cdk.validateString)(properties.snapshotIdentifier));
  errors.collect(cdk.propertyValidator("sourceDbClusterIdentifier", cdk.validateString)(properties.sourceDbClusterIdentifier));
  errors.collect(cdk.propertyValidator("sourceRegion", cdk.validateString)(properties.sourceRegion));
  errors.collect(cdk.propertyValidator("storageEncrypted", cdk.validateBoolean)(properties.storageEncrypted));
  errors.collect(cdk.propertyValidator("storageType", cdk.validateString)(properties.storageType));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnDBClusterTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("useLatestRestorableTime", cdk.validateBoolean)(properties.useLatestRestorableTime));
  errors.collect(cdk.propertyValidator("vpcSecurityGroupIds", cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds));
  return errors.wrap("supplied properties not correct for \\"ScalingConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnDBClusterScalingConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnDBClusterScalingConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AllocatedStorage": cdk.numberToCloudFormation(properties.allocatedStorage),
    "AssociatedRoles": cdk.listMapper(convertCfnDBClusterDBClusterRolePropertyToCloudFormation)(properties.associatedRoles),
    "AutoMinorVersionUpgrade": cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),
    "AvailabilityZones": cdk.listMapper(cdk.stringToCloudFormation)(properties.availabilityZones),
    "BacktrackWindow": cdk.numberToCloudFormation(properties.backtrackWindow),
    "BackupRetentionPeriod": cdk.numberToCloudFormation(properties.backupRetentionPeriod),
    "CopyTagsToSnapshot": cdk.booleanToCloudFormation(properties.copyTagsToSnapshot),
    "DBClusterIdentifier": cdk.stringToCloudFormation(properties.dbClusterIdentifier),
    "DBClusterInstanceClass": cdk.stringToCloudFormation(properties.dbClusterInstanceClass),
    "DBClusterParameterGroupName": cdk.stringToCloudFormation(properties.dbClusterParameterGroupName),
    "DBInstanceParameterGroupName": cdk.stringToCloudFormation(properties.dbInstanceParameterGroupName),
    "DBSubnetGroupName": cdk.stringToCloudFormation(properties.dbSubnetGroupName),
    "DBSystemId": cdk.stringToCloudFormation(properties.dbSystemId),
    "DatabaseName": cdk.stringToCloudFormation(properties.databaseName),
    "DeletionProtection": cdk.booleanToCloudFormation(properties.deletionProtection),
    "Domain": cdk.stringToCloudFormation(properties.domain),
    "DomainIAMRoleName": cdk.stringToCloudFormation(properties.domainIamRoleName),
    "EnableCloudwatchLogsExports": cdk.listMapper(cdk.stringToCloudFormation)(properties.enableCloudwatchLogsExports),
    "EnableHttpEndpoint": cdk.booleanToCloudFormation(properties.enableHttpEndpoint),
    "EnableIAMDatabaseAuthentication": cdk.booleanToCloudFormation(properties.enableIamDatabaseAuthentication),
    "Engine": cdk.stringToCloudFormation(properties.engine),
    "EngineMode": cdk.stringToCloudFormation(properties.engineMode),
    "EngineVersion": cdk.stringToCloudFormation(properties.engineVersion),
    "GlobalClusterIdentifier": cdk.stringToCloudFormation(properties.globalClusterIdentifier),
    "Iops": cdk.numberToCloudFormation(properties.iops),
    "KmsKeyId": cdk.stringToCloudFormation(properties.kmsKeyId),
    "ManageMasterUserPassword": cdk.booleanToCloudFormation(properties.manageMasterUserPassword),
    "MasterUserPassword": cdk.stringToCloudFormation(properties.masterUserPassword),
    "MasterUserSecret": convertCfnDBClusterMasterUserSecretPropertyToCloudFormation(properties.masterUserSecret),
    "MasterUsername": cdk.stringToCloudFormation(properties.masterUsername),
    "MonitoringInterval": cdk.numberToCloudFormation(properties.monitoringInterval),
    "MonitoringRoleArn": cdk.stringToCloudFormation(properties.monitoringRoleArn),
    "NetworkType": cdk.stringToCloudFormation(properties.networkType),
    "PerformanceInsightsEnabled": cdk.booleanToCloudFormation(properties.performanceInsightsEnabled),
    "PerformanceInsightsKmsKeyId": cdk.stringToCloudFormation(properties.performanceInsightsKmsKeyId),
    "PerformanceInsightsRetentionPeriod": cdk.numberToCloudFormation(properties.performanceInsightsRetentionPeriod),
    "Port": cdk.numberToCloudFormation(properties.port),
    "PreferredBackupWindow": cdk.stringToCloudFormation(properties.preferredBackupWindow),
    "PreferredMaintenanceWindow": cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),
    "PubliclyAccessible": cdk.booleanToCloudFormation(properties.publiclyAccessible),
    "ReplicationSourceIdentifier": cdk.stringToCloudFormation(properties.replicationSourceIdentifier),
    "RestoreToTime": cdk.stringToCloudFormation(properties.restoreToTime),
    "RestoreType": cdk.stringToCloudFormation(properties.restoreType),
    "ScalingConfiguration": convertCfnDBClusterScalingConfigurationPropertyToCloudFormation(properties.scalingConfiguration),
    "ServerlessV2ScalingConfiguration": convertCfnDBClusterServerlessV2ScalingConfigurationPropertyToCloudFormation(properties.serverlessV2ScalingConfiguration),
    "SnapshotIdentifier": cdk.stringToCloudFormation(properties.snapshotIdentifier),
    "SourceDBClusterIdentifier": cdk.stringToCloudFormation(properties.sourceDbClusterIdentifier),
    "SourceRegion": cdk.stringToCloudFormation(properties.sourceRegion),
    "StorageEncrypted": cdk.booleanToCloudFormation(properties.storageEncrypted),
    "StorageType": cdk.stringToCloudFormation(properties.storageType),
    "Tags": cdk.listMapper(convertCfnDBClusterTagPropertyToCloudFormation)(properties.tags),
    "UseLatestRestorableTime": cdk.booleanToCloudFormation(properties.useLatestRestorableTime),
    "VpcSecurityGroupIds": cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)
  };
}

// @ts-ignore TS6133
function CfnDBClusterScalingConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnDBCluster.ScalingConfigurationProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBCluster.ScalingConfigurationProperty>();
  ret.addPropertyResult("allocatedStorage", "AllocatedStorage", (properties.AllocatedStorage != null ? cfn_parse.FromCloudFormation.getNumber(properties.AllocatedStorage) : undefined));
  ret.addPropertyResult("associatedRoles", "AssociatedRoles", (properties.AssociatedRoles != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterDBClusterRolePropertyFromCloudFormation)(properties.AssociatedRoles) : undefined));
  ret.addPropertyResult("autoMinorVersionUpgrade", "AutoMinorVersionUpgrade", (properties.AutoMinorVersionUpgrade != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade) : undefined));
  ret.addPropertyResult("availabilityZones", "AvailabilityZones", (properties.AvailabilityZones != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.AvailabilityZones) : undefined));
  ret.addPropertyResult("backtrackWindow", "BacktrackWindow", (properties.BacktrackWindow != null ? cfn_parse.FromCloudFormation.getNumber(properties.BacktrackWindow) : undefined));
  ret.addPropertyResult("backupRetentionPeriod", "BackupRetentionPeriod", (properties.BackupRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.BackupRetentionPeriod) : undefined));
  ret.addPropertyResult("copyTagsToSnapshot", "CopyTagsToSnapshot", (properties.CopyTagsToSnapshot != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CopyTagsToSnapshot) : undefined));
  ret.addPropertyResult("databaseName", "DatabaseName", (properties.DatabaseName != null ? cfn_parse.FromCloudFormation.getString(properties.DatabaseName) : undefined));
  ret.addPropertyResult("dbClusterIdentifier", "DBClusterIdentifier", (properties.DBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterIdentifier) : undefined));
  ret.addPropertyResult("dbClusterInstanceClass", "DBClusterInstanceClass", (properties.DBClusterInstanceClass != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterInstanceClass) : undefined));
  ret.addPropertyResult("dbClusterParameterGroupName", "DBClusterParameterGroupName", (properties.DBClusterParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterParameterGroupName) : undefined));
  ret.addPropertyResult("dbInstanceParameterGroupName", "DBInstanceParameterGroupName", (properties.DBInstanceParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBInstanceParameterGroupName) : undefined));
  ret.addPropertyResult("dbSubnetGroupName", "DBSubnetGroupName", (properties.DBSubnetGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupName) : undefined));
  ret.addPropertyResult("dbSystemId", "DBSystemId", (properties.DBSystemId != null ? cfn_parse.FromCloudFormation.getString(properties.DBSystemId) : undefined));
  ret.addPropertyResult("deletionProtection", "DeletionProtection", (properties.DeletionProtection != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeletionProtection) : undefined));
  ret.addPropertyResult("domain", "Domain", (properties.Domain != null ? cfn_parse.FromCloudFormation.getString(properties.Domain) : undefined));
  ret.addPropertyResult("domainIamRoleName", "DomainIAMRoleName", (properties.DomainIAMRoleName != null ? cfn_parse.FromCloudFormation.getString(properties.DomainIAMRoleName) : undefined));
  ret.addPropertyResult("enableCloudwatchLogsExports", "EnableCloudwatchLogsExports", (properties.EnableCloudwatchLogsExports != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EnableCloudwatchLogsExports) : undefined));
  ret.addPropertyResult("enableHttpEndpoint", "EnableHttpEndpoint", (properties.EnableHttpEndpoint != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableHttpEndpoint) : undefined));
  ret.addPropertyResult("enableIamDatabaseAuthentication", "EnableIAMDatabaseAuthentication", (properties.EnableIAMDatabaseAuthentication != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableIAMDatabaseAuthentication) : undefined));
  ret.addPropertyResult("engine", "Engine", (properties.Engine != null ? cfn_parse.FromCloudFormation.getString(properties.Engine) : undefined));
  ret.addPropertyResult("engineMode", "EngineMode", (properties.EngineMode != null ? cfn_parse.FromCloudFormation.getString(properties.EngineMode) : undefined));
  ret.addPropertyResult("engineVersion", "EngineVersion", (properties.EngineVersion != null ? cfn_parse.FromCloudFormation.getString(properties.EngineVersion) : undefined));
  ret.addPropertyResult("globalClusterIdentifier", "GlobalClusterIdentifier", (properties.GlobalClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.GlobalClusterIdentifier) : undefined));
  ret.addPropertyResult("iops", "Iops", (properties.Iops != null ? cfn_parse.FromCloudFormation.getNumber(properties.Iops) : undefined));
  ret.addPropertyResult("kmsKeyId", "KmsKeyId", (properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined));
  ret.addPropertyResult("manageMasterUserPassword", "ManageMasterUserPassword", (properties.ManageMasterUserPassword != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ManageMasterUserPassword) : undefined));
  ret.addPropertyResult("masterUsername", "MasterUsername", (properties.MasterUsername != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUsername) : undefined));
  ret.addPropertyResult("masterUserPassword", "MasterUserPassword", (properties.MasterUserPassword != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUserPassword) : undefined));
  ret.addPropertyResult("masterUserSecret", "MasterUserSecret", (properties.MasterUserSecret != null ? CfnDBClusterMasterUserSecretPropertyFromCloudFormation(properties.MasterUserSecret) : undefined));
  ret.addPropertyResult("monitoringInterval", "MonitoringInterval", (properties.MonitoringInterval != null ? cfn_parse.FromCloudFormation.getNumber(properties.MonitoringInterval) : undefined));
  ret.addPropertyResult("monitoringRoleArn", "MonitoringRoleArn", (properties.MonitoringRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.MonitoringRoleArn) : undefined));
  ret.addPropertyResult("networkType", "NetworkType", (properties.NetworkType != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkType) : undefined));
  ret.addPropertyResult("performanceInsightsEnabled", "PerformanceInsightsEnabled", (properties.PerformanceInsightsEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PerformanceInsightsEnabled) : undefined));
  ret.addPropertyResult("performanceInsightsKmsKeyId", "PerformanceInsightsKmsKeyId", (properties.PerformanceInsightsKmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.PerformanceInsightsKmsKeyId) : undefined));
  ret.addPropertyResult("performanceInsightsRetentionPeriod", "PerformanceInsightsRetentionPeriod", (properties.PerformanceInsightsRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.PerformanceInsightsRetentionPeriod) : undefined));
  ret.addPropertyResult("port", "Port", (properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined));
  ret.addPropertyResult("preferredBackupWindow", "PreferredBackupWindow", (properties.PreferredBackupWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredBackupWindow) : undefined));
  ret.addPropertyResult("preferredMaintenanceWindow", "PreferredMaintenanceWindow", (properties.PreferredMaintenanceWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow) : undefined));
  ret.addPropertyResult("publiclyAccessible", "PubliclyAccessible", (properties.PubliclyAccessible != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible) : undefined));
  ret.addPropertyResult("replicationSourceIdentifier", "ReplicationSourceIdentifier", (properties.ReplicationSourceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ReplicationSourceIdentifier) : undefined));
  ret.addPropertyResult("restoreToTime", "RestoreToTime", (properties.RestoreToTime != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreToTime) : undefined));
  ret.addPropertyResult("restoreType", "RestoreType", (properties.RestoreType != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreType) : undefined));
  ret.addPropertyResult("scalingConfiguration", "ScalingConfiguration", (properties.ScalingConfiguration != null ? CfnDBClusterScalingConfigurationPropertyFromCloudFormation(properties.ScalingConfiguration) : undefined));
  ret.addPropertyResult("serverlessV2ScalingConfiguration", "ServerlessV2ScalingConfiguration", (properties.ServerlessV2ScalingConfiguration != null ? CfnDBClusterServerlessV2ScalingConfigurationPropertyFromCloudFormation(properties.ServerlessV2ScalingConfiguration) : undefined));
  ret.addPropertyResult("snapshotIdentifier", "SnapshotIdentifier", (properties.SnapshotIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SnapshotIdentifier) : undefined));
  ret.addPropertyResult("sourceDbClusterIdentifier", "SourceDBClusterIdentifier", (properties.SourceDBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SourceDBClusterIdentifier) : undefined));
  ret.addPropertyResult("sourceRegion", "SourceRegion", (properties.SourceRegion != null ? cfn_parse.FromCloudFormation.getString(properties.SourceRegion) : undefined));
  ret.addPropertyResult("storageEncrypted", "StorageEncrypted", (properties.StorageEncrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.StorageEncrypted) : undefined));
  ret.addPropertyResult("storageType", "StorageType", (properties.StorageType != null ? cfn_parse.FromCloudFormation.getString(properties.StorageType) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("useLatestRestorableTime", "UseLatestRestorableTime", (properties.UseLatestRestorableTime != null ? cfn_parse.FromCloudFormation.getBoolean(properties.UseLatestRestorableTime) : undefined));
  ret.addPropertyResult("vpcSecurityGroupIds", "VpcSecurityGroupIds", (properties.VpcSecurityGroupIds != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`ServerlessV2ScalingConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`ServerlessV2ScalingConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnDBClusterServerlessV2ScalingConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("allocatedStorage", cdk.validateNumber)(properties.allocatedStorage));
  errors.collect(cdk.propertyValidator("associatedRoles", cdk.listValidator(CfnDBClusterDBClusterRolePropertyValidator))(properties.associatedRoles));
  errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade", cdk.validateBoolean)(properties.autoMinorVersionUpgrade));
  errors.collect(cdk.propertyValidator("availabilityZones", cdk.listValidator(cdk.validateString))(properties.availabilityZones));
  errors.collect(cdk.propertyValidator("backtrackWindow", cdk.validateNumber)(properties.backtrackWindow));
  errors.collect(cdk.propertyValidator("backupRetentionPeriod", cdk.validateNumber)(properties.backupRetentionPeriod));
  errors.collect(cdk.propertyValidator("copyTagsToSnapshot", cdk.validateBoolean)(properties.copyTagsToSnapshot));
  errors.collect(cdk.propertyValidator("dbClusterIdentifier", cdk.validateString)(properties.dbClusterIdentifier));
  errors.collect(cdk.propertyValidator("dbClusterInstanceClass", cdk.validateString)(properties.dbClusterInstanceClass));
  errors.collect(cdk.propertyValidator("dbClusterParameterGroupName", cdk.validateString)(properties.dbClusterParameterGroupName));
  errors.collect(cdk.propertyValidator("dbInstanceParameterGroupName", cdk.validateString)(properties.dbInstanceParameterGroupName));
  errors.collect(cdk.propertyValidator("dbSubnetGroupName", cdk.validateString)(properties.dbSubnetGroupName));
  errors.collect(cdk.propertyValidator("dbSystemId", cdk.validateString)(properties.dbSystemId));
  errors.collect(cdk.propertyValidator("databaseName", cdk.validateString)(properties.databaseName));
  errors.collect(cdk.propertyValidator("deletionProtection", cdk.validateBoolean)(properties.deletionProtection));
  errors.collect(cdk.propertyValidator("domain", cdk.validateString)(properties.domain));
  errors.collect(cdk.propertyValidator("domainIamRoleName", cdk.validateString)(properties.domainIamRoleName));
  errors.collect(cdk.propertyValidator("enableCloudwatchLogsExports", cdk.listValidator(cdk.validateString))(properties.enableCloudwatchLogsExports));
  errors.collect(cdk.propertyValidator("enableHttpEndpoint", cdk.validateBoolean)(properties.enableHttpEndpoint));
  errors.collect(cdk.propertyValidator("enableIamDatabaseAuthentication", cdk.validateBoolean)(properties.enableIamDatabaseAuthentication));
  errors.collect(cdk.propertyValidator("engine", cdk.validateString)(properties.engine));
  errors.collect(cdk.propertyValidator("engineMode", cdk.validateString)(properties.engineMode));
  errors.collect(cdk.propertyValidator("engineVersion", cdk.validateString)(properties.engineVersion));
  errors.collect(cdk.propertyValidator("globalClusterIdentifier", cdk.validateString)(properties.globalClusterIdentifier));
  errors.collect(cdk.propertyValidator("iops", cdk.validateNumber)(properties.iops));
  errors.collect(cdk.propertyValidator("kmsKeyId", cdk.validateString)(properties.kmsKeyId));
  errors.collect(cdk.propertyValidator("manageMasterUserPassword", cdk.validateBoolean)(properties.manageMasterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserPassword", cdk.validateString)(properties.masterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserSecret", CfnDBClusterMasterUserSecretPropertyValidator)(properties.masterUserSecret));
  errors.collect(cdk.propertyValidator("masterUsername", cdk.validateString)(properties.masterUsername));
  errors.collect(cdk.propertyValidator("monitoringInterval", cdk.validateNumber)(properties.monitoringInterval));
  errors.collect(cdk.propertyValidator("monitoringRoleArn", cdk.validateString)(properties.monitoringRoleArn));
  errors.collect(cdk.propertyValidator("networkType", cdk.validateString)(properties.networkType));
  errors.collect(cdk.propertyValidator("performanceInsightsEnabled", cdk.validateBoolean)(properties.performanceInsightsEnabled));
  errors.collect(cdk.propertyValidator("performanceInsightsKmsKeyId", cdk.validateString)(properties.performanceInsightsKmsKeyId));
  errors.collect(cdk.propertyValidator("performanceInsightsRetentionPeriod", cdk.validateNumber)(properties.performanceInsightsRetentionPeriod));
  errors.collect(cdk.propertyValidator("port", cdk.validateNumber)(properties.port));
  errors.collect(cdk.propertyValidator("preferredBackupWindow", cdk.validateString)(properties.preferredBackupWindow));
  errors.collect(cdk.propertyValidator("preferredMaintenanceWindow", cdk.validateString)(properties.preferredMaintenanceWindow));
  errors.collect(cdk.propertyValidator("publiclyAccessible", cdk.validateBoolean)(properties.publiclyAccessible));
  errors.collect(cdk.propertyValidator("replicationSourceIdentifier", cdk.validateString)(properties.replicationSourceIdentifier));
  errors.collect(cdk.propertyValidator("restoreToTime", cdk.validateString)(properties.restoreToTime));
  errors.collect(cdk.propertyValidator("restoreType", cdk.validateString)(properties.restoreType));
  errors.collect(cdk.propertyValidator("scalingConfiguration", CfnDBClusterScalingConfigurationPropertyValidator)(properties.scalingConfiguration));
  errors.collect(cdk.propertyValidator("serverlessV2ScalingConfiguration", CfnDBClusterServerlessV2ScalingConfigurationPropertyValidator)(properties.serverlessV2ScalingConfiguration));
  errors.collect(cdk.propertyValidator("snapshotIdentifier", cdk.validateString)(properties.snapshotIdentifier));
  errors.collect(cdk.propertyValidator("sourceDbClusterIdentifier", cdk.validateString)(properties.sourceDbClusterIdentifier));
  errors.collect(cdk.propertyValidator("sourceRegion", cdk.validateString)(properties.sourceRegion));
  errors.collect(cdk.propertyValidator("storageEncrypted", cdk.validateBoolean)(properties.storageEncrypted));
  errors.collect(cdk.propertyValidator("storageType", cdk.validateString)(properties.storageType));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnDBClusterTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("useLatestRestorableTime", cdk.validateBoolean)(properties.useLatestRestorableTime));
  errors.collect(cdk.propertyValidator("vpcSecurityGroupIds", cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds));
  return errors.wrap("supplied properties not correct for \\"ServerlessV2ScalingConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnDBClusterServerlessV2ScalingConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnDBClusterServerlessV2ScalingConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AllocatedStorage": cdk.numberToCloudFormation(properties.allocatedStorage),
    "AssociatedRoles": cdk.listMapper(convertCfnDBClusterDBClusterRolePropertyToCloudFormation)(properties.associatedRoles),
    "AutoMinorVersionUpgrade": cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),
    "AvailabilityZones": cdk.listMapper(cdk.stringToCloudFormation)(properties.availabilityZones),
    "BacktrackWindow": cdk.numberToCloudFormation(properties.backtrackWindow),
    "BackupRetentionPeriod": cdk.numberToCloudFormation(properties.backupRetentionPeriod),
    "CopyTagsToSnapshot": cdk.booleanToCloudFormation(properties.copyTagsToSnapshot),
    "DBClusterIdentifier": cdk.stringToCloudFormation(properties.dbClusterIdentifier),
    "DBClusterInstanceClass": cdk.stringToCloudFormation(properties.dbClusterInstanceClass),
    "DBClusterParameterGroupName": cdk.stringToCloudFormation(properties.dbClusterParameterGroupName),
    "DBInstanceParameterGroupName": cdk.stringToCloudFormation(properties.dbInstanceParameterGroupName),
    "DBSubnetGroupName": cdk.stringToCloudFormation(properties.dbSubnetGroupName),
    "DBSystemId": cdk.stringToCloudFormation(properties.dbSystemId),
    "DatabaseName": cdk.stringToCloudFormation(properties.databaseName),
    "DeletionProtection": cdk.booleanToCloudFormation(properties.deletionProtection),
    "Domain": cdk.stringToCloudFormation(properties.domain),
    "DomainIAMRoleName": cdk.stringToCloudFormation(properties.domainIamRoleName),
    "EnableCloudwatchLogsExports": cdk.listMapper(cdk.stringToCloudFormation)(properties.enableCloudwatchLogsExports),
    "EnableHttpEndpoint": cdk.booleanToCloudFormation(properties.enableHttpEndpoint),
    "EnableIAMDatabaseAuthentication": cdk.booleanToCloudFormation(properties.enableIamDatabaseAuthentication),
    "Engine": cdk.stringToCloudFormation(properties.engine),
    "EngineMode": cdk.stringToCloudFormation(properties.engineMode),
    "EngineVersion": cdk.stringToCloudFormation(properties.engineVersion),
    "GlobalClusterIdentifier": cdk.stringToCloudFormation(properties.globalClusterIdentifier),
    "Iops": cdk.numberToCloudFormation(properties.iops),
    "KmsKeyId": cdk.stringToCloudFormation(properties.kmsKeyId),
    "ManageMasterUserPassword": cdk.booleanToCloudFormation(properties.manageMasterUserPassword),
    "MasterUserPassword": cdk.stringToCloudFormation(properties.masterUserPassword),
    "MasterUserSecret": convertCfnDBClusterMasterUserSecretPropertyToCloudFormation(properties.masterUserSecret),
    "MasterUsername": cdk.stringToCloudFormation(properties.masterUsername),
    "MonitoringInterval": cdk.numberToCloudFormation(properties.monitoringInterval),
    "MonitoringRoleArn": cdk.stringToCloudFormation(properties.monitoringRoleArn),
    "NetworkType": cdk.stringToCloudFormation(properties.networkType),
    "PerformanceInsightsEnabled": cdk.booleanToCloudFormation(properties.performanceInsightsEnabled),
    "PerformanceInsightsKmsKeyId": cdk.stringToCloudFormation(properties.performanceInsightsKmsKeyId),
    "PerformanceInsightsRetentionPeriod": cdk.numberToCloudFormation(properties.performanceInsightsRetentionPeriod),
    "Port": cdk.numberToCloudFormation(properties.port),
    "PreferredBackupWindow": cdk.stringToCloudFormation(properties.preferredBackupWindow),
    "PreferredMaintenanceWindow": cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),
    "PubliclyAccessible": cdk.booleanToCloudFormation(properties.publiclyAccessible),
    "ReplicationSourceIdentifier": cdk.stringToCloudFormation(properties.replicationSourceIdentifier),
    "RestoreToTime": cdk.stringToCloudFormation(properties.restoreToTime),
    "RestoreType": cdk.stringToCloudFormation(properties.restoreType),
    "ScalingConfiguration": convertCfnDBClusterScalingConfigurationPropertyToCloudFormation(properties.scalingConfiguration),
    "ServerlessV2ScalingConfiguration": convertCfnDBClusterServerlessV2ScalingConfigurationPropertyToCloudFormation(properties.serverlessV2ScalingConfiguration),
    "SnapshotIdentifier": cdk.stringToCloudFormation(properties.snapshotIdentifier),
    "SourceDBClusterIdentifier": cdk.stringToCloudFormation(properties.sourceDbClusterIdentifier),
    "SourceRegion": cdk.stringToCloudFormation(properties.sourceRegion),
    "StorageEncrypted": cdk.booleanToCloudFormation(properties.storageEncrypted),
    "StorageType": cdk.stringToCloudFormation(properties.storageType),
    "Tags": cdk.listMapper(convertCfnDBClusterTagPropertyToCloudFormation)(properties.tags),
    "UseLatestRestorableTime": cdk.booleanToCloudFormation(properties.useLatestRestorableTime),
    "VpcSecurityGroupIds": cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)
  };
}

// @ts-ignore TS6133
function CfnDBClusterServerlessV2ScalingConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnDBCluster.ServerlessV2ScalingConfigurationProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBCluster.ServerlessV2ScalingConfigurationProperty>();
  ret.addPropertyResult("allocatedStorage", "AllocatedStorage", (properties.AllocatedStorage != null ? cfn_parse.FromCloudFormation.getNumber(properties.AllocatedStorage) : undefined));
  ret.addPropertyResult("associatedRoles", "AssociatedRoles", (properties.AssociatedRoles != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterDBClusterRolePropertyFromCloudFormation)(properties.AssociatedRoles) : undefined));
  ret.addPropertyResult("autoMinorVersionUpgrade", "AutoMinorVersionUpgrade", (properties.AutoMinorVersionUpgrade != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade) : undefined));
  ret.addPropertyResult("availabilityZones", "AvailabilityZones", (properties.AvailabilityZones != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.AvailabilityZones) : undefined));
  ret.addPropertyResult("backtrackWindow", "BacktrackWindow", (properties.BacktrackWindow != null ? cfn_parse.FromCloudFormation.getNumber(properties.BacktrackWindow) : undefined));
  ret.addPropertyResult("backupRetentionPeriod", "BackupRetentionPeriod", (properties.BackupRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.BackupRetentionPeriod) : undefined));
  ret.addPropertyResult("copyTagsToSnapshot", "CopyTagsToSnapshot", (properties.CopyTagsToSnapshot != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CopyTagsToSnapshot) : undefined));
  ret.addPropertyResult("databaseName", "DatabaseName", (properties.DatabaseName != null ? cfn_parse.FromCloudFormation.getString(properties.DatabaseName) : undefined));
  ret.addPropertyResult("dbClusterIdentifier", "DBClusterIdentifier", (properties.DBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterIdentifier) : undefined));
  ret.addPropertyResult("dbClusterInstanceClass", "DBClusterInstanceClass", (properties.DBClusterInstanceClass != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterInstanceClass) : undefined));
  ret.addPropertyResult("dbClusterParameterGroupName", "DBClusterParameterGroupName", (properties.DBClusterParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterParameterGroupName) : undefined));
  ret.addPropertyResult("dbInstanceParameterGroupName", "DBInstanceParameterGroupName", (properties.DBInstanceParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBInstanceParameterGroupName) : undefined));
  ret.addPropertyResult("dbSubnetGroupName", "DBSubnetGroupName", (properties.DBSubnetGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupName) : undefined));
  ret.addPropertyResult("dbSystemId", "DBSystemId", (properties.DBSystemId != null ? cfn_parse.FromCloudFormation.getString(properties.DBSystemId) : undefined));
  ret.addPropertyResult("deletionProtection", "DeletionProtection", (properties.DeletionProtection != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeletionProtection) : undefined));
  ret.addPropertyResult("domain", "Domain", (properties.Domain != null ? cfn_parse.FromCloudFormation.getString(properties.Domain) : undefined));
  ret.addPropertyResult("domainIamRoleName", "DomainIAMRoleName", (properties.DomainIAMRoleName != null ? cfn_parse.FromCloudFormation.getString(properties.DomainIAMRoleName) : undefined));
  ret.addPropertyResult("enableCloudwatchLogsExports", "EnableCloudwatchLogsExports", (properties.EnableCloudwatchLogsExports != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EnableCloudwatchLogsExports) : undefined));
  ret.addPropertyResult("enableHttpEndpoint", "EnableHttpEndpoint", (properties.EnableHttpEndpoint != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableHttpEndpoint) : undefined));
  ret.addPropertyResult("enableIamDatabaseAuthentication", "EnableIAMDatabaseAuthentication", (properties.EnableIAMDatabaseAuthentication != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableIAMDatabaseAuthentication) : undefined));
  ret.addPropertyResult("engine", "Engine", (properties.Engine != null ? cfn_parse.FromCloudFormation.getString(properties.Engine) : undefined));
  ret.addPropertyResult("engineMode", "EngineMode", (properties.EngineMode != null ? cfn_parse.FromCloudFormation.getString(properties.EngineMode) : undefined));
  ret.addPropertyResult("engineVersion", "EngineVersion", (properties.EngineVersion != null ? cfn_parse.FromCloudFormation.getString(properties.EngineVersion) : undefined));
  ret.addPropertyResult("globalClusterIdentifier", "GlobalClusterIdentifier", (properties.GlobalClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.GlobalClusterIdentifier) : undefined));
  ret.addPropertyResult("iops", "Iops", (properties.Iops != null ? cfn_parse.FromCloudFormation.getNumber(properties.Iops) : undefined));
  ret.addPropertyResult("kmsKeyId", "KmsKeyId", (properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined));
  ret.addPropertyResult("manageMasterUserPassword", "ManageMasterUserPassword", (properties.ManageMasterUserPassword != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ManageMasterUserPassword) : undefined));
  ret.addPropertyResult("masterUsername", "MasterUsername", (properties.MasterUsername != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUsername) : undefined));
  ret.addPropertyResult("masterUserPassword", "MasterUserPassword", (properties.MasterUserPassword != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUserPassword) : undefined));
  ret.addPropertyResult("masterUserSecret", "MasterUserSecret", (properties.MasterUserSecret != null ? CfnDBClusterMasterUserSecretPropertyFromCloudFormation(properties.MasterUserSecret) : undefined));
  ret.addPropertyResult("monitoringInterval", "MonitoringInterval", (properties.MonitoringInterval != null ? cfn_parse.FromCloudFormation.getNumber(properties.MonitoringInterval) : undefined));
  ret.addPropertyResult("monitoringRoleArn", "MonitoringRoleArn", (properties.MonitoringRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.MonitoringRoleArn) : undefined));
  ret.addPropertyResult("networkType", "NetworkType", (properties.NetworkType != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkType) : undefined));
  ret.addPropertyResult("performanceInsightsEnabled", "PerformanceInsightsEnabled", (properties.PerformanceInsightsEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PerformanceInsightsEnabled) : undefined));
  ret.addPropertyResult("performanceInsightsKmsKeyId", "PerformanceInsightsKmsKeyId", (properties.PerformanceInsightsKmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.PerformanceInsightsKmsKeyId) : undefined));
  ret.addPropertyResult("performanceInsightsRetentionPeriod", "PerformanceInsightsRetentionPeriod", (properties.PerformanceInsightsRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.PerformanceInsightsRetentionPeriod) : undefined));
  ret.addPropertyResult("port", "Port", (properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined));
  ret.addPropertyResult("preferredBackupWindow", "PreferredBackupWindow", (properties.PreferredBackupWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredBackupWindow) : undefined));
  ret.addPropertyResult("preferredMaintenanceWindow", "PreferredMaintenanceWindow", (properties.PreferredMaintenanceWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow) : undefined));
  ret.addPropertyResult("publiclyAccessible", "PubliclyAccessible", (properties.PubliclyAccessible != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible) : undefined));
  ret.addPropertyResult("replicationSourceIdentifier", "ReplicationSourceIdentifier", (properties.ReplicationSourceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ReplicationSourceIdentifier) : undefined));
  ret.addPropertyResult("restoreToTime", "RestoreToTime", (properties.RestoreToTime != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreToTime) : undefined));
  ret.addPropertyResult("restoreType", "RestoreType", (properties.RestoreType != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreType) : undefined));
  ret.addPropertyResult("scalingConfiguration", "ScalingConfiguration", (properties.ScalingConfiguration != null ? CfnDBClusterScalingConfigurationPropertyFromCloudFormation(properties.ScalingConfiguration) : undefined));
  ret.addPropertyResult("serverlessV2ScalingConfiguration", "ServerlessV2ScalingConfiguration", (properties.ServerlessV2ScalingConfiguration != null ? CfnDBClusterServerlessV2ScalingConfigurationPropertyFromCloudFormation(properties.ServerlessV2ScalingConfiguration) : undefined));
  ret.addPropertyResult("snapshotIdentifier", "SnapshotIdentifier", (properties.SnapshotIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SnapshotIdentifier) : undefined));
  ret.addPropertyResult("sourceDbClusterIdentifier", "SourceDBClusterIdentifier", (properties.SourceDBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SourceDBClusterIdentifier) : undefined));
  ret.addPropertyResult("sourceRegion", "SourceRegion", (properties.SourceRegion != null ? cfn_parse.FromCloudFormation.getString(properties.SourceRegion) : undefined));
  ret.addPropertyResult("storageEncrypted", "StorageEncrypted", (properties.StorageEncrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.StorageEncrypted) : undefined));
  ret.addPropertyResult("storageType", "StorageType", (properties.StorageType != null ? cfn_parse.FromCloudFormation.getString(properties.StorageType) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("useLatestRestorableTime", "UseLatestRestorableTime", (properties.UseLatestRestorableTime != null ? cfn_parse.FromCloudFormation.getBoolean(properties.UseLatestRestorableTime) : undefined));
  ret.addPropertyResult("vpcSecurityGroupIds", "VpcSecurityGroupIds", (properties.VpcSecurityGroupIds != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`MasterUserSecretProperty\`
 *
 * @param properties - the TypeScript properties of a \`MasterUserSecretProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnDBClusterMasterUserSecretPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("allocatedStorage", cdk.validateNumber)(properties.allocatedStorage));
  errors.collect(cdk.propertyValidator("associatedRoles", cdk.listValidator(CfnDBClusterDBClusterRolePropertyValidator))(properties.associatedRoles));
  errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade", cdk.validateBoolean)(properties.autoMinorVersionUpgrade));
  errors.collect(cdk.propertyValidator("availabilityZones", cdk.listValidator(cdk.validateString))(properties.availabilityZones));
  errors.collect(cdk.propertyValidator("backtrackWindow", cdk.validateNumber)(properties.backtrackWindow));
  errors.collect(cdk.propertyValidator("backupRetentionPeriod", cdk.validateNumber)(properties.backupRetentionPeriod));
  errors.collect(cdk.propertyValidator("copyTagsToSnapshot", cdk.validateBoolean)(properties.copyTagsToSnapshot));
  errors.collect(cdk.propertyValidator("dbClusterIdentifier", cdk.validateString)(properties.dbClusterIdentifier));
  errors.collect(cdk.propertyValidator("dbClusterInstanceClass", cdk.validateString)(properties.dbClusterInstanceClass));
  errors.collect(cdk.propertyValidator("dbClusterParameterGroupName", cdk.validateString)(properties.dbClusterParameterGroupName));
  errors.collect(cdk.propertyValidator("dbInstanceParameterGroupName", cdk.validateString)(properties.dbInstanceParameterGroupName));
  errors.collect(cdk.propertyValidator("dbSubnetGroupName", cdk.validateString)(properties.dbSubnetGroupName));
  errors.collect(cdk.propertyValidator("dbSystemId", cdk.validateString)(properties.dbSystemId));
  errors.collect(cdk.propertyValidator("databaseName", cdk.validateString)(properties.databaseName));
  errors.collect(cdk.propertyValidator("deletionProtection", cdk.validateBoolean)(properties.deletionProtection));
  errors.collect(cdk.propertyValidator("domain", cdk.validateString)(properties.domain));
  errors.collect(cdk.propertyValidator("domainIamRoleName", cdk.validateString)(properties.domainIamRoleName));
  errors.collect(cdk.propertyValidator("enableCloudwatchLogsExports", cdk.listValidator(cdk.validateString))(properties.enableCloudwatchLogsExports));
  errors.collect(cdk.propertyValidator("enableHttpEndpoint", cdk.validateBoolean)(properties.enableHttpEndpoint));
  errors.collect(cdk.propertyValidator("enableIamDatabaseAuthentication", cdk.validateBoolean)(properties.enableIamDatabaseAuthentication));
  errors.collect(cdk.propertyValidator("engine", cdk.validateString)(properties.engine));
  errors.collect(cdk.propertyValidator("engineMode", cdk.validateString)(properties.engineMode));
  errors.collect(cdk.propertyValidator("engineVersion", cdk.validateString)(properties.engineVersion));
  errors.collect(cdk.propertyValidator("globalClusterIdentifier", cdk.validateString)(properties.globalClusterIdentifier));
  errors.collect(cdk.propertyValidator("iops", cdk.validateNumber)(properties.iops));
  errors.collect(cdk.propertyValidator("kmsKeyId", cdk.validateString)(properties.kmsKeyId));
  errors.collect(cdk.propertyValidator("manageMasterUserPassword", cdk.validateBoolean)(properties.manageMasterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserPassword", cdk.validateString)(properties.masterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserSecret", CfnDBClusterMasterUserSecretPropertyValidator)(properties.masterUserSecret));
  errors.collect(cdk.propertyValidator("masterUsername", cdk.validateString)(properties.masterUsername));
  errors.collect(cdk.propertyValidator("monitoringInterval", cdk.validateNumber)(properties.monitoringInterval));
  errors.collect(cdk.propertyValidator("monitoringRoleArn", cdk.validateString)(properties.monitoringRoleArn));
  errors.collect(cdk.propertyValidator("networkType", cdk.validateString)(properties.networkType));
  errors.collect(cdk.propertyValidator("performanceInsightsEnabled", cdk.validateBoolean)(properties.performanceInsightsEnabled));
  errors.collect(cdk.propertyValidator("performanceInsightsKmsKeyId", cdk.validateString)(properties.performanceInsightsKmsKeyId));
  errors.collect(cdk.propertyValidator("performanceInsightsRetentionPeriod", cdk.validateNumber)(properties.performanceInsightsRetentionPeriod));
  errors.collect(cdk.propertyValidator("port", cdk.validateNumber)(properties.port));
  errors.collect(cdk.propertyValidator("preferredBackupWindow", cdk.validateString)(properties.preferredBackupWindow));
  errors.collect(cdk.propertyValidator("preferredMaintenanceWindow", cdk.validateString)(properties.preferredMaintenanceWindow));
  errors.collect(cdk.propertyValidator("publiclyAccessible", cdk.validateBoolean)(properties.publiclyAccessible));
  errors.collect(cdk.propertyValidator("replicationSourceIdentifier", cdk.validateString)(properties.replicationSourceIdentifier));
  errors.collect(cdk.propertyValidator("restoreToTime", cdk.validateString)(properties.restoreToTime));
  errors.collect(cdk.propertyValidator("restoreType", cdk.validateString)(properties.restoreType));
  errors.collect(cdk.propertyValidator("scalingConfiguration", CfnDBClusterScalingConfigurationPropertyValidator)(properties.scalingConfiguration));
  errors.collect(cdk.propertyValidator("serverlessV2ScalingConfiguration", CfnDBClusterServerlessV2ScalingConfigurationPropertyValidator)(properties.serverlessV2ScalingConfiguration));
  errors.collect(cdk.propertyValidator("snapshotIdentifier", cdk.validateString)(properties.snapshotIdentifier));
  errors.collect(cdk.propertyValidator("sourceDbClusterIdentifier", cdk.validateString)(properties.sourceDbClusterIdentifier));
  errors.collect(cdk.propertyValidator("sourceRegion", cdk.validateString)(properties.sourceRegion));
  errors.collect(cdk.propertyValidator("storageEncrypted", cdk.validateBoolean)(properties.storageEncrypted));
  errors.collect(cdk.propertyValidator("storageType", cdk.validateString)(properties.storageType));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnDBClusterTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("useLatestRestorableTime", cdk.validateBoolean)(properties.useLatestRestorableTime));
  errors.collect(cdk.propertyValidator("vpcSecurityGroupIds", cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds));
  return errors.wrap("supplied properties not correct for \\"MasterUserSecretProperty\\"");
}

// @ts-ignore TS6133
function convertCfnDBClusterMasterUserSecretPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnDBClusterMasterUserSecretPropertyValidator(properties).assertSuccess();
  return {
    "AllocatedStorage": cdk.numberToCloudFormation(properties.allocatedStorage),
    "AssociatedRoles": cdk.listMapper(convertCfnDBClusterDBClusterRolePropertyToCloudFormation)(properties.associatedRoles),
    "AutoMinorVersionUpgrade": cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),
    "AvailabilityZones": cdk.listMapper(cdk.stringToCloudFormation)(properties.availabilityZones),
    "BacktrackWindow": cdk.numberToCloudFormation(properties.backtrackWindow),
    "BackupRetentionPeriod": cdk.numberToCloudFormation(properties.backupRetentionPeriod),
    "CopyTagsToSnapshot": cdk.booleanToCloudFormation(properties.copyTagsToSnapshot),
    "DBClusterIdentifier": cdk.stringToCloudFormation(properties.dbClusterIdentifier),
    "DBClusterInstanceClass": cdk.stringToCloudFormation(properties.dbClusterInstanceClass),
    "DBClusterParameterGroupName": cdk.stringToCloudFormation(properties.dbClusterParameterGroupName),
    "DBInstanceParameterGroupName": cdk.stringToCloudFormation(properties.dbInstanceParameterGroupName),
    "DBSubnetGroupName": cdk.stringToCloudFormation(properties.dbSubnetGroupName),
    "DBSystemId": cdk.stringToCloudFormation(properties.dbSystemId),
    "DatabaseName": cdk.stringToCloudFormation(properties.databaseName),
    "DeletionProtection": cdk.booleanToCloudFormation(properties.deletionProtection),
    "Domain": cdk.stringToCloudFormation(properties.domain),
    "DomainIAMRoleName": cdk.stringToCloudFormation(properties.domainIamRoleName),
    "EnableCloudwatchLogsExports": cdk.listMapper(cdk.stringToCloudFormation)(properties.enableCloudwatchLogsExports),
    "EnableHttpEndpoint": cdk.booleanToCloudFormation(properties.enableHttpEndpoint),
    "EnableIAMDatabaseAuthentication": cdk.booleanToCloudFormation(properties.enableIamDatabaseAuthentication),
    "Engine": cdk.stringToCloudFormation(properties.engine),
    "EngineMode": cdk.stringToCloudFormation(properties.engineMode),
    "EngineVersion": cdk.stringToCloudFormation(properties.engineVersion),
    "GlobalClusterIdentifier": cdk.stringToCloudFormation(properties.globalClusterIdentifier),
    "Iops": cdk.numberToCloudFormation(properties.iops),
    "KmsKeyId": cdk.stringToCloudFormation(properties.kmsKeyId),
    "ManageMasterUserPassword": cdk.booleanToCloudFormation(properties.manageMasterUserPassword),
    "MasterUserPassword": cdk.stringToCloudFormation(properties.masterUserPassword),
    "MasterUserSecret": convertCfnDBClusterMasterUserSecretPropertyToCloudFormation(properties.masterUserSecret),
    "MasterUsername": cdk.stringToCloudFormation(properties.masterUsername),
    "MonitoringInterval": cdk.numberToCloudFormation(properties.monitoringInterval),
    "MonitoringRoleArn": cdk.stringToCloudFormation(properties.monitoringRoleArn),
    "NetworkType": cdk.stringToCloudFormation(properties.networkType),
    "PerformanceInsightsEnabled": cdk.booleanToCloudFormation(properties.performanceInsightsEnabled),
    "PerformanceInsightsKmsKeyId": cdk.stringToCloudFormation(properties.performanceInsightsKmsKeyId),
    "PerformanceInsightsRetentionPeriod": cdk.numberToCloudFormation(properties.performanceInsightsRetentionPeriod),
    "Port": cdk.numberToCloudFormation(properties.port),
    "PreferredBackupWindow": cdk.stringToCloudFormation(properties.preferredBackupWindow),
    "PreferredMaintenanceWindow": cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),
    "PubliclyAccessible": cdk.booleanToCloudFormation(properties.publiclyAccessible),
    "ReplicationSourceIdentifier": cdk.stringToCloudFormation(properties.replicationSourceIdentifier),
    "RestoreToTime": cdk.stringToCloudFormation(properties.restoreToTime),
    "RestoreType": cdk.stringToCloudFormation(properties.restoreType),
    "ScalingConfiguration": convertCfnDBClusterScalingConfigurationPropertyToCloudFormation(properties.scalingConfiguration),
    "ServerlessV2ScalingConfiguration": convertCfnDBClusterServerlessV2ScalingConfigurationPropertyToCloudFormation(properties.serverlessV2ScalingConfiguration),
    "SnapshotIdentifier": cdk.stringToCloudFormation(properties.snapshotIdentifier),
    "SourceDBClusterIdentifier": cdk.stringToCloudFormation(properties.sourceDbClusterIdentifier),
    "SourceRegion": cdk.stringToCloudFormation(properties.sourceRegion),
    "StorageEncrypted": cdk.booleanToCloudFormation(properties.storageEncrypted),
    "StorageType": cdk.stringToCloudFormation(properties.storageType),
    "Tags": cdk.listMapper(convertCfnDBClusterTagPropertyToCloudFormation)(properties.tags),
    "UseLatestRestorableTime": cdk.booleanToCloudFormation(properties.useLatestRestorableTime),
    "VpcSecurityGroupIds": cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)
  };
}

// @ts-ignore TS6133
function CfnDBClusterMasterUserSecretPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnDBCluster.MasterUserSecretProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBCluster.MasterUserSecretProperty>();
  ret.addPropertyResult("allocatedStorage", "AllocatedStorage", (properties.AllocatedStorage != null ? cfn_parse.FromCloudFormation.getNumber(properties.AllocatedStorage) : undefined));
  ret.addPropertyResult("associatedRoles", "AssociatedRoles", (properties.AssociatedRoles != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterDBClusterRolePropertyFromCloudFormation)(properties.AssociatedRoles) : undefined));
  ret.addPropertyResult("autoMinorVersionUpgrade", "AutoMinorVersionUpgrade", (properties.AutoMinorVersionUpgrade != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade) : undefined));
  ret.addPropertyResult("availabilityZones", "AvailabilityZones", (properties.AvailabilityZones != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.AvailabilityZones) : undefined));
  ret.addPropertyResult("backtrackWindow", "BacktrackWindow", (properties.BacktrackWindow != null ? cfn_parse.FromCloudFormation.getNumber(properties.BacktrackWindow) : undefined));
  ret.addPropertyResult("backupRetentionPeriod", "BackupRetentionPeriod", (properties.BackupRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.BackupRetentionPeriod) : undefined));
  ret.addPropertyResult("copyTagsToSnapshot", "CopyTagsToSnapshot", (properties.CopyTagsToSnapshot != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CopyTagsToSnapshot) : undefined));
  ret.addPropertyResult("databaseName", "DatabaseName", (properties.DatabaseName != null ? cfn_parse.FromCloudFormation.getString(properties.DatabaseName) : undefined));
  ret.addPropertyResult("dbClusterIdentifier", "DBClusterIdentifier", (properties.DBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterIdentifier) : undefined));
  ret.addPropertyResult("dbClusterInstanceClass", "DBClusterInstanceClass", (properties.DBClusterInstanceClass != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterInstanceClass) : undefined));
  ret.addPropertyResult("dbClusterParameterGroupName", "DBClusterParameterGroupName", (properties.DBClusterParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterParameterGroupName) : undefined));
  ret.addPropertyResult("dbInstanceParameterGroupName", "DBInstanceParameterGroupName", (properties.DBInstanceParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBInstanceParameterGroupName) : undefined));
  ret.addPropertyResult("dbSubnetGroupName", "DBSubnetGroupName", (properties.DBSubnetGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupName) : undefined));
  ret.addPropertyResult("dbSystemId", "DBSystemId", (properties.DBSystemId != null ? cfn_parse.FromCloudFormation.getString(properties.DBSystemId) : undefined));
  ret.addPropertyResult("deletionProtection", "DeletionProtection", (properties.DeletionProtection != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeletionProtection) : undefined));
  ret.addPropertyResult("domain", "Domain", (properties.Domain != null ? cfn_parse.FromCloudFormation.getString(properties.Domain) : undefined));
  ret.addPropertyResult("domainIamRoleName", "DomainIAMRoleName", (properties.DomainIAMRoleName != null ? cfn_parse.FromCloudFormation.getString(properties.DomainIAMRoleName) : undefined));
  ret.addPropertyResult("enableCloudwatchLogsExports", "EnableCloudwatchLogsExports", (properties.EnableCloudwatchLogsExports != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EnableCloudwatchLogsExports) : undefined));
  ret.addPropertyResult("enableHttpEndpoint", "EnableHttpEndpoint", (properties.EnableHttpEndpoint != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableHttpEndpoint) : undefined));
  ret.addPropertyResult("enableIamDatabaseAuthentication", "EnableIAMDatabaseAuthentication", (properties.EnableIAMDatabaseAuthentication != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableIAMDatabaseAuthentication) : undefined));
  ret.addPropertyResult("engine", "Engine", (properties.Engine != null ? cfn_parse.FromCloudFormation.getString(properties.Engine) : undefined));
  ret.addPropertyResult("engineMode", "EngineMode", (properties.EngineMode != null ? cfn_parse.FromCloudFormation.getString(properties.EngineMode) : undefined));
  ret.addPropertyResult("engineVersion", "EngineVersion", (properties.EngineVersion != null ? cfn_parse.FromCloudFormation.getString(properties.EngineVersion) : undefined));
  ret.addPropertyResult("globalClusterIdentifier", "GlobalClusterIdentifier", (properties.GlobalClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.GlobalClusterIdentifier) : undefined));
  ret.addPropertyResult("iops", "Iops", (properties.Iops != null ? cfn_parse.FromCloudFormation.getNumber(properties.Iops) : undefined));
  ret.addPropertyResult("kmsKeyId", "KmsKeyId", (properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined));
  ret.addPropertyResult("manageMasterUserPassword", "ManageMasterUserPassword", (properties.ManageMasterUserPassword != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ManageMasterUserPassword) : undefined));
  ret.addPropertyResult("masterUsername", "MasterUsername", (properties.MasterUsername != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUsername) : undefined));
  ret.addPropertyResult("masterUserPassword", "MasterUserPassword", (properties.MasterUserPassword != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUserPassword) : undefined));
  ret.addPropertyResult("masterUserSecret", "MasterUserSecret", (properties.MasterUserSecret != null ? CfnDBClusterMasterUserSecretPropertyFromCloudFormation(properties.MasterUserSecret) : undefined));
  ret.addPropertyResult("monitoringInterval", "MonitoringInterval", (properties.MonitoringInterval != null ? cfn_parse.FromCloudFormation.getNumber(properties.MonitoringInterval) : undefined));
  ret.addPropertyResult("monitoringRoleArn", "MonitoringRoleArn", (properties.MonitoringRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.MonitoringRoleArn) : undefined));
  ret.addPropertyResult("networkType", "NetworkType", (properties.NetworkType != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkType) : undefined));
  ret.addPropertyResult("performanceInsightsEnabled", "PerformanceInsightsEnabled", (properties.PerformanceInsightsEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PerformanceInsightsEnabled) : undefined));
  ret.addPropertyResult("performanceInsightsKmsKeyId", "PerformanceInsightsKmsKeyId", (properties.PerformanceInsightsKmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.PerformanceInsightsKmsKeyId) : undefined));
  ret.addPropertyResult("performanceInsightsRetentionPeriod", "PerformanceInsightsRetentionPeriod", (properties.PerformanceInsightsRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.PerformanceInsightsRetentionPeriod) : undefined));
  ret.addPropertyResult("port", "Port", (properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined));
  ret.addPropertyResult("preferredBackupWindow", "PreferredBackupWindow", (properties.PreferredBackupWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredBackupWindow) : undefined));
  ret.addPropertyResult("preferredMaintenanceWindow", "PreferredMaintenanceWindow", (properties.PreferredMaintenanceWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow) : undefined));
  ret.addPropertyResult("publiclyAccessible", "PubliclyAccessible", (properties.PubliclyAccessible != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible) : undefined));
  ret.addPropertyResult("replicationSourceIdentifier", "ReplicationSourceIdentifier", (properties.ReplicationSourceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ReplicationSourceIdentifier) : undefined));
  ret.addPropertyResult("restoreToTime", "RestoreToTime", (properties.RestoreToTime != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreToTime) : undefined));
  ret.addPropertyResult("restoreType", "RestoreType", (properties.RestoreType != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreType) : undefined));
  ret.addPropertyResult("scalingConfiguration", "ScalingConfiguration", (properties.ScalingConfiguration != null ? CfnDBClusterScalingConfigurationPropertyFromCloudFormation(properties.ScalingConfiguration) : undefined));
  ret.addPropertyResult("serverlessV2ScalingConfiguration", "ServerlessV2ScalingConfiguration", (properties.ServerlessV2ScalingConfiguration != null ? CfnDBClusterServerlessV2ScalingConfigurationPropertyFromCloudFormation(properties.ServerlessV2ScalingConfiguration) : undefined));
  ret.addPropertyResult("snapshotIdentifier", "SnapshotIdentifier", (properties.SnapshotIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SnapshotIdentifier) : undefined));
  ret.addPropertyResult("sourceDbClusterIdentifier", "SourceDBClusterIdentifier", (properties.SourceDBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SourceDBClusterIdentifier) : undefined));
  ret.addPropertyResult("sourceRegion", "SourceRegion", (properties.SourceRegion != null ? cfn_parse.FromCloudFormation.getString(properties.SourceRegion) : undefined));
  ret.addPropertyResult("storageEncrypted", "StorageEncrypted", (properties.StorageEncrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.StorageEncrypted) : undefined));
  ret.addPropertyResult("storageType", "StorageType", (properties.StorageType != null ? cfn_parse.FromCloudFormation.getString(properties.StorageType) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("useLatestRestorableTime", "UseLatestRestorableTime", (properties.UseLatestRestorableTime != null ? cfn_parse.FromCloudFormation.getBoolean(properties.UseLatestRestorableTime) : undefined));
  ret.addPropertyResult("vpcSecurityGroupIds", "VpcSecurityGroupIds", (properties.VpcSecurityGroupIds != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`DBClusterRoleProperty\`
 *
 * @param properties - the TypeScript properties of a \`DBClusterRoleProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnDBClusterDBClusterRolePropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("allocatedStorage", cdk.validateNumber)(properties.allocatedStorage));
  errors.collect(cdk.propertyValidator("associatedRoles", cdk.listValidator(CfnDBClusterDBClusterRolePropertyValidator))(properties.associatedRoles));
  errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade", cdk.validateBoolean)(properties.autoMinorVersionUpgrade));
  errors.collect(cdk.propertyValidator("availabilityZones", cdk.listValidator(cdk.validateString))(properties.availabilityZones));
  errors.collect(cdk.propertyValidator("backtrackWindow", cdk.validateNumber)(properties.backtrackWindow));
  errors.collect(cdk.propertyValidator("backupRetentionPeriod", cdk.validateNumber)(properties.backupRetentionPeriod));
  errors.collect(cdk.propertyValidator("copyTagsToSnapshot", cdk.validateBoolean)(properties.copyTagsToSnapshot));
  errors.collect(cdk.propertyValidator("dbClusterIdentifier", cdk.validateString)(properties.dbClusterIdentifier));
  errors.collect(cdk.propertyValidator("dbClusterInstanceClass", cdk.validateString)(properties.dbClusterInstanceClass));
  errors.collect(cdk.propertyValidator("dbClusterParameterGroupName", cdk.validateString)(properties.dbClusterParameterGroupName));
  errors.collect(cdk.propertyValidator("dbInstanceParameterGroupName", cdk.validateString)(properties.dbInstanceParameterGroupName));
  errors.collect(cdk.propertyValidator("dbSubnetGroupName", cdk.validateString)(properties.dbSubnetGroupName));
  errors.collect(cdk.propertyValidator("dbSystemId", cdk.validateString)(properties.dbSystemId));
  errors.collect(cdk.propertyValidator("databaseName", cdk.validateString)(properties.databaseName));
  errors.collect(cdk.propertyValidator("deletionProtection", cdk.validateBoolean)(properties.deletionProtection));
  errors.collect(cdk.propertyValidator("domain", cdk.validateString)(properties.domain));
  errors.collect(cdk.propertyValidator("domainIamRoleName", cdk.validateString)(properties.domainIamRoleName));
  errors.collect(cdk.propertyValidator("enableCloudwatchLogsExports", cdk.listValidator(cdk.validateString))(properties.enableCloudwatchLogsExports));
  errors.collect(cdk.propertyValidator("enableHttpEndpoint", cdk.validateBoolean)(properties.enableHttpEndpoint));
  errors.collect(cdk.propertyValidator("enableIamDatabaseAuthentication", cdk.validateBoolean)(properties.enableIamDatabaseAuthentication));
  errors.collect(cdk.propertyValidator("engine", cdk.validateString)(properties.engine));
  errors.collect(cdk.propertyValidator("engineMode", cdk.validateString)(properties.engineMode));
  errors.collect(cdk.propertyValidator("engineVersion", cdk.validateString)(properties.engineVersion));
  errors.collect(cdk.propertyValidator("globalClusterIdentifier", cdk.validateString)(properties.globalClusterIdentifier));
  errors.collect(cdk.propertyValidator("iops", cdk.validateNumber)(properties.iops));
  errors.collect(cdk.propertyValidator("kmsKeyId", cdk.validateString)(properties.kmsKeyId));
  errors.collect(cdk.propertyValidator("manageMasterUserPassword", cdk.validateBoolean)(properties.manageMasterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserPassword", cdk.validateString)(properties.masterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserSecret", CfnDBClusterMasterUserSecretPropertyValidator)(properties.masterUserSecret));
  errors.collect(cdk.propertyValidator("masterUsername", cdk.validateString)(properties.masterUsername));
  errors.collect(cdk.propertyValidator("monitoringInterval", cdk.validateNumber)(properties.monitoringInterval));
  errors.collect(cdk.propertyValidator("monitoringRoleArn", cdk.validateString)(properties.monitoringRoleArn));
  errors.collect(cdk.propertyValidator("networkType", cdk.validateString)(properties.networkType));
  errors.collect(cdk.propertyValidator("performanceInsightsEnabled", cdk.validateBoolean)(properties.performanceInsightsEnabled));
  errors.collect(cdk.propertyValidator("performanceInsightsKmsKeyId", cdk.validateString)(properties.performanceInsightsKmsKeyId));
  errors.collect(cdk.propertyValidator("performanceInsightsRetentionPeriod", cdk.validateNumber)(properties.performanceInsightsRetentionPeriod));
  errors.collect(cdk.propertyValidator("port", cdk.validateNumber)(properties.port));
  errors.collect(cdk.propertyValidator("preferredBackupWindow", cdk.validateString)(properties.preferredBackupWindow));
  errors.collect(cdk.propertyValidator("preferredMaintenanceWindow", cdk.validateString)(properties.preferredMaintenanceWindow));
  errors.collect(cdk.propertyValidator("publiclyAccessible", cdk.validateBoolean)(properties.publiclyAccessible));
  errors.collect(cdk.propertyValidator("replicationSourceIdentifier", cdk.validateString)(properties.replicationSourceIdentifier));
  errors.collect(cdk.propertyValidator("restoreToTime", cdk.validateString)(properties.restoreToTime));
  errors.collect(cdk.propertyValidator("restoreType", cdk.validateString)(properties.restoreType));
  errors.collect(cdk.propertyValidator("scalingConfiguration", CfnDBClusterScalingConfigurationPropertyValidator)(properties.scalingConfiguration));
  errors.collect(cdk.propertyValidator("serverlessV2ScalingConfiguration", CfnDBClusterServerlessV2ScalingConfigurationPropertyValidator)(properties.serverlessV2ScalingConfiguration));
  errors.collect(cdk.propertyValidator("snapshotIdentifier", cdk.validateString)(properties.snapshotIdentifier));
  errors.collect(cdk.propertyValidator("sourceDbClusterIdentifier", cdk.validateString)(properties.sourceDbClusterIdentifier));
  errors.collect(cdk.propertyValidator("sourceRegion", cdk.validateString)(properties.sourceRegion));
  errors.collect(cdk.propertyValidator("storageEncrypted", cdk.validateBoolean)(properties.storageEncrypted));
  errors.collect(cdk.propertyValidator("storageType", cdk.validateString)(properties.storageType));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnDBClusterTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("useLatestRestorableTime", cdk.validateBoolean)(properties.useLatestRestorableTime));
  errors.collect(cdk.propertyValidator("vpcSecurityGroupIds", cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds));
  return errors.wrap("supplied properties not correct for \\"DBClusterRoleProperty\\"");
}

// @ts-ignore TS6133
function convertCfnDBClusterDBClusterRolePropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnDBClusterDBClusterRolePropertyValidator(properties).assertSuccess();
  return {
    "AllocatedStorage": cdk.numberToCloudFormation(properties.allocatedStorage),
    "AssociatedRoles": cdk.listMapper(convertCfnDBClusterDBClusterRolePropertyToCloudFormation)(properties.associatedRoles),
    "AutoMinorVersionUpgrade": cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),
    "AvailabilityZones": cdk.listMapper(cdk.stringToCloudFormation)(properties.availabilityZones),
    "BacktrackWindow": cdk.numberToCloudFormation(properties.backtrackWindow),
    "BackupRetentionPeriod": cdk.numberToCloudFormation(properties.backupRetentionPeriod),
    "CopyTagsToSnapshot": cdk.booleanToCloudFormation(properties.copyTagsToSnapshot),
    "DBClusterIdentifier": cdk.stringToCloudFormation(properties.dbClusterIdentifier),
    "DBClusterInstanceClass": cdk.stringToCloudFormation(properties.dbClusterInstanceClass),
    "DBClusterParameterGroupName": cdk.stringToCloudFormation(properties.dbClusterParameterGroupName),
    "DBInstanceParameterGroupName": cdk.stringToCloudFormation(properties.dbInstanceParameterGroupName),
    "DBSubnetGroupName": cdk.stringToCloudFormation(properties.dbSubnetGroupName),
    "DBSystemId": cdk.stringToCloudFormation(properties.dbSystemId),
    "DatabaseName": cdk.stringToCloudFormation(properties.databaseName),
    "DeletionProtection": cdk.booleanToCloudFormation(properties.deletionProtection),
    "Domain": cdk.stringToCloudFormation(properties.domain),
    "DomainIAMRoleName": cdk.stringToCloudFormation(properties.domainIamRoleName),
    "EnableCloudwatchLogsExports": cdk.listMapper(cdk.stringToCloudFormation)(properties.enableCloudwatchLogsExports),
    "EnableHttpEndpoint": cdk.booleanToCloudFormation(properties.enableHttpEndpoint),
    "EnableIAMDatabaseAuthentication": cdk.booleanToCloudFormation(properties.enableIamDatabaseAuthentication),
    "Engine": cdk.stringToCloudFormation(properties.engine),
    "EngineMode": cdk.stringToCloudFormation(properties.engineMode),
    "EngineVersion": cdk.stringToCloudFormation(properties.engineVersion),
    "GlobalClusterIdentifier": cdk.stringToCloudFormation(properties.globalClusterIdentifier),
    "Iops": cdk.numberToCloudFormation(properties.iops),
    "KmsKeyId": cdk.stringToCloudFormation(properties.kmsKeyId),
    "ManageMasterUserPassword": cdk.booleanToCloudFormation(properties.manageMasterUserPassword),
    "MasterUserPassword": cdk.stringToCloudFormation(properties.masterUserPassword),
    "MasterUserSecret": convertCfnDBClusterMasterUserSecretPropertyToCloudFormation(properties.masterUserSecret),
    "MasterUsername": cdk.stringToCloudFormation(properties.masterUsername),
    "MonitoringInterval": cdk.numberToCloudFormation(properties.monitoringInterval),
    "MonitoringRoleArn": cdk.stringToCloudFormation(properties.monitoringRoleArn),
    "NetworkType": cdk.stringToCloudFormation(properties.networkType),
    "PerformanceInsightsEnabled": cdk.booleanToCloudFormation(properties.performanceInsightsEnabled),
    "PerformanceInsightsKmsKeyId": cdk.stringToCloudFormation(properties.performanceInsightsKmsKeyId),
    "PerformanceInsightsRetentionPeriod": cdk.numberToCloudFormation(properties.performanceInsightsRetentionPeriod),
    "Port": cdk.numberToCloudFormation(properties.port),
    "PreferredBackupWindow": cdk.stringToCloudFormation(properties.preferredBackupWindow),
    "PreferredMaintenanceWindow": cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),
    "PubliclyAccessible": cdk.booleanToCloudFormation(properties.publiclyAccessible),
    "ReplicationSourceIdentifier": cdk.stringToCloudFormation(properties.replicationSourceIdentifier),
    "RestoreToTime": cdk.stringToCloudFormation(properties.restoreToTime),
    "RestoreType": cdk.stringToCloudFormation(properties.restoreType),
    "ScalingConfiguration": convertCfnDBClusterScalingConfigurationPropertyToCloudFormation(properties.scalingConfiguration),
    "ServerlessV2ScalingConfiguration": convertCfnDBClusterServerlessV2ScalingConfigurationPropertyToCloudFormation(properties.serverlessV2ScalingConfiguration),
    "SnapshotIdentifier": cdk.stringToCloudFormation(properties.snapshotIdentifier),
    "SourceDBClusterIdentifier": cdk.stringToCloudFormation(properties.sourceDbClusterIdentifier),
    "SourceRegion": cdk.stringToCloudFormation(properties.sourceRegion),
    "StorageEncrypted": cdk.booleanToCloudFormation(properties.storageEncrypted),
    "StorageType": cdk.stringToCloudFormation(properties.storageType),
    "Tags": cdk.listMapper(convertCfnDBClusterTagPropertyToCloudFormation)(properties.tags),
    "UseLatestRestorableTime": cdk.booleanToCloudFormation(properties.useLatestRestorableTime),
    "VpcSecurityGroupIds": cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)
  };
}

// @ts-ignore TS6133
function CfnDBClusterDBClusterRolePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBCluster.DBClusterRoleProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBCluster.DBClusterRoleProperty>();
  ret.addPropertyResult("allocatedStorage", "AllocatedStorage", (properties.AllocatedStorage != null ? cfn_parse.FromCloudFormation.getNumber(properties.AllocatedStorage) : undefined));
  ret.addPropertyResult("associatedRoles", "AssociatedRoles", (properties.AssociatedRoles != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterDBClusterRolePropertyFromCloudFormation)(properties.AssociatedRoles) : undefined));
  ret.addPropertyResult("autoMinorVersionUpgrade", "AutoMinorVersionUpgrade", (properties.AutoMinorVersionUpgrade != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade) : undefined));
  ret.addPropertyResult("availabilityZones", "AvailabilityZones", (properties.AvailabilityZones != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.AvailabilityZones) : undefined));
  ret.addPropertyResult("backtrackWindow", "BacktrackWindow", (properties.BacktrackWindow != null ? cfn_parse.FromCloudFormation.getNumber(properties.BacktrackWindow) : undefined));
  ret.addPropertyResult("backupRetentionPeriod", "BackupRetentionPeriod", (properties.BackupRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.BackupRetentionPeriod) : undefined));
  ret.addPropertyResult("copyTagsToSnapshot", "CopyTagsToSnapshot", (properties.CopyTagsToSnapshot != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CopyTagsToSnapshot) : undefined));
  ret.addPropertyResult("databaseName", "DatabaseName", (properties.DatabaseName != null ? cfn_parse.FromCloudFormation.getString(properties.DatabaseName) : undefined));
  ret.addPropertyResult("dbClusterIdentifier", "DBClusterIdentifier", (properties.DBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterIdentifier) : undefined));
  ret.addPropertyResult("dbClusterInstanceClass", "DBClusterInstanceClass", (properties.DBClusterInstanceClass != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterInstanceClass) : undefined));
  ret.addPropertyResult("dbClusterParameterGroupName", "DBClusterParameterGroupName", (properties.DBClusterParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterParameterGroupName) : undefined));
  ret.addPropertyResult("dbInstanceParameterGroupName", "DBInstanceParameterGroupName", (properties.DBInstanceParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBInstanceParameterGroupName) : undefined));
  ret.addPropertyResult("dbSubnetGroupName", "DBSubnetGroupName", (properties.DBSubnetGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupName) : undefined));
  ret.addPropertyResult("dbSystemId", "DBSystemId", (properties.DBSystemId != null ? cfn_parse.FromCloudFormation.getString(properties.DBSystemId) : undefined));
  ret.addPropertyResult("deletionProtection", "DeletionProtection", (properties.DeletionProtection != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeletionProtection) : undefined));
  ret.addPropertyResult("domain", "Domain", (properties.Domain != null ? cfn_parse.FromCloudFormation.getString(properties.Domain) : undefined));
  ret.addPropertyResult("domainIamRoleName", "DomainIAMRoleName", (properties.DomainIAMRoleName != null ? cfn_parse.FromCloudFormation.getString(properties.DomainIAMRoleName) : undefined));
  ret.addPropertyResult("enableCloudwatchLogsExports", "EnableCloudwatchLogsExports", (properties.EnableCloudwatchLogsExports != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EnableCloudwatchLogsExports) : undefined));
  ret.addPropertyResult("enableHttpEndpoint", "EnableHttpEndpoint", (properties.EnableHttpEndpoint != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableHttpEndpoint) : undefined));
  ret.addPropertyResult("enableIamDatabaseAuthentication", "EnableIAMDatabaseAuthentication", (properties.EnableIAMDatabaseAuthentication != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableIAMDatabaseAuthentication) : undefined));
  ret.addPropertyResult("engine", "Engine", (properties.Engine != null ? cfn_parse.FromCloudFormation.getString(properties.Engine) : undefined));
  ret.addPropertyResult("engineMode", "EngineMode", (properties.EngineMode != null ? cfn_parse.FromCloudFormation.getString(properties.EngineMode) : undefined));
  ret.addPropertyResult("engineVersion", "EngineVersion", (properties.EngineVersion != null ? cfn_parse.FromCloudFormation.getString(properties.EngineVersion) : undefined));
  ret.addPropertyResult("globalClusterIdentifier", "GlobalClusterIdentifier", (properties.GlobalClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.GlobalClusterIdentifier) : undefined));
  ret.addPropertyResult("iops", "Iops", (properties.Iops != null ? cfn_parse.FromCloudFormation.getNumber(properties.Iops) : undefined));
  ret.addPropertyResult("kmsKeyId", "KmsKeyId", (properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined));
  ret.addPropertyResult("manageMasterUserPassword", "ManageMasterUserPassword", (properties.ManageMasterUserPassword != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ManageMasterUserPassword) : undefined));
  ret.addPropertyResult("masterUsername", "MasterUsername", (properties.MasterUsername != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUsername) : undefined));
  ret.addPropertyResult("masterUserPassword", "MasterUserPassword", (properties.MasterUserPassword != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUserPassword) : undefined));
  ret.addPropertyResult("masterUserSecret", "MasterUserSecret", (properties.MasterUserSecret != null ? CfnDBClusterMasterUserSecretPropertyFromCloudFormation(properties.MasterUserSecret) : undefined));
  ret.addPropertyResult("monitoringInterval", "MonitoringInterval", (properties.MonitoringInterval != null ? cfn_parse.FromCloudFormation.getNumber(properties.MonitoringInterval) : undefined));
  ret.addPropertyResult("monitoringRoleArn", "MonitoringRoleArn", (properties.MonitoringRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.MonitoringRoleArn) : undefined));
  ret.addPropertyResult("networkType", "NetworkType", (properties.NetworkType != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkType) : undefined));
  ret.addPropertyResult("performanceInsightsEnabled", "PerformanceInsightsEnabled", (properties.PerformanceInsightsEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PerformanceInsightsEnabled) : undefined));
  ret.addPropertyResult("performanceInsightsKmsKeyId", "PerformanceInsightsKmsKeyId", (properties.PerformanceInsightsKmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.PerformanceInsightsKmsKeyId) : undefined));
  ret.addPropertyResult("performanceInsightsRetentionPeriod", "PerformanceInsightsRetentionPeriod", (properties.PerformanceInsightsRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.PerformanceInsightsRetentionPeriod) : undefined));
  ret.addPropertyResult("port", "Port", (properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined));
  ret.addPropertyResult("preferredBackupWindow", "PreferredBackupWindow", (properties.PreferredBackupWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredBackupWindow) : undefined));
  ret.addPropertyResult("preferredMaintenanceWindow", "PreferredMaintenanceWindow", (properties.PreferredMaintenanceWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow) : undefined));
  ret.addPropertyResult("publiclyAccessible", "PubliclyAccessible", (properties.PubliclyAccessible != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible) : undefined));
  ret.addPropertyResult("replicationSourceIdentifier", "ReplicationSourceIdentifier", (properties.ReplicationSourceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ReplicationSourceIdentifier) : undefined));
  ret.addPropertyResult("restoreToTime", "RestoreToTime", (properties.RestoreToTime != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreToTime) : undefined));
  ret.addPropertyResult("restoreType", "RestoreType", (properties.RestoreType != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreType) : undefined));
  ret.addPropertyResult("scalingConfiguration", "ScalingConfiguration", (properties.ScalingConfiguration != null ? CfnDBClusterScalingConfigurationPropertyFromCloudFormation(properties.ScalingConfiguration) : undefined));
  ret.addPropertyResult("serverlessV2ScalingConfiguration", "ServerlessV2ScalingConfiguration", (properties.ServerlessV2ScalingConfiguration != null ? CfnDBClusterServerlessV2ScalingConfigurationPropertyFromCloudFormation(properties.ServerlessV2ScalingConfiguration) : undefined));
  ret.addPropertyResult("snapshotIdentifier", "SnapshotIdentifier", (properties.SnapshotIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SnapshotIdentifier) : undefined));
  ret.addPropertyResult("sourceDbClusterIdentifier", "SourceDBClusterIdentifier", (properties.SourceDBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SourceDBClusterIdentifier) : undefined));
  ret.addPropertyResult("sourceRegion", "SourceRegion", (properties.SourceRegion != null ? cfn_parse.FromCloudFormation.getString(properties.SourceRegion) : undefined));
  ret.addPropertyResult("storageEncrypted", "StorageEncrypted", (properties.StorageEncrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.StorageEncrypted) : undefined));
  ret.addPropertyResult("storageType", "StorageType", (properties.StorageType != null ? cfn_parse.FromCloudFormation.getString(properties.StorageType) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("useLatestRestorableTime", "UseLatestRestorableTime", (properties.UseLatestRestorableTime != null ? cfn_parse.FromCloudFormation.getBoolean(properties.UseLatestRestorableTime) : undefined));
  ret.addPropertyResult("vpcSecurityGroupIds", "VpcSecurityGroupIds", (properties.VpcSecurityGroupIds != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`EndpointProperty\`
 *
 * @param properties - the TypeScript properties of a \`EndpointProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnDBClusterEndpointPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("allocatedStorage", cdk.validateNumber)(properties.allocatedStorage));
  errors.collect(cdk.propertyValidator("associatedRoles", cdk.listValidator(CfnDBClusterDBClusterRolePropertyValidator))(properties.associatedRoles));
  errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade", cdk.validateBoolean)(properties.autoMinorVersionUpgrade));
  errors.collect(cdk.propertyValidator("availabilityZones", cdk.listValidator(cdk.validateString))(properties.availabilityZones));
  errors.collect(cdk.propertyValidator("backtrackWindow", cdk.validateNumber)(properties.backtrackWindow));
  errors.collect(cdk.propertyValidator("backupRetentionPeriod", cdk.validateNumber)(properties.backupRetentionPeriod));
  errors.collect(cdk.propertyValidator("copyTagsToSnapshot", cdk.validateBoolean)(properties.copyTagsToSnapshot));
  errors.collect(cdk.propertyValidator("dbClusterIdentifier", cdk.validateString)(properties.dbClusterIdentifier));
  errors.collect(cdk.propertyValidator("dbClusterInstanceClass", cdk.validateString)(properties.dbClusterInstanceClass));
  errors.collect(cdk.propertyValidator("dbClusterParameterGroupName", cdk.validateString)(properties.dbClusterParameterGroupName));
  errors.collect(cdk.propertyValidator("dbInstanceParameterGroupName", cdk.validateString)(properties.dbInstanceParameterGroupName));
  errors.collect(cdk.propertyValidator("dbSubnetGroupName", cdk.validateString)(properties.dbSubnetGroupName));
  errors.collect(cdk.propertyValidator("dbSystemId", cdk.validateString)(properties.dbSystemId));
  errors.collect(cdk.propertyValidator("databaseName", cdk.validateString)(properties.databaseName));
  errors.collect(cdk.propertyValidator("deletionProtection", cdk.validateBoolean)(properties.deletionProtection));
  errors.collect(cdk.propertyValidator("domain", cdk.validateString)(properties.domain));
  errors.collect(cdk.propertyValidator("domainIamRoleName", cdk.validateString)(properties.domainIamRoleName));
  errors.collect(cdk.propertyValidator("enableCloudwatchLogsExports", cdk.listValidator(cdk.validateString))(properties.enableCloudwatchLogsExports));
  errors.collect(cdk.propertyValidator("enableHttpEndpoint", cdk.validateBoolean)(properties.enableHttpEndpoint));
  errors.collect(cdk.propertyValidator("enableIamDatabaseAuthentication", cdk.validateBoolean)(properties.enableIamDatabaseAuthentication));
  errors.collect(cdk.propertyValidator("engine", cdk.validateString)(properties.engine));
  errors.collect(cdk.propertyValidator("engineMode", cdk.validateString)(properties.engineMode));
  errors.collect(cdk.propertyValidator("engineVersion", cdk.validateString)(properties.engineVersion));
  errors.collect(cdk.propertyValidator("globalClusterIdentifier", cdk.validateString)(properties.globalClusterIdentifier));
  errors.collect(cdk.propertyValidator("iops", cdk.validateNumber)(properties.iops));
  errors.collect(cdk.propertyValidator("kmsKeyId", cdk.validateString)(properties.kmsKeyId));
  errors.collect(cdk.propertyValidator("manageMasterUserPassword", cdk.validateBoolean)(properties.manageMasterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserPassword", cdk.validateString)(properties.masterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserSecret", CfnDBClusterMasterUserSecretPropertyValidator)(properties.masterUserSecret));
  errors.collect(cdk.propertyValidator("masterUsername", cdk.validateString)(properties.masterUsername));
  errors.collect(cdk.propertyValidator("monitoringInterval", cdk.validateNumber)(properties.monitoringInterval));
  errors.collect(cdk.propertyValidator("monitoringRoleArn", cdk.validateString)(properties.monitoringRoleArn));
  errors.collect(cdk.propertyValidator("networkType", cdk.validateString)(properties.networkType));
  errors.collect(cdk.propertyValidator("performanceInsightsEnabled", cdk.validateBoolean)(properties.performanceInsightsEnabled));
  errors.collect(cdk.propertyValidator("performanceInsightsKmsKeyId", cdk.validateString)(properties.performanceInsightsKmsKeyId));
  errors.collect(cdk.propertyValidator("performanceInsightsRetentionPeriod", cdk.validateNumber)(properties.performanceInsightsRetentionPeriod));
  errors.collect(cdk.propertyValidator("port", cdk.validateNumber)(properties.port));
  errors.collect(cdk.propertyValidator("preferredBackupWindow", cdk.validateString)(properties.preferredBackupWindow));
  errors.collect(cdk.propertyValidator("preferredMaintenanceWindow", cdk.validateString)(properties.preferredMaintenanceWindow));
  errors.collect(cdk.propertyValidator("publiclyAccessible", cdk.validateBoolean)(properties.publiclyAccessible));
  errors.collect(cdk.propertyValidator("replicationSourceIdentifier", cdk.validateString)(properties.replicationSourceIdentifier));
  errors.collect(cdk.propertyValidator("restoreToTime", cdk.validateString)(properties.restoreToTime));
  errors.collect(cdk.propertyValidator("restoreType", cdk.validateString)(properties.restoreType));
  errors.collect(cdk.propertyValidator("scalingConfiguration", CfnDBClusterScalingConfigurationPropertyValidator)(properties.scalingConfiguration));
  errors.collect(cdk.propertyValidator("serverlessV2ScalingConfiguration", CfnDBClusterServerlessV2ScalingConfigurationPropertyValidator)(properties.serverlessV2ScalingConfiguration));
  errors.collect(cdk.propertyValidator("snapshotIdentifier", cdk.validateString)(properties.snapshotIdentifier));
  errors.collect(cdk.propertyValidator("sourceDbClusterIdentifier", cdk.validateString)(properties.sourceDbClusterIdentifier));
  errors.collect(cdk.propertyValidator("sourceRegion", cdk.validateString)(properties.sourceRegion));
  errors.collect(cdk.propertyValidator("storageEncrypted", cdk.validateBoolean)(properties.storageEncrypted));
  errors.collect(cdk.propertyValidator("storageType", cdk.validateString)(properties.storageType));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnDBClusterTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("useLatestRestorableTime", cdk.validateBoolean)(properties.useLatestRestorableTime));
  errors.collect(cdk.propertyValidator("vpcSecurityGroupIds", cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds));
  return errors.wrap("supplied properties not correct for \\"EndpointProperty\\"");
}

// @ts-ignore TS6133
function convertCfnDBClusterEndpointPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnDBClusterEndpointPropertyValidator(properties).assertSuccess();
  return {
    "AllocatedStorage": cdk.numberToCloudFormation(properties.allocatedStorage),
    "AssociatedRoles": cdk.listMapper(convertCfnDBClusterDBClusterRolePropertyToCloudFormation)(properties.associatedRoles),
    "AutoMinorVersionUpgrade": cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),
    "AvailabilityZones": cdk.listMapper(cdk.stringToCloudFormation)(properties.availabilityZones),
    "BacktrackWindow": cdk.numberToCloudFormation(properties.backtrackWindow),
    "BackupRetentionPeriod": cdk.numberToCloudFormation(properties.backupRetentionPeriod),
    "CopyTagsToSnapshot": cdk.booleanToCloudFormation(properties.copyTagsToSnapshot),
    "DBClusterIdentifier": cdk.stringToCloudFormation(properties.dbClusterIdentifier),
    "DBClusterInstanceClass": cdk.stringToCloudFormation(properties.dbClusterInstanceClass),
    "DBClusterParameterGroupName": cdk.stringToCloudFormation(properties.dbClusterParameterGroupName),
    "DBInstanceParameterGroupName": cdk.stringToCloudFormation(properties.dbInstanceParameterGroupName),
    "DBSubnetGroupName": cdk.stringToCloudFormation(properties.dbSubnetGroupName),
    "DBSystemId": cdk.stringToCloudFormation(properties.dbSystemId),
    "DatabaseName": cdk.stringToCloudFormation(properties.databaseName),
    "DeletionProtection": cdk.booleanToCloudFormation(properties.deletionProtection),
    "Domain": cdk.stringToCloudFormation(properties.domain),
    "DomainIAMRoleName": cdk.stringToCloudFormation(properties.domainIamRoleName),
    "EnableCloudwatchLogsExports": cdk.listMapper(cdk.stringToCloudFormation)(properties.enableCloudwatchLogsExports),
    "EnableHttpEndpoint": cdk.booleanToCloudFormation(properties.enableHttpEndpoint),
    "EnableIAMDatabaseAuthentication": cdk.booleanToCloudFormation(properties.enableIamDatabaseAuthentication),
    "Engine": cdk.stringToCloudFormation(properties.engine),
    "EngineMode": cdk.stringToCloudFormation(properties.engineMode),
    "EngineVersion": cdk.stringToCloudFormation(properties.engineVersion),
    "GlobalClusterIdentifier": cdk.stringToCloudFormation(properties.globalClusterIdentifier),
    "Iops": cdk.numberToCloudFormation(properties.iops),
    "KmsKeyId": cdk.stringToCloudFormation(properties.kmsKeyId),
    "ManageMasterUserPassword": cdk.booleanToCloudFormation(properties.manageMasterUserPassword),
    "MasterUserPassword": cdk.stringToCloudFormation(properties.masterUserPassword),
    "MasterUserSecret": convertCfnDBClusterMasterUserSecretPropertyToCloudFormation(properties.masterUserSecret),
    "MasterUsername": cdk.stringToCloudFormation(properties.masterUsername),
    "MonitoringInterval": cdk.numberToCloudFormation(properties.monitoringInterval),
    "MonitoringRoleArn": cdk.stringToCloudFormation(properties.monitoringRoleArn),
    "NetworkType": cdk.stringToCloudFormation(properties.networkType),
    "PerformanceInsightsEnabled": cdk.booleanToCloudFormation(properties.performanceInsightsEnabled),
    "PerformanceInsightsKmsKeyId": cdk.stringToCloudFormation(properties.performanceInsightsKmsKeyId),
    "PerformanceInsightsRetentionPeriod": cdk.numberToCloudFormation(properties.performanceInsightsRetentionPeriod),
    "Port": cdk.numberToCloudFormation(properties.port),
    "PreferredBackupWindow": cdk.stringToCloudFormation(properties.preferredBackupWindow),
    "PreferredMaintenanceWindow": cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),
    "PubliclyAccessible": cdk.booleanToCloudFormation(properties.publiclyAccessible),
    "ReplicationSourceIdentifier": cdk.stringToCloudFormation(properties.replicationSourceIdentifier),
    "RestoreToTime": cdk.stringToCloudFormation(properties.restoreToTime),
    "RestoreType": cdk.stringToCloudFormation(properties.restoreType),
    "ScalingConfiguration": convertCfnDBClusterScalingConfigurationPropertyToCloudFormation(properties.scalingConfiguration),
    "ServerlessV2ScalingConfiguration": convertCfnDBClusterServerlessV2ScalingConfigurationPropertyToCloudFormation(properties.serverlessV2ScalingConfiguration),
    "SnapshotIdentifier": cdk.stringToCloudFormation(properties.snapshotIdentifier),
    "SourceDBClusterIdentifier": cdk.stringToCloudFormation(properties.sourceDbClusterIdentifier),
    "SourceRegion": cdk.stringToCloudFormation(properties.sourceRegion),
    "StorageEncrypted": cdk.booleanToCloudFormation(properties.storageEncrypted),
    "StorageType": cdk.stringToCloudFormation(properties.storageType),
    "Tags": cdk.listMapper(convertCfnDBClusterTagPropertyToCloudFormation)(properties.tags),
    "UseLatestRestorableTime": cdk.booleanToCloudFormation(properties.useLatestRestorableTime),
    "VpcSecurityGroupIds": cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)
  };
}

// @ts-ignore TS6133
function CfnDBClusterEndpointPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBCluster.EndpointProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBCluster.EndpointProperty>();
  ret.addPropertyResult("allocatedStorage", "AllocatedStorage", (properties.AllocatedStorage != null ? cfn_parse.FromCloudFormation.getNumber(properties.AllocatedStorage) : undefined));
  ret.addPropertyResult("associatedRoles", "AssociatedRoles", (properties.AssociatedRoles != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterDBClusterRolePropertyFromCloudFormation)(properties.AssociatedRoles) : undefined));
  ret.addPropertyResult("autoMinorVersionUpgrade", "AutoMinorVersionUpgrade", (properties.AutoMinorVersionUpgrade != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade) : undefined));
  ret.addPropertyResult("availabilityZones", "AvailabilityZones", (properties.AvailabilityZones != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.AvailabilityZones) : undefined));
  ret.addPropertyResult("backtrackWindow", "BacktrackWindow", (properties.BacktrackWindow != null ? cfn_parse.FromCloudFormation.getNumber(properties.BacktrackWindow) : undefined));
  ret.addPropertyResult("backupRetentionPeriod", "BackupRetentionPeriod", (properties.BackupRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.BackupRetentionPeriod) : undefined));
  ret.addPropertyResult("copyTagsToSnapshot", "CopyTagsToSnapshot", (properties.CopyTagsToSnapshot != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CopyTagsToSnapshot) : undefined));
  ret.addPropertyResult("databaseName", "DatabaseName", (properties.DatabaseName != null ? cfn_parse.FromCloudFormation.getString(properties.DatabaseName) : undefined));
  ret.addPropertyResult("dbClusterIdentifier", "DBClusterIdentifier", (properties.DBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterIdentifier) : undefined));
  ret.addPropertyResult("dbClusterInstanceClass", "DBClusterInstanceClass", (properties.DBClusterInstanceClass != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterInstanceClass) : undefined));
  ret.addPropertyResult("dbClusterParameterGroupName", "DBClusterParameterGroupName", (properties.DBClusterParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterParameterGroupName) : undefined));
  ret.addPropertyResult("dbInstanceParameterGroupName", "DBInstanceParameterGroupName", (properties.DBInstanceParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBInstanceParameterGroupName) : undefined));
  ret.addPropertyResult("dbSubnetGroupName", "DBSubnetGroupName", (properties.DBSubnetGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupName) : undefined));
  ret.addPropertyResult("dbSystemId", "DBSystemId", (properties.DBSystemId != null ? cfn_parse.FromCloudFormation.getString(properties.DBSystemId) : undefined));
  ret.addPropertyResult("deletionProtection", "DeletionProtection", (properties.DeletionProtection != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeletionProtection) : undefined));
  ret.addPropertyResult("domain", "Domain", (properties.Domain != null ? cfn_parse.FromCloudFormation.getString(properties.Domain) : undefined));
  ret.addPropertyResult("domainIamRoleName", "DomainIAMRoleName", (properties.DomainIAMRoleName != null ? cfn_parse.FromCloudFormation.getString(properties.DomainIAMRoleName) : undefined));
  ret.addPropertyResult("enableCloudwatchLogsExports", "EnableCloudwatchLogsExports", (properties.EnableCloudwatchLogsExports != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EnableCloudwatchLogsExports) : undefined));
  ret.addPropertyResult("enableHttpEndpoint", "EnableHttpEndpoint", (properties.EnableHttpEndpoint != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableHttpEndpoint) : undefined));
  ret.addPropertyResult("enableIamDatabaseAuthentication", "EnableIAMDatabaseAuthentication", (properties.EnableIAMDatabaseAuthentication != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableIAMDatabaseAuthentication) : undefined));
  ret.addPropertyResult("engine", "Engine", (properties.Engine != null ? cfn_parse.FromCloudFormation.getString(properties.Engine) : undefined));
  ret.addPropertyResult("engineMode", "EngineMode", (properties.EngineMode != null ? cfn_parse.FromCloudFormation.getString(properties.EngineMode) : undefined));
  ret.addPropertyResult("engineVersion", "EngineVersion", (properties.EngineVersion != null ? cfn_parse.FromCloudFormation.getString(properties.EngineVersion) : undefined));
  ret.addPropertyResult("globalClusterIdentifier", "GlobalClusterIdentifier", (properties.GlobalClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.GlobalClusterIdentifier) : undefined));
  ret.addPropertyResult("iops", "Iops", (properties.Iops != null ? cfn_parse.FromCloudFormation.getNumber(properties.Iops) : undefined));
  ret.addPropertyResult("kmsKeyId", "KmsKeyId", (properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined));
  ret.addPropertyResult("manageMasterUserPassword", "ManageMasterUserPassword", (properties.ManageMasterUserPassword != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ManageMasterUserPassword) : undefined));
  ret.addPropertyResult("masterUsername", "MasterUsername", (properties.MasterUsername != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUsername) : undefined));
  ret.addPropertyResult("masterUserPassword", "MasterUserPassword", (properties.MasterUserPassword != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUserPassword) : undefined));
  ret.addPropertyResult("masterUserSecret", "MasterUserSecret", (properties.MasterUserSecret != null ? CfnDBClusterMasterUserSecretPropertyFromCloudFormation(properties.MasterUserSecret) : undefined));
  ret.addPropertyResult("monitoringInterval", "MonitoringInterval", (properties.MonitoringInterval != null ? cfn_parse.FromCloudFormation.getNumber(properties.MonitoringInterval) : undefined));
  ret.addPropertyResult("monitoringRoleArn", "MonitoringRoleArn", (properties.MonitoringRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.MonitoringRoleArn) : undefined));
  ret.addPropertyResult("networkType", "NetworkType", (properties.NetworkType != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkType) : undefined));
  ret.addPropertyResult("performanceInsightsEnabled", "PerformanceInsightsEnabled", (properties.PerformanceInsightsEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PerformanceInsightsEnabled) : undefined));
  ret.addPropertyResult("performanceInsightsKmsKeyId", "PerformanceInsightsKmsKeyId", (properties.PerformanceInsightsKmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.PerformanceInsightsKmsKeyId) : undefined));
  ret.addPropertyResult("performanceInsightsRetentionPeriod", "PerformanceInsightsRetentionPeriod", (properties.PerformanceInsightsRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.PerformanceInsightsRetentionPeriod) : undefined));
  ret.addPropertyResult("port", "Port", (properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined));
  ret.addPropertyResult("preferredBackupWindow", "PreferredBackupWindow", (properties.PreferredBackupWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredBackupWindow) : undefined));
  ret.addPropertyResult("preferredMaintenanceWindow", "PreferredMaintenanceWindow", (properties.PreferredMaintenanceWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow) : undefined));
  ret.addPropertyResult("publiclyAccessible", "PubliclyAccessible", (properties.PubliclyAccessible != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible) : undefined));
  ret.addPropertyResult("replicationSourceIdentifier", "ReplicationSourceIdentifier", (properties.ReplicationSourceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ReplicationSourceIdentifier) : undefined));
  ret.addPropertyResult("restoreToTime", "RestoreToTime", (properties.RestoreToTime != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreToTime) : undefined));
  ret.addPropertyResult("restoreType", "RestoreType", (properties.RestoreType != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreType) : undefined));
  ret.addPropertyResult("scalingConfiguration", "ScalingConfiguration", (properties.ScalingConfiguration != null ? CfnDBClusterScalingConfigurationPropertyFromCloudFormation(properties.ScalingConfiguration) : undefined));
  ret.addPropertyResult("serverlessV2ScalingConfiguration", "ServerlessV2ScalingConfiguration", (properties.ServerlessV2ScalingConfiguration != null ? CfnDBClusterServerlessV2ScalingConfigurationPropertyFromCloudFormation(properties.ServerlessV2ScalingConfiguration) : undefined));
  ret.addPropertyResult("snapshotIdentifier", "SnapshotIdentifier", (properties.SnapshotIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SnapshotIdentifier) : undefined));
  ret.addPropertyResult("sourceDbClusterIdentifier", "SourceDBClusterIdentifier", (properties.SourceDBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SourceDBClusterIdentifier) : undefined));
  ret.addPropertyResult("sourceRegion", "SourceRegion", (properties.SourceRegion != null ? cfn_parse.FromCloudFormation.getString(properties.SourceRegion) : undefined));
  ret.addPropertyResult("storageEncrypted", "StorageEncrypted", (properties.StorageEncrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.StorageEncrypted) : undefined));
  ret.addPropertyResult("storageType", "StorageType", (properties.StorageType != null ? cfn_parse.FromCloudFormation.getString(properties.StorageType) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("useLatestRestorableTime", "UseLatestRestorableTime", (properties.UseLatestRestorableTime != null ? cfn_parse.FromCloudFormation.getBoolean(properties.UseLatestRestorableTime) : undefined));
  ret.addPropertyResult("vpcSecurityGroupIds", "VpcSecurityGroupIds", (properties.VpcSecurityGroupIds != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`ReadEndpointProperty\`
 *
 * @param properties - the TypeScript properties of a \`ReadEndpointProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnDBClusterReadEndpointPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("allocatedStorage", cdk.validateNumber)(properties.allocatedStorage));
  errors.collect(cdk.propertyValidator("associatedRoles", cdk.listValidator(CfnDBClusterDBClusterRolePropertyValidator))(properties.associatedRoles));
  errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade", cdk.validateBoolean)(properties.autoMinorVersionUpgrade));
  errors.collect(cdk.propertyValidator("availabilityZones", cdk.listValidator(cdk.validateString))(properties.availabilityZones));
  errors.collect(cdk.propertyValidator("backtrackWindow", cdk.validateNumber)(properties.backtrackWindow));
  errors.collect(cdk.propertyValidator("backupRetentionPeriod", cdk.validateNumber)(properties.backupRetentionPeriod));
  errors.collect(cdk.propertyValidator("copyTagsToSnapshot", cdk.validateBoolean)(properties.copyTagsToSnapshot));
  errors.collect(cdk.propertyValidator("dbClusterIdentifier", cdk.validateString)(properties.dbClusterIdentifier));
  errors.collect(cdk.propertyValidator("dbClusterInstanceClass", cdk.validateString)(properties.dbClusterInstanceClass));
  errors.collect(cdk.propertyValidator("dbClusterParameterGroupName", cdk.validateString)(properties.dbClusterParameterGroupName));
  errors.collect(cdk.propertyValidator("dbInstanceParameterGroupName", cdk.validateString)(properties.dbInstanceParameterGroupName));
  errors.collect(cdk.propertyValidator("dbSubnetGroupName", cdk.validateString)(properties.dbSubnetGroupName));
  errors.collect(cdk.propertyValidator("dbSystemId", cdk.validateString)(properties.dbSystemId));
  errors.collect(cdk.propertyValidator("databaseName", cdk.validateString)(properties.databaseName));
  errors.collect(cdk.propertyValidator("deletionProtection", cdk.validateBoolean)(properties.deletionProtection));
  errors.collect(cdk.propertyValidator("domain", cdk.validateString)(properties.domain));
  errors.collect(cdk.propertyValidator("domainIamRoleName", cdk.validateString)(properties.domainIamRoleName));
  errors.collect(cdk.propertyValidator("enableCloudwatchLogsExports", cdk.listValidator(cdk.validateString))(properties.enableCloudwatchLogsExports));
  errors.collect(cdk.propertyValidator("enableHttpEndpoint", cdk.validateBoolean)(properties.enableHttpEndpoint));
  errors.collect(cdk.propertyValidator("enableIamDatabaseAuthentication", cdk.validateBoolean)(properties.enableIamDatabaseAuthentication));
  errors.collect(cdk.propertyValidator("engine", cdk.validateString)(properties.engine));
  errors.collect(cdk.propertyValidator("engineMode", cdk.validateString)(properties.engineMode));
  errors.collect(cdk.propertyValidator("engineVersion", cdk.validateString)(properties.engineVersion));
  errors.collect(cdk.propertyValidator("globalClusterIdentifier", cdk.validateString)(properties.globalClusterIdentifier));
  errors.collect(cdk.propertyValidator("iops", cdk.validateNumber)(properties.iops));
  errors.collect(cdk.propertyValidator("kmsKeyId", cdk.validateString)(properties.kmsKeyId));
  errors.collect(cdk.propertyValidator("manageMasterUserPassword", cdk.validateBoolean)(properties.manageMasterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserPassword", cdk.validateString)(properties.masterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserSecret", CfnDBClusterMasterUserSecretPropertyValidator)(properties.masterUserSecret));
  errors.collect(cdk.propertyValidator("masterUsername", cdk.validateString)(properties.masterUsername));
  errors.collect(cdk.propertyValidator("monitoringInterval", cdk.validateNumber)(properties.monitoringInterval));
  errors.collect(cdk.propertyValidator("monitoringRoleArn", cdk.validateString)(properties.monitoringRoleArn));
  errors.collect(cdk.propertyValidator("networkType", cdk.validateString)(properties.networkType));
  errors.collect(cdk.propertyValidator("performanceInsightsEnabled", cdk.validateBoolean)(properties.performanceInsightsEnabled));
  errors.collect(cdk.propertyValidator("performanceInsightsKmsKeyId", cdk.validateString)(properties.performanceInsightsKmsKeyId));
  errors.collect(cdk.propertyValidator("performanceInsightsRetentionPeriod", cdk.validateNumber)(properties.performanceInsightsRetentionPeriod));
  errors.collect(cdk.propertyValidator("port", cdk.validateNumber)(properties.port));
  errors.collect(cdk.propertyValidator("preferredBackupWindow", cdk.validateString)(properties.preferredBackupWindow));
  errors.collect(cdk.propertyValidator("preferredMaintenanceWindow", cdk.validateString)(properties.preferredMaintenanceWindow));
  errors.collect(cdk.propertyValidator("publiclyAccessible", cdk.validateBoolean)(properties.publiclyAccessible));
  errors.collect(cdk.propertyValidator("replicationSourceIdentifier", cdk.validateString)(properties.replicationSourceIdentifier));
  errors.collect(cdk.propertyValidator("restoreToTime", cdk.validateString)(properties.restoreToTime));
  errors.collect(cdk.propertyValidator("restoreType", cdk.validateString)(properties.restoreType));
  errors.collect(cdk.propertyValidator("scalingConfiguration", CfnDBClusterScalingConfigurationPropertyValidator)(properties.scalingConfiguration));
  errors.collect(cdk.propertyValidator("serverlessV2ScalingConfiguration", CfnDBClusterServerlessV2ScalingConfigurationPropertyValidator)(properties.serverlessV2ScalingConfiguration));
  errors.collect(cdk.propertyValidator("snapshotIdentifier", cdk.validateString)(properties.snapshotIdentifier));
  errors.collect(cdk.propertyValidator("sourceDbClusterIdentifier", cdk.validateString)(properties.sourceDbClusterIdentifier));
  errors.collect(cdk.propertyValidator("sourceRegion", cdk.validateString)(properties.sourceRegion));
  errors.collect(cdk.propertyValidator("storageEncrypted", cdk.validateBoolean)(properties.storageEncrypted));
  errors.collect(cdk.propertyValidator("storageType", cdk.validateString)(properties.storageType));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnDBClusterTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("useLatestRestorableTime", cdk.validateBoolean)(properties.useLatestRestorableTime));
  errors.collect(cdk.propertyValidator("vpcSecurityGroupIds", cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds));
  return errors.wrap("supplied properties not correct for \\"ReadEndpointProperty\\"");
}

// @ts-ignore TS6133
function convertCfnDBClusterReadEndpointPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnDBClusterReadEndpointPropertyValidator(properties).assertSuccess();
  return {
    "AllocatedStorage": cdk.numberToCloudFormation(properties.allocatedStorage),
    "AssociatedRoles": cdk.listMapper(convertCfnDBClusterDBClusterRolePropertyToCloudFormation)(properties.associatedRoles),
    "AutoMinorVersionUpgrade": cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),
    "AvailabilityZones": cdk.listMapper(cdk.stringToCloudFormation)(properties.availabilityZones),
    "BacktrackWindow": cdk.numberToCloudFormation(properties.backtrackWindow),
    "BackupRetentionPeriod": cdk.numberToCloudFormation(properties.backupRetentionPeriod),
    "CopyTagsToSnapshot": cdk.booleanToCloudFormation(properties.copyTagsToSnapshot),
    "DBClusterIdentifier": cdk.stringToCloudFormation(properties.dbClusterIdentifier),
    "DBClusterInstanceClass": cdk.stringToCloudFormation(properties.dbClusterInstanceClass),
    "DBClusterParameterGroupName": cdk.stringToCloudFormation(properties.dbClusterParameterGroupName),
    "DBInstanceParameterGroupName": cdk.stringToCloudFormation(properties.dbInstanceParameterGroupName),
    "DBSubnetGroupName": cdk.stringToCloudFormation(properties.dbSubnetGroupName),
    "DBSystemId": cdk.stringToCloudFormation(properties.dbSystemId),
    "DatabaseName": cdk.stringToCloudFormation(properties.databaseName),
    "DeletionProtection": cdk.booleanToCloudFormation(properties.deletionProtection),
    "Domain": cdk.stringToCloudFormation(properties.domain),
    "DomainIAMRoleName": cdk.stringToCloudFormation(properties.domainIamRoleName),
    "EnableCloudwatchLogsExports": cdk.listMapper(cdk.stringToCloudFormation)(properties.enableCloudwatchLogsExports),
    "EnableHttpEndpoint": cdk.booleanToCloudFormation(properties.enableHttpEndpoint),
    "EnableIAMDatabaseAuthentication": cdk.booleanToCloudFormation(properties.enableIamDatabaseAuthentication),
    "Engine": cdk.stringToCloudFormation(properties.engine),
    "EngineMode": cdk.stringToCloudFormation(properties.engineMode),
    "EngineVersion": cdk.stringToCloudFormation(properties.engineVersion),
    "GlobalClusterIdentifier": cdk.stringToCloudFormation(properties.globalClusterIdentifier),
    "Iops": cdk.numberToCloudFormation(properties.iops),
    "KmsKeyId": cdk.stringToCloudFormation(properties.kmsKeyId),
    "ManageMasterUserPassword": cdk.booleanToCloudFormation(properties.manageMasterUserPassword),
    "MasterUserPassword": cdk.stringToCloudFormation(properties.masterUserPassword),
    "MasterUserSecret": convertCfnDBClusterMasterUserSecretPropertyToCloudFormation(properties.masterUserSecret),
    "MasterUsername": cdk.stringToCloudFormation(properties.masterUsername),
    "MonitoringInterval": cdk.numberToCloudFormation(properties.monitoringInterval),
    "MonitoringRoleArn": cdk.stringToCloudFormation(properties.monitoringRoleArn),
    "NetworkType": cdk.stringToCloudFormation(properties.networkType),
    "PerformanceInsightsEnabled": cdk.booleanToCloudFormation(properties.performanceInsightsEnabled),
    "PerformanceInsightsKmsKeyId": cdk.stringToCloudFormation(properties.performanceInsightsKmsKeyId),
    "PerformanceInsightsRetentionPeriod": cdk.numberToCloudFormation(properties.performanceInsightsRetentionPeriod),
    "Port": cdk.numberToCloudFormation(properties.port),
    "PreferredBackupWindow": cdk.stringToCloudFormation(properties.preferredBackupWindow),
    "PreferredMaintenanceWindow": cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),
    "PubliclyAccessible": cdk.booleanToCloudFormation(properties.publiclyAccessible),
    "ReplicationSourceIdentifier": cdk.stringToCloudFormation(properties.replicationSourceIdentifier),
    "RestoreToTime": cdk.stringToCloudFormation(properties.restoreToTime),
    "RestoreType": cdk.stringToCloudFormation(properties.restoreType),
    "ScalingConfiguration": convertCfnDBClusterScalingConfigurationPropertyToCloudFormation(properties.scalingConfiguration),
    "ServerlessV2ScalingConfiguration": convertCfnDBClusterServerlessV2ScalingConfigurationPropertyToCloudFormation(properties.serverlessV2ScalingConfiguration),
    "SnapshotIdentifier": cdk.stringToCloudFormation(properties.snapshotIdentifier),
    "SourceDBClusterIdentifier": cdk.stringToCloudFormation(properties.sourceDbClusterIdentifier),
    "SourceRegion": cdk.stringToCloudFormation(properties.sourceRegion),
    "StorageEncrypted": cdk.booleanToCloudFormation(properties.storageEncrypted),
    "StorageType": cdk.stringToCloudFormation(properties.storageType),
    "Tags": cdk.listMapper(convertCfnDBClusterTagPropertyToCloudFormation)(properties.tags),
    "UseLatestRestorableTime": cdk.booleanToCloudFormation(properties.useLatestRestorableTime),
    "VpcSecurityGroupIds": cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)
  };
}

// @ts-ignore TS6133
function CfnDBClusterReadEndpointPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnDBCluster.ReadEndpointProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBCluster.ReadEndpointProperty>();
  ret.addPropertyResult("allocatedStorage", "AllocatedStorage", (properties.AllocatedStorage != null ? cfn_parse.FromCloudFormation.getNumber(properties.AllocatedStorage) : undefined));
  ret.addPropertyResult("associatedRoles", "AssociatedRoles", (properties.AssociatedRoles != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterDBClusterRolePropertyFromCloudFormation)(properties.AssociatedRoles) : undefined));
  ret.addPropertyResult("autoMinorVersionUpgrade", "AutoMinorVersionUpgrade", (properties.AutoMinorVersionUpgrade != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade) : undefined));
  ret.addPropertyResult("availabilityZones", "AvailabilityZones", (properties.AvailabilityZones != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.AvailabilityZones) : undefined));
  ret.addPropertyResult("backtrackWindow", "BacktrackWindow", (properties.BacktrackWindow != null ? cfn_parse.FromCloudFormation.getNumber(properties.BacktrackWindow) : undefined));
  ret.addPropertyResult("backupRetentionPeriod", "BackupRetentionPeriod", (properties.BackupRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.BackupRetentionPeriod) : undefined));
  ret.addPropertyResult("copyTagsToSnapshot", "CopyTagsToSnapshot", (properties.CopyTagsToSnapshot != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CopyTagsToSnapshot) : undefined));
  ret.addPropertyResult("databaseName", "DatabaseName", (properties.DatabaseName != null ? cfn_parse.FromCloudFormation.getString(properties.DatabaseName) : undefined));
  ret.addPropertyResult("dbClusterIdentifier", "DBClusterIdentifier", (properties.DBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterIdentifier) : undefined));
  ret.addPropertyResult("dbClusterInstanceClass", "DBClusterInstanceClass", (properties.DBClusterInstanceClass != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterInstanceClass) : undefined));
  ret.addPropertyResult("dbClusterParameterGroupName", "DBClusterParameterGroupName", (properties.DBClusterParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterParameterGroupName) : undefined));
  ret.addPropertyResult("dbInstanceParameterGroupName", "DBInstanceParameterGroupName", (properties.DBInstanceParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBInstanceParameterGroupName) : undefined));
  ret.addPropertyResult("dbSubnetGroupName", "DBSubnetGroupName", (properties.DBSubnetGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupName) : undefined));
  ret.addPropertyResult("dbSystemId", "DBSystemId", (properties.DBSystemId != null ? cfn_parse.FromCloudFormation.getString(properties.DBSystemId) : undefined));
  ret.addPropertyResult("deletionProtection", "DeletionProtection", (properties.DeletionProtection != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeletionProtection) : undefined));
  ret.addPropertyResult("domain", "Domain", (properties.Domain != null ? cfn_parse.FromCloudFormation.getString(properties.Domain) : undefined));
  ret.addPropertyResult("domainIamRoleName", "DomainIAMRoleName", (properties.DomainIAMRoleName != null ? cfn_parse.FromCloudFormation.getString(properties.DomainIAMRoleName) : undefined));
  ret.addPropertyResult("enableCloudwatchLogsExports", "EnableCloudwatchLogsExports", (properties.EnableCloudwatchLogsExports != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EnableCloudwatchLogsExports) : undefined));
  ret.addPropertyResult("enableHttpEndpoint", "EnableHttpEndpoint", (properties.EnableHttpEndpoint != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableHttpEndpoint) : undefined));
  ret.addPropertyResult("enableIamDatabaseAuthentication", "EnableIAMDatabaseAuthentication", (properties.EnableIAMDatabaseAuthentication != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableIAMDatabaseAuthentication) : undefined));
  ret.addPropertyResult("engine", "Engine", (properties.Engine != null ? cfn_parse.FromCloudFormation.getString(properties.Engine) : undefined));
  ret.addPropertyResult("engineMode", "EngineMode", (properties.EngineMode != null ? cfn_parse.FromCloudFormation.getString(properties.EngineMode) : undefined));
  ret.addPropertyResult("engineVersion", "EngineVersion", (properties.EngineVersion != null ? cfn_parse.FromCloudFormation.getString(properties.EngineVersion) : undefined));
  ret.addPropertyResult("globalClusterIdentifier", "GlobalClusterIdentifier", (properties.GlobalClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.GlobalClusterIdentifier) : undefined));
  ret.addPropertyResult("iops", "Iops", (properties.Iops != null ? cfn_parse.FromCloudFormation.getNumber(properties.Iops) : undefined));
  ret.addPropertyResult("kmsKeyId", "KmsKeyId", (properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined));
  ret.addPropertyResult("manageMasterUserPassword", "ManageMasterUserPassword", (properties.ManageMasterUserPassword != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ManageMasterUserPassword) : undefined));
  ret.addPropertyResult("masterUsername", "MasterUsername", (properties.MasterUsername != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUsername) : undefined));
  ret.addPropertyResult("masterUserPassword", "MasterUserPassword", (properties.MasterUserPassword != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUserPassword) : undefined));
  ret.addPropertyResult("masterUserSecret", "MasterUserSecret", (properties.MasterUserSecret != null ? CfnDBClusterMasterUserSecretPropertyFromCloudFormation(properties.MasterUserSecret) : undefined));
  ret.addPropertyResult("monitoringInterval", "MonitoringInterval", (properties.MonitoringInterval != null ? cfn_parse.FromCloudFormation.getNumber(properties.MonitoringInterval) : undefined));
  ret.addPropertyResult("monitoringRoleArn", "MonitoringRoleArn", (properties.MonitoringRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.MonitoringRoleArn) : undefined));
  ret.addPropertyResult("networkType", "NetworkType", (properties.NetworkType != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkType) : undefined));
  ret.addPropertyResult("performanceInsightsEnabled", "PerformanceInsightsEnabled", (properties.PerformanceInsightsEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PerformanceInsightsEnabled) : undefined));
  ret.addPropertyResult("performanceInsightsKmsKeyId", "PerformanceInsightsKmsKeyId", (properties.PerformanceInsightsKmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.PerformanceInsightsKmsKeyId) : undefined));
  ret.addPropertyResult("performanceInsightsRetentionPeriod", "PerformanceInsightsRetentionPeriod", (properties.PerformanceInsightsRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.PerformanceInsightsRetentionPeriod) : undefined));
  ret.addPropertyResult("port", "Port", (properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined));
  ret.addPropertyResult("preferredBackupWindow", "PreferredBackupWindow", (properties.PreferredBackupWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredBackupWindow) : undefined));
  ret.addPropertyResult("preferredMaintenanceWindow", "PreferredMaintenanceWindow", (properties.PreferredMaintenanceWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow) : undefined));
  ret.addPropertyResult("publiclyAccessible", "PubliclyAccessible", (properties.PubliclyAccessible != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible) : undefined));
  ret.addPropertyResult("replicationSourceIdentifier", "ReplicationSourceIdentifier", (properties.ReplicationSourceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ReplicationSourceIdentifier) : undefined));
  ret.addPropertyResult("restoreToTime", "RestoreToTime", (properties.RestoreToTime != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreToTime) : undefined));
  ret.addPropertyResult("restoreType", "RestoreType", (properties.RestoreType != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreType) : undefined));
  ret.addPropertyResult("scalingConfiguration", "ScalingConfiguration", (properties.ScalingConfiguration != null ? CfnDBClusterScalingConfigurationPropertyFromCloudFormation(properties.ScalingConfiguration) : undefined));
  ret.addPropertyResult("serverlessV2ScalingConfiguration", "ServerlessV2ScalingConfiguration", (properties.ServerlessV2ScalingConfiguration != null ? CfnDBClusterServerlessV2ScalingConfigurationPropertyFromCloudFormation(properties.ServerlessV2ScalingConfiguration) : undefined));
  ret.addPropertyResult("snapshotIdentifier", "SnapshotIdentifier", (properties.SnapshotIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SnapshotIdentifier) : undefined));
  ret.addPropertyResult("sourceDbClusterIdentifier", "SourceDBClusterIdentifier", (properties.SourceDBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SourceDBClusterIdentifier) : undefined));
  ret.addPropertyResult("sourceRegion", "SourceRegion", (properties.SourceRegion != null ? cfn_parse.FromCloudFormation.getString(properties.SourceRegion) : undefined));
  ret.addPropertyResult("storageEncrypted", "StorageEncrypted", (properties.StorageEncrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.StorageEncrypted) : undefined));
  ret.addPropertyResult("storageType", "StorageType", (properties.StorageType != null ? cfn_parse.FromCloudFormation.getString(properties.StorageType) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("useLatestRestorableTime", "UseLatestRestorableTime", (properties.UseLatestRestorableTime != null ? cfn_parse.FromCloudFormation.getBoolean(properties.UseLatestRestorableTime) : undefined));
  ret.addPropertyResult("vpcSecurityGroupIds", "VpcSecurityGroupIds", (properties.VpcSecurityGroupIds != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`CfnDBClusterProps\`
 *
 * @param properties - the TypeScript properties of a \`CfnDBClusterProps\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnDBClusterPropsValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("allocatedStorage", cdk.validateNumber)(properties.allocatedStorage));
  errors.collect(cdk.propertyValidator("associatedRoles", cdk.listValidator(CfnDBClusterDBClusterRolePropertyValidator))(properties.associatedRoles));
  errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade", cdk.validateBoolean)(properties.autoMinorVersionUpgrade));
  errors.collect(cdk.propertyValidator("availabilityZones", cdk.listValidator(cdk.validateString))(properties.availabilityZones));
  errors.collect(cdk.propertyValidator("backtrackWindow", cdk.validateNumber)(properties.backtrackWindow));
  errors.collect(cdk.propertyValidator("backupRetentionPeriod", cdk.validateNumber)(properties.backupRetentionPeriod));
  errors.collect(cdk.propertyValidator("copyTagsToSnapshot", cdk.validateBoolean)(properties.copyTagsToSnapshot));
  errors.collect(cdk.propertyValidator("dbClusterIdentifier", cdk.validateString)(properties.dbClusterIdentifier));
  errors.collect(cdk.propertyValidator("dbClusterInstanceClass", cdk.validateString)(properties.dbClusterInstanceClass));
  errors.collect(cdk.propertyValidator("dbClusterParameterGroupName", cdk.validateString)(properties.dbClusterParameterGroupName));
  errors.collect(cdk.propertyValidator("dbInstanceParameterGroupName", cdk.validateString)(properties.dbInstanceParameterGroupName));
  errors.collect(cdk.propertyValidator("dbSubnetGroupName", cdk.validateString)(properties.dbSubnetGroupName));
  errors.collect(cdk.propertyValidator("dbSystemId", cdk.validateString)(properties.dbSystemId));
  errors.collect(cdk.propertyValidator("databaseName", cdk.validateString)(properties.databaseName));
  errors.collect(cdk.propertyValidator("deletionProtection", cdk.validateBoolean)(properties.deletionProtection));
  errors.collect(cdk.propertyValidator("domain", cdk.validateString)(properties.domain));
  errors.collect(cdk.propertyValidator("domainIamRoleName", cdk.validateString)(properties.domainIamRoleName));
  errors.collect(cdk.propertyValidator("enableCloudwatchLogsExports", cdk.listValidator(cdk.validateString))(properties.enableCloudwatchLogsExports));
  errors.collect(cdk.propertyValidator("enableHttpEndpoint", cdk.validateBoolean)(properties.enableHttpEndpoint));
  errors.collect(cdk.propertyValidator("enableIamDatabaseAuthentication", cdk.validateBoolean)(properties.enableIamDatabaseAuthentication));
  errors.collect(cdk.propertyValidator("engine", cdk.validateString)(properties.engine));
  errors.collect(cdk.propertyValidator("engineMode", cdk.validateString)(properties.engineMode));
  errors.collect(cdk.propertyValidator("engineVersion", cdk.validateString)(properties.engineVersion));
  errors.collect(cdk.propertyValidator("globalClusterIdentifier", cdk.validateString)(properties.globalClusterIdentifier));
  errors.collect(cdk.propertyValidator("iops", cdk.validateNumber)(properties.iops));
  errors.collect(cdk.propertyValidator("kmsKeyId", cdk.validateString)(properties.kmsKeyId));
  errors.collect(cdk.propertyValidator("manageMasterUserPassword", cdk.validateBoolean)(properties.manageMasterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserPassword", cdk.validateString)(properties.masterUserPassword));
  errors.collect(cdk.propertyValidator("masterUserSecret", CfnDBClusterMasterUserSecretPropertyValidator)(properties.masterUserSecret));
  errors.collect(cdk.propertyValidator("masterUsername", cdk.validateString)(properties.masterUsername));
  errors.collect(cdk.propertyValidator("monitoringInterval", cdk.validateNumber)(properties.monitoringInterval));
  errors.collect(cdk.propertyValidator("monitoringRoleArn", cdk.validateString)(properties.monitoringRoleArn));
  errors.collect(cdk.propertyValidator("networkType", cdk.validateString)(properties.networkType));
  errors.collect(cdk.propertyValidator("performanceInsightsEnabled", cdk.validateBoolean)(properties.performanceInsightsEnabled));
  errors.collect(cdk.propertyValidator("performanceInsightsKmsKeyId", cdk.validateString)(properties.performanceInsightsKmsKeyId));
  errors.collect(cdk.propertyValidator("performanceInsightsRetentionPeriod", cdk.validateNumber)(properties.performanceInsightsRetentionPeriod));
  errors.collect(cdk.propertyValidator("port", cdk.validateNumber)(properties.port));
  errors.collect(cdk.propertyValidator("preferredBackupWindow", cdk.validateString)(properties.preferredBackupWindow));
  errors.collect(cdk.propertyValidator("preferredMaintenanceWindow", cdk.validateString)(properties.preferredMaintenanceWindow));
  errors.collect(cdk.propertyValidator("publiclyAccessible", cdk.validateBoolean)(properties.publiclyAccessible));
  errors.collect(cdk.propertyValidator("replicationSourceIdentifier", cdk.validateString)(properties.replicationSourceIdentifier));
  errors.collect(cdk.propertyValidator("restoreToTime", cdk.validateString)(properties.restoreToTime));
  errors.collect(cdk.propertyValidator("restoreType", cdk.validateString)(properties.restoreType));
  errors.collect(cdk.propertyValidator("scalingConfiguration", CfnDBClusterScalingConfigurationPropertyValidator)(properties.scalingConfiguration));
  errors.collect(cdk.propertyValidator("serverlessV2ScalingConfiguration", CfnDBClusterServerlessV2ScalingConfigurationPropertyValidator)(properties.serverlessV2ScalingConfiguration));
  errors.collect(cdk.propertyValidator("snapshotIdentifier", cdk.validateString)(properties.snapshotIdentifier));
  errors.collect(cdk.propertyValidator("sourceDbClusterIdentifier", cdk.validateString)(properties.sourceDbClusterIdentifier));
  errors.collect(cdk.propertyValidator("sourceRegion", cdk.validateString)(properties.sourceRegion));
  errors.collect(cdk.propertyValidator("storageEncrypted", cdk.validateBoolean)(properties.storageEncrypted));
  errors.collect(cdk.propertyValidator("storageType", cdk.validateString)(properties.storageType));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(cdk.validateCfnTag))(properties.tags));
  errors.collect(cdk.propertyValidator("useLatestRestorableTime", cdk.validateBoolean)(properties.useLatestRestorableTime));
  errors.collect(cdk.propertyValidator("vpcSecurityGroupIds", cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds));
  return errors.wrap("supplied properties not correct for \\"CfnDBClusterProps\\"");
}

// @ts-ignore TS6133
function convertCfnDBClusterPropsToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnDBClusterPropsValidator(properties).assertSuccess();
  return {
    "AllocatedStorage": cdk.numberToCloudFormation(properties.allocatedStorage),
    "AssociatedRoles": cdk.listMapper(convertCfnDBClusterDBClusterRolePropertyToCloudFormation)(properties.associatedRoles),
    "AutoMinorVersionUpgrade": cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),
    "AvailabilityZones": cdk.listMapper(cdk.stringToCloudFormation)(properties.availabilityZones),
    "BacktrackWindow": cdk.numberToCloudFormation(properties.backtrackWindow),
    "BackupRetentionPeriod": cdk.numberToCloudFormation(properties.backupRetentionPeriod),
    "CopyTagsToSnapshot": cdk.booleanToCloudFormation(properties.copyTagsToSnapshot),
    "DBClusterIdentifier": cdk.stringToCloudFormation(properties.dbClusterIdentifier),
    "DBClusterInstanceClass": cdk.stringToCloudFormation(properties.dbClusterInstanceClass),
    "DBClusterParameterGroupName": cdk.stringToCloudFormation(properties.dbClusterParameterGroupName),
    "DBInstanceParameterGroupName": cdk.stringToCloudFormation(properties.dbInstanceParameterGroupName),
    "DBSubnetGroupName": cdk.stringToCloudFormation(properties.dbSubnetGroupName),
    "DBSystemId": cdk.stringToCloudFormation(properties.dbSystemId),
    "DatabaseName": cdk.stringToCloudFormation(properties.databaseName),
    "DeletionProtection": cdk.booleanToCloudFormation(properties.deletionProtection),
    "Domain": cdk.stringToCloudFormation(properties.domain),
    "DomainIAMRoleName": cdk.stringToCloudFormation(properties.domainIamRoleName),
    "EnableCloudwatchLogsExports": cdk.listMapper(cdk.stringToCloudFormation)(properties.enableCloudwatchLogsExports),
    "EnableHttpEndpoint": cdk.booleanToCloudFormation(properties.enableHttpEndpoint),
    "EnableIAMDatabaseAuthentication": cdk.booleanToCloudFormation(properties.enableIamDatabaseAuthentication),
    "Engine": cdk.stringToCloudFormation(properties.engine),
    "EngineMode": cdk.stringToCloudFormation(properties.engineMode),
    "EngineVersion": cdk.stringToCloudFormation(properties.engineVersion),
    "GlobalClusterIdentifier": cdk.stringToCloudFormation(properties.globalClusterIdentifier),
    "Iops": cdk.numberToCloudFormation(properties.iops),
    "KmsKeyId": cdk.stringToCloudFormation(properties.kmsKeyId),
    "ManageMasterUserPassword": cdk.booleanToCloudFormation(properties.manageMasterUserPassword),
    "MasterUserPassword": cdk.stringToCloudFormation(properties.masterUserPassword),
    "MasterUserSecret": convertCfnDBClusterMasterUserSecretPropertyToCloudFormation(properties.masterUserSecret),
    "MasterUsername": cdk.stringToCloudFormation(properties.masterUsername),
    "MonitoringInterval": cdk.numberToCloudFormation(properties.monitoringInterval),
    "MonitoringRoleArn": cdk.stringToCloudFormation(properties.monitoringRoleArn),
    "NetworkType": cdk.stringToCloudFormation(properties.networkType),
    "PerformanceInsightsEnabled": cdk.booleanToCloudFormation(properties.performanceInsightsEnabled),
    "PerformanceInsightsKmsKeyId": cdk.stringToCloudFormation(properties.performanceInsightsKmsKeyId),
    "PerformanceInsightsRetentionPeriod": cdk.numberToCloudFormation(properties.performanceInsightsRetentionPeriod),
    "Port": cdk.numberToCloudFormation(properties.port),
    "PreferredBackupWindow": cdk.stringToCloudFormation(properties.preferredBackupWindow),
    "PreferredMaintenanceWindow": cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),
    "PubliclyAccessible": cdk.booleanToCloudFormation(properties.publiclyAccessible),
    "ReplicationSourceIdentifier": cdk.stringToCloudFormation(properties.replicationSourceIdentifier),
    "RestoreToTime": cdk.stringToCloudFormation(properties.restoreToTime),
    "RestoreType": cdk.stringToCloudFormation(properties.restoreType),
    "ScalingConfiguration": convertCfnDBClusterScalingConfigurationPropertyToCloudFormation(properties.scalingConfiguration),
    "ServerlessV2ScalingConfiguration": convertCfnDBClusterServerlessV2ScalingConfigurationPropertyToCloudFormation(properties.serverlessV2ScalingConfiguration),
    "SnapshotIdentifier": cdk.stringToCloudFormation(properties.snapshotIdentifier),
    "SourceDBClusterIdentifier": cdk.stringToCloudFormation(properties.sourceDbClusterIdentifier),
    "SourceRegion": cdk.stringToCloudFormation(properties.sourceRegion),
    "StorageEncrypted": cdk.booleanToCloudFormation(properties.storageEncrypted),
    "StorageType": cdk.stringToCloudFormation(properties.storageType),
    "Tags": cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),
    "UseLatestRestorableTime": cdk.booleanToCloudFormation(properties.useLatestRestorableTime),
    "VpcSecurityGroupIds": cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)
  };
}

// @ts-ignore TS6133
function CfnDBClusterPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBClusterProps | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBClusterProps>();
  ret.addPropertyResult("allocatedStorage", "AllocatedStorage", (properties.AllocatedStorage != null ? cfn_parse.FromCloudFormation.getNumber(properties.AllocatedStorage) : undefined));
  ret.addPropertyResult("associatedRoles", "AssociatedRoles", (properties.AssociatedRoles != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterDBClusterRolePropertyFromCloudFormation)(properties.AssociatedRoles) : undefined));
  ret.addPropertyResult("autoMinorVersionUpgrade", "AutoMinorVersionUpgrade", (properties.AutoMinorVersionUpgrade != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade) : undefined));
  ret.addPropertyResult("availabilityZones", "AvailabilityZones", (properties.AvailabilityZones != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.AvailabilityZones) : undefined));
  ret.addPropertyResult("backtrackWindow", "BacktrackWindow", (properties.BacktrackWindow != null ? cfn_parse.FromCloudFormation.getNumber(properties.BacktrackWindow) : undefined));
  ret.addPropertyResult("backupRetentionPeriod", "BackupRetentionPeriod", (properties.BackupRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.BackupRetentionPeriod) : undefined));
  ret.addPropertyResult("copyTagsToSnapshot", "CopyTagsToSnapshot", (properties.CopyTagsToSnapshot != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CopyTagsToSnapshot) : undefined));
  ret.addPropertyResult("databaseName", "DatabaseName", (properties.DatabaseName != null ? cfn_parse.FromCloudFormation.getString(properties.DatabaseName) : undefined));
  ret.addPropertyResult("dbClusterIdentifier", "DBClusterIdentifier", (properties.DBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterIdentifier) : undefined));
  ret.addPropertyResult("dbClusterInstanceClass", "DBClusterInstanceClass", (properties.DBClusterInstanceClass != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterInstanceClass) : undefined));
  ret.addPropertyResult("dbClusterParameterGroupName", "DBClusterParameterGroupName", (properties.DBClusterParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterParameterGroupName) : undefined));
  ret.addPropertyResult("dbInstanceParameterGroupName", "DBInstanceParameterGroupName", (properties.DBInstanceParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBInstanceParameterGroupName) : undefined));
  ret.addPropertyResult("dbSubnetGroupName", "DBSubnetGroupName", (properties.DBSubnetGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupName) : undefined));
  ret.addPropertyResult("dbSystemId", "DBSystemId", (properties.DBSystemId != null ? cfn_parse.FromCloudFormation.getString(properties.DBSystemId) : undefined));
  ret.addPropertyResult("deletionProtection", "DeletionProtection", (properties.DeletionProtection != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeletionProtection) : undefined));
  ret.addPropertyResult("domain", "Domain", (properties.Domain != null ? cfn_parse.FromCloudFormation.getString(properties.Domain) : undefined));
  ret.addPropertyResult("domainIamRoleName", "DomainIAMRoleName", (properties.DomainIAMRoleName != null ? cfn_parse.FromCloudFormation.getString(properties.DomainIAMRoleName) : undefined));
  ret.addPropertyResult("enableCloudwatchLogsExports", "EnableCloudwatchLogsExports", (properties.EnableCloudwatchLogsExports != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EnableCloudwatchLogsExports) : undefined));
  ret.addPropertyResult("enableHttpEndpoint", "EnableHttpEndpoint", (properties.EnableHttpEndpoint != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableHttpEndpoint) : undefined));
  ret.addPropertyResult("enableIamDatabaseAuthentication", "EnableIAMDatabaseAuthentication", (properties.EnableIAMDatabaseAuthentication != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableIAMDatabaseAuthentication) : undefined));
  ret.addPropertyResult("engine", "Engine", (properties.Engine != null ? cfn_parse.FromCloudFormation.getString(properties.Engine) : undefined));
  ret.addPropertyResult("engineMode", "EngineMode", (properties.EngineMode != null ? cfn_parse.FromCloudFormation.getString(properties.EngineMode) : undefined));
  ret.addPropertyResult("engineVersion", "EngineVersion", (properties.EngineVersion != null ? cfn_parse.FromCloudFormation.getString(properties.EngineVersion) : undefined));
  ret.addPropertyResult("globalClusterIdentifier", "GlobalClusterIdentifier", (properties.GlobalClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.GlobalClusterIdentifier) : undefined));
  ret.addPropertyResult("iops", "Iops", (properties.Iops != null ? cfn_parse.FromCloudFormation.getNumber(properties.Iops) : undefined));
  ret.addPropertyResult("kmsKeyId", "KmsKeyId", (properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined));
  ret.addPropertyResult("manageMasterUserPassword", "ManageMasterUserPassword", (properties.ManageMasterUserPassword != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ManageMasterUserPassword) : undefined));
  ret.addPropertyResult("masterUsername", "MasterUsername", (properties.MasterUsername != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUsername) : undefined));
  ret.addPropertyResult("masterUserPassword", "MasterUserPassword", (properties.MasterUserPassword != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUserPassword) : undefined));
  ret.addPropertyResult("masterUserSecret", "MasterUserSecret", (properties.MasterUserSecret != null ? CfnDBClusterMasterUserSecretPropertyFromCloudFormation(properties.MasterUserSecret) : undefined));
  ret.addPropertyResult("monitoringInterval", "MonitoringInterval", (properties.MonitoringInterval != null ? cfn_parse.FromCloudFormation.getNumber(properties.MonitoringInterval) : undefined));
  ret.addPropertyResult("monitoringRoleArn", "MonitoringRoleArn", (properties.MonitoringRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.MonitoringRoleArn) : undefined));
  ret.addPropertyResult("networkType", "NetworkType", (properties.NetworkType != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkType) : undefined));
  ret.addPropertyResult("performanceInsightsEnabled", "PerformanceInsightsEnabled", (properties.PerformanceInsightsEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PerformanceInsightsEnabled) : undefined));
  ret.addPropertyResult("performanceInsightsKmsKeyId", "PerformanceInsightsKmsKeyId", (properties.PerformanceInsightsKmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.PerformanceInsightsKmsKeyId) : undefined));
  ret.addPropertyResult("performanceInsightsRetentionPeriod", "PerformanceInsightsRetentionPeriod", (properties.PerformanceInsightsRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.PerformanceInsightsRetentionPeriod) : undefined));
  ret.addPropertyResult("port", "Port", (properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined));
  ret.addPropertyResult("preferredBackupWindow", "PreferredBackupWindow", (properties.PreferredBackupWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredBackupWindow) : undefined));
  ret.addPropertyResult("preferredMaintenanceWindow", "PreferredMaintenanceWindow", (properties.PreferredMaintenanceWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow) : undefined));
  ret.addPropertyResult("publiclyAccessible", "PubliclyAccessible", (properties.PubliclyAccessible != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible) : undefined));
  ret.addPropertyResult("replicationSourceIdentifier", "ReplicationSourceIdentifier", (properties.ReplicationSourceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ReplicationSourceIdentifier) : undefined));
  ret.addPropertyResult("restoreToTime", "RestoreToTime", (properties.RestoreToTime != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreToTime) : undefined));
  ret.addPropertyResult("restoreType", "RestoreType", (properties.RestoreType != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreType) : undefined));
  ret.addPropertyResult("scalingConfiguration", "ScalingConfiguration", (properties.ScalingConfiguration != null ? CfnDBClusterScalingConfigurationPropertyFromCloudFormation(properties.ScalingConfiguration) : undefined));
  ret.addPropertyResult("serverlessV2ScalingConfiguration", "ServerlessV2ScalingConfiguration", (properties.ServerlessV2ScalingConfiguration != null ? CfnDBClusterServerlessV2ScalingConfigurationPropertyFromCloudFormation(properties.ServerlessV2ScalingConfiguration) : undefined));
  ret.addPropertyResult("snapshotIdentifier", "SnapshotIdentifier", (properties.SnapshotIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SnapshotIdentifier) : undefined));
  ret.addPropertyResult("sourceDbClusterIdentifier", "SourceDBClusterIdentifier", (properties.SourceDBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SourceDBClusterIdentifier) : undefined));
  ret.addPropertyResult("sourceRegion", "SourceRegion", (properties.SourceRegion != null ? cfn_parse.FromCloudFormation.getString(properties.SourceRegion) : undefined));
  ret.addPropertyResult("storageEncrypted", "StorageEncrypted", (properties.StorageEncrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.StorageEncrypted) : undefined));
  ret.addPropertyResult("storageType", "StorageType", (properties.StorageType != null ? cfn_parse.FromCloudFormation.getString(properties.StorageType) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined));
  ret.addPropertyResult("useLatestRestorableTime", "UseLatestRestorableTime", (properties.UseLatestRestorableTime != null ? cfn_parse.FromCloudFormation.getBoolean(properties.UseLatestRestorableTime) : undefined));
  ret.addPropertyResult("vpcSecurityGroupIds", "VpcSecurityGroupIds", (properties.VpcSecurityGroupIds != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}",
}
`;

exports[`AWS::S3::Bucket 1`] = `
{
  "augmentations": undefined,
  "metrics": "/* eslint-disable prettier/prettier,max-len */
export interface MetricWithDims<D> {
  readonly namespace: string;

  readonly metricName: string;

  readonly statistic: string;

  readonly dimensionsMap: D;
}

export class S3Metrics {
  public static bucketSizeBytesAverage(dimensions: { BucketName: string; StorageType: string; }): MetricWithDims<{ BucketName: string; StorageType: string; }> {
    return {
      "namespace": "AWS/S3",
      "metricName": "BucketSizeBytes",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static numberOfObjectsAverage(dimensions: { BucketName: string; StorageType: string; }): MetricWithDims<{ BucketName: string; StorageType: string; }> {
    return {
      "namespace": "AWS/S3",
      "metricName": "NumberOfObjects",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }
}",
  "module": "/* eslint-disable prettier/prettier,max-len */
import * as cdk from "aws-cdk-lib";
import * as constructs from "constructs";
import * as cfn_parse from "aws-cdk-lib/core/lib/helpers-internal";

/**
 * The \`AWS::S3::Bucket\` resource creates an Amazon S3 bucket in the same AWS Region where you create the AWS CloudFormation stack.
 *
 * To control how AWS CloudFormation handles the bucket when the stack is deleted, you can set a deletion policy for your bucket. You can choose to *retain* the bucket or to *delete* the bucket. For more information, see [DeletionPolicy Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html) .
 *
 * > You can only delete empty buckets. Deletion fails for buckets that have contents.
 *
 * @stability external
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html
 */
export class CfnBucket extends cdk.CfnResource implements cdk.IInspectable, cdk.ITaggable {
  /**
   * The CloudFormation resource type name for this resource class.
   */
  public static readonly CFN_RESOURCE_TYPE_NAME: string = "AWS::S3::Bucket";

  /**
   * Build a CfnBucket from CloudFormation properties
   *
   * A factory method that creates a new instance of this class from an object
   * containing the CloudFormation properties of this resource.
   * Used in the @aws-cdk/cloudformation-include module.
   *
   * @internal
   */
  public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnBucket {
    resourceAttributes = resourceAttributes || {};
    const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);
    const propsResult = CfnBucketPropsFromCloudFormation(resourceProperties);
    if (cdk.isResolvableObject(propsResult.value)) {
      throw new Error("Unexpected IResolvable");
    }
    const ret = new CfnBucket(scope, id, propsResult.value);
    for (const [propKey, propVal] of Object.entries(propsResult.extraProperties)) {
      ret.addPropertyOverride(propKey, propVal);
    }
    options.parser.handleAttributes(ret, resourceAttributes, id);
    return ret;
  }

  /**
   * Returns the Amazon Resource Name (ARN) of the specified bucket.
   *
   * Example: \`arn:aws:s3:::DOC-EXAMPLE-BUCKET\`
   *
   * @cloudformationAttribute Arn
   */
  public readonly attrArn: string;

  /**
   * Returns the IPv4 DNS name of the specified bucket.
   *
   * Example: \`DOC-EXAMPLE-BUCKET.s3.amazonaws.com\`
   *
   * @cloudformationAttribute DomainName
   */
  public readonly attrDomainName: string;

  /**
   * Returns the IPv6 DNS name of the specified bucket.
   *
   * Example: \`DOC-EXAMPLE-BUCKET.s3.dualstack.us-east-2.amazonaws.com\`
   *
   * For more information about dual-stack endpoints, see [Using Amazon S3 Dual-Stack Endpoints](https://docs.aws.amazon.com/AmazonS3/latest/dev/dual-stack-endpoints.html) .
   *
   * @cloudformationAttribute DualStackDomainName
   */
  public readonly attrDualStackDomainName: string;

  /**
   * Returns the regional domain name of the specified bucket.
   *
   * Example: \`DOC-EXAMPLE-BUCKET.s3.us-east-2.amazonaws.com\`
   *
   * @cloudformationAttribute RegionalDomainName
   */
  public readonly attrRegionalDomainName: string;

  /**
   * Returns the Amazon S3 website endpoint for the specified bucket.
   *
   * Example (IPv4): \`http://DOC-EXAMPLE-BUCKET.s3-website.us-east-2.amazonaws.com\`
   *
   * Example (IPv6): \`http://DOC-EXAMPLE-BUCKET.s3.dualstack.us-east-2.amazonaws.com\`
   *
   * @cloudformationAttribute WebsiteURL
   */
  public readonly attrWebsiteUrl: string;

  /**
   * Configures the transfer acceleration state for an Amazon S3 bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-accelerateconfiguration
   */
  public accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

  /**
   * A canned access control list (ACL) that grants predefined permissions to the bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-accesscontrol
   */
  public accessControl?: string;

  /**
   * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-analyticsconfigurations
   */
  public analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

  /**
   * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-bucketencryption
   */
  public bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

  /**
   * A name for the bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-bucketname
   */
  public bucketName?: string;

  /**
   * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-corsconfiguration
   */
  public corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

  /**
   * Defines how Amazon S3 handles Intelligent-Tiering storage.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-intelligenttieringconfigurations
   */
  public intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

  /**
   * Specifies the inventory configuration for an Amazon S3 bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-inventoryconfigurations
   */
  public inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

  /**
   * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-lifecycleconfiguration
   */
  public lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

  /**
   * Settings that define where logs are stored.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-loggingconfiguration
   */
  public loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

  /**
   * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-metricsconfigurations
   */
  public metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

  /**
   * Configuration that defines how Amazon S3 handles bucket notifications.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-notificationconfiguration
   */
  public notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

  /**
   * Places an Object Lock configuration on the specified bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-objectlockconfiguration
   */
  public objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

  /**
   * Indicates whether this bucket has an Object Lock configuration enabled.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-objectlockenabled
   */
  public objectLockEnabled?: boolean | cdk.IResolvable;

  /**
   * Configuration that defines how Amazon S3 handles Object Ownership rules.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-ownershipcontrols
   */
  public ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

  /**
   * Configuration that defines how Amazon S3 handles public access.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-publicaccessblockconfiguration
   */
  public publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

  /**
   * Configuration for replicating objects in an S3 bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-replicationconfiguration
   */
  public replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

  /**
   * Tag Manager which manages the tags for this resource
   */
  public readonly tags: cdk.TagManager;

  /**
   * An arbitrary set of tags (key-value pairs) for this S3 bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-tags
   */
  public tagsRaw?: Array<cdk.CfnTag>;

  /**
   * Enables multiple versions of all objects in this bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-versioningconfiguration
   */
  public versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

  /**
   * Information used to configure the bucket as a static website.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-websiteconfiguration
   */
  public websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;

  /**
   * @param scope Scope in which this resource is defined
   * @param id Construct identifier for this resource (unique in its scope)
   * @param props Resource properties
   */
  public constructor(scope: constructs.Construct, id: string, props: CfnBucketProps = {}) {
    super(scope, id, {
      "type": CfnBucket.CFN_RESOURCE_TYPE_NAME,
      "properties": props
    });

    this.attrArn = cdk.Token.asString(this.getAtt("Arn", cdk.ResolutionTypeHint.STRING));
    this.attrDomainName = cdk.Token.asString(this.getAtt("DomainName", cdk.ResolutionTypeHint.STRING));
    this.attrDualStackDomainName = cdk.Token.asString(this.getAtt("DualStackDomainName", cdk.ResolutionTypeHint.STRING));
    this.attrRegionalDomainName = cdk.Token.asString(this.getAtt("RegionalDomainName", cdk.ResolutionTypeHint.STRING));
    this.attrWebsiteUrl = cdk.Token.asString(this.getAtt("WebsiteURL", cdk.ResolutionTypeHint.STRING));
    this.accelerateConfiguration = props.accelerateConfiguration;
    this.accessControl = props.accessControl;
    this.analyticsConfigurations = props.analyticsConfigurations;
    this.bucketEncryption = props.bucketEncryption;
    this.bucketName = props.bucketName;
    this.corsConfiguration = props.corsConfiguration;
    this.intelligentTieringConfigurations = props.intelligentTieringConfigurations;
    this.inventoryConfigurations = props.inventoryConfigurations;
    this.lifecycleConfiguration = props.lifecycleConfiguration;
    this.loggingConfiguration = props.loggingConfiguration;
    this.metricsConfigurations = props.metricsConfigurations;
    this.notificationConfiguration = props.notificationConfiguration;
    this.objectLockConfiguration = props.objectLockConfiguration;
    this.objectLockEnabled = props.objectLockEnabled;
    this.ownershipControls = props.ownershipControls;
    this.publicAccessBlockConfiguration = props.publicAccessBlockConfiguration;
    this.replicationConfiguration = props.replicationConfiguration;
    this.tags = new cdk.TagManager(cdk.TagType.STANDARD, "AWS::S3::Bucket", props.tags, {
      "tagPropertyName": "tags"
    });
    this.tagsRaw = props.tags;
    this.versioningConfiguration = props.versioningConfiguration;
    this.websiteConfiguration = props.websiteConfiguration;
    if ((this.node.scope != null && cdk.Resource.isResource(this.node.scope))) {
      this.node.addValidation({
        "validate": () => ((this.cfnOptions.deletionPolicy === undefined) ? ["'AWS::S3::Bucket' is a stateful resource type, and you must specify a Removal Policy for it. Call 'resource.applyRemovalPolicy()'."] : [])
      });
    }
  }

  protected get cfnProperties(): Record<string, any> {
    return {
      "accelerateConfiguration": this.accelerateConfiguration,
      "accessControl": this.accessControl,
      "analyticsConfigurations": this.analyticsConfigurations,
      "bucketEncryption": this.bucketEncryption,
      "bucketName": this.bucketName,
      "corsConfiguration": this.corsConfiguration,
      "intelligentTieringConfigurations": this.intelligentTieringConfigurations,
      "inventoryConfigurations": this.inventoryConfigurations,
      "lifecycleConfiguration": this.lifecycleConfiguration,
      "loggingConfiguration": this.loggingConfiguration,
      "metricsConfigurations": this.metricsConfigurations,
      "notificationConfiguration": this.notificationConfiguration,
      "objectLockConfiguration": this.objectLockConfiguration,
      "objectLockEnabled": this.objectLockEnabled,
      "ownershipControls": this.ownershipControls,
      "publicAccessBlockConfiguration": this.publicAccessBlockConfiguration,
      "replicationConfiguration": this.replicationConfiguration,
      "tags": this.tags.renderTags(),
      "versioningConfiguration": this.versioningConfiguration,
      "websiteConfiguration": this.websiteConfiguration
    };
  }

  /**
   * Examines the CloudFormation resource and discloses attributes
   *
   * @param inspector tree inspector to collect and process attributes
   */
  public inspect(inspector: cdk.TreeInspector): void {
    inspector.addAttribute("aws:cdk:cloudformation:type", CfnBucket.CFN_RESOURCE_TYPE_NAME);
    inspector.addAttribute("aws:cdk:cloudformation:props", this.cfnProperties);
  }

  protected renderProperties(props: Record<string, any>): Record<string, any> {
    return convertCfnBucketPropsToCloudFormation(props);
  }
}

export namespace CfnBucket {
  /**
   * Configures the transfer acceleration state for an Amazon S3 bucket.
   *
   * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html
   */
  export interface AccelerateConfigurationProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html
   */
  export interface AnalyticsConfigurationProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
   *
   * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html
   */
  export interface BucketEncryptionProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
   *
   * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html
   */
  export interface CorsConfigurationProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.
   *
   * For information about the S3 Intelligent-Tiering storage class, see [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access) .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html
   */
  export interface IntelligentTieringConfigurationProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * Specifies the inventory configuration for an Amazon S3 bucket.
   *
   * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html
   */
  export interface InventoryConfigurationProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
   *
   * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html
   */
  export interface LifecycleConfigurationProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfiguration.html#cfn-s3-bucket-lifecycleconfiguration-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys for a bucket.
   *
   * For examples and more information, see [PUT Bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html) in the *Amazon S3 API Reference* .
   *
   * > To successfully complete the \`AWS::S3::Bucket LoggingConfiguration\` request, you must have \`s3:PutObject\` and \`s3:PutObjectAcl\` in your IAM permissions.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html
   */
  export interface LoggingConfigurationProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfiguration.html#cfn-s3-bucket-loggingconfiguration-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
   *
   * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For examples, see [AWS::S3::Bucket](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#aws-properties-s3-bucket--examples) . For more information, see [PUT Bucket metrics](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) in the *Amazon S3 API Reference* .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html
   */
  export interface MetricsConfigurationProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * Describes the notification configuration for an Amazon S3 bucket.
   *
   * > If you create the target resource and related permissions in the same template, you might have a circular dependency.
   * >
   * > For example, you might use the \`AWS::Lambda::Permission\` resource to grant the bucket permission to invoke an AWS Lambda function. However, AWS CloudFormation can't create the bucket until the bucket has permission to invoke the function ( AWS CloudFormation checks whether the bucket can invoke the function). If you're using Refs to pass the bucket name, this leads to a circular dependency.
   * >
   * > To avoid this dependency, you can create all resources without specifying the notification configuration. Then, update the stack with a notification configuration.
   * >
   * > For more information on permissions, see [AWS::Lambda::Permission](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html) and [Granting Permissions to Publish Event Notification Messages to a Destination](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#grant-destinations-permissions-to-s3) .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html
   */
  export interface NotificationConfigurationProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * Places an Object Lock configuration on the specified bucket.
   *
   * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html
   */
  export interface ObjectLockConfigurationProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * Specifies the container element for Object Ownership rules.
   *
   * S3 Object Ownership is an Amazon S3 bucket-level setting that you can use to disable access control lists (ACLs) and take ownership of every object in your bucket, simplifying access management for data stored in Amazon S3. For more information, see [Controlling ownership of objects and disabling ACLs](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide* .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html
   */
  export interface OwnershipControlsProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * The PublicAccessBlock configuration that you want to apply to this Amazon S3 bucket.
   *
   * You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see [The Meaning of "Public"](https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status) in the *Amazon S3 User Guide* .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html
   */
  export interface PublicAccessBlockConfigurationProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * A container for replication rules.
   *
   * You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html
   */
  export interface ReplicationConfigurationProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html
   */
  export interface TagProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tag.html#cfn-s3-bucket-tag-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * Describes the versioning state of an Amazon S3 bucket.
   *
   * For more information, see [PUT Bucket versioning](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html) in the *Amazon S3 API Reference* .
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html
   */
  export interface VersioningConfigurationProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfiguration.html#cfn-s3-bucket-versioningconfiguration-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }

  /**
   * Specifies website configuration parameters for an Amazon S3 bucket.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html
   */
  export interface WebsiteConfigurationProperty {
    /**
     * Configures the transfer acceleration state for an Amazon S3 bucket.
     *
     * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-accelerateconfiguration
     */
    readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     *
     * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
     *
     * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-accesscontrol
     */
    readonly accessControl?: string;

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-analyticsconfigurations
     */
    readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
     *
     * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-bucketencryption
     */
    readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

    /**
     * A name for the bucket.
     *
     * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-bucketname
     */
    readonly bucketName?: string;

    /**
     * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-corsconfiguration
     */
    readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

    /**
     * Defines how Amazon S3 handles Intelligent-Tiering storage.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-intelligenttieringconfigurations
     */
    readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the inventory configuration for an Amazon S3 bucket.
     *
     * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-inventoryconfigurations
     */
    readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

    /**
     * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
     *
     * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-lifecycleconfiguration
     */
    readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

    /**
     * Settings that define where logs are stored.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-loggingconfiguration
     */
    readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

    /**
     * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
     *
     * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-metricsconfigurations
     */
    readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-notificationconfiguration
     */
    readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

    /**
     * Places an Object Lock configuration on the specified bucket.
     *
     * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
     *
     * > - The \`DefaultRetention\` settings require both a mode and a period.
     * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
     * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-objectlockconfiguration
     */
    readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     *
     * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-objectlockenabled
     */
    readonly objectLockEnabled?: boolean | cdk.IResolvable;

    /**
     * Configuration that defines how Amazon S3 handles Object Ownership rules.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-ownershipcontrols
     */
    readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

    /**
     * Configuration that defines how Amazon S3 handles public access.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-publicaccessblockconfiguration
     */
    readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

    /**
     * Configuration for replicating objects in an S3 bucket.
     *
     * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
     *
     * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-replicationconfiguration
     */
    readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnBucket.TagProperty> | cdk.IResolvable;

    /**
     * Enables multiple versions of all objects in this bucket.
     *
     * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-versioningconfiguration
     */
    readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

    /**
     * Information used to configure the bucket as a static website.
     *
     * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-websiteconfiguration.html#cfn-s3-bucket-websiteconfiguration-websiteconfiguration
     */
    readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
  }
}

/**
 * Properties for defining a \`CfnBucket\`
 *
 * @struct
 * @stability external
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html
 */
export interface CfnBucketProps {
  /**
   * Configures the transfer acceleration state for an Amazon S3 bucket.
   *
   * For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-accelerateconfiguration
   */
  readonly accelerateConfiguration?: CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable;

  /**
   * A canned access control list (ACL) that grants predefined permissions to the bucket.
   *
   * For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
   *
   * Be aware that the syntax for this property differs from the information provided in the *Amazon S3 User Guide* . The AccessControl property is case-sensitive and must be one of the following values: Private, PublicRead, PublicReadWrite, AuthenticatedRead, LogDeliveryWrite, BucketOwnerRead, BucketOwnerFullControl, or AwsExecRead.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-accesscontrol
   */
  readonly accessControl?: string;

  /**
   * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-analyticsconfigurations
   */
  readonly analyticsConfigurations?: Array<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

  /**
   * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket.
   *
   * For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-bucketencryption
   */
  readonly bucketEncryption?: CfnBucket.BucketEncryptionProperty | cdk.IResolvable;

  /**
   * A name for the bucket.
   *
   * If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) . For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide* .
   *
   * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-bucketname
   */
  readonly bucketName?: string;

  /**
   * Describes the cross-origin access configuration for objects in an Amazon S3 bucket.
   *
   * For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-corsconfiguration
   */
  readonly corsConfiguration?: CfnBucket.CorsConfigurationProperty | cdk.IResolvable;

  /**
   * Defines how Amazon S3 handles Intelligent-Tiering storage.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-intelligenttieringconfigurations
   */
  readonly intelligentTieringConfigurations?: Array<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

  /**
   * Specifies the inventory configuration for an Amazon S3 bucket.
   *
   * For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-inventoryconfigurations
   */
  readonly inventoryConfigurations?: Array<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;

  /**
   * Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
   *
   * For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-lifecycleconfiguration
   */
  readonly lifecycleConfiguration?: cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty;

  /**
   * Settings that define where logs are stored.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-loggingconfiguration
   */
  readonly loggingConfiguration?: cdk.IResolvable | CfnBucket.LoggingConfigurationProperty;

  /**
   * Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket.
   *
   * If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-metricsconfigurations
   */
  readonly metricsConfigurations?: Array<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> | cdk.IResolvable;

  /**
   * Configuration that defines how Amazon S3 handles bucket notifications.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-notificationconfiguration
   */
  readonly notificationConfiguration?: cdk.IResolvable | CfnBucket.NotificationConfigurationProperty;

  /**
   * Places an Object Lock configuration on the specified bucket.
   *
   * The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) .
   *
   * > - The \`DefaultRetention\` settings require both a mode and a period.
   * > - The \`DefaultRetention\` period can be either \`Days\` or \`Years\` but you must select one. You cannot specify \`Days\` and \`Years\` at the same time.
   * > - You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact AWS Support.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-objectlockconfiguration
   */
  readonly objectLockConfiguration?: cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty;

  /**
   * Indicates whether this bucket has an Object Lock configuration enabled.
   *
   * Enable \`ObjectLockEnabled\` when you apply \`ObjectLockConfiguration\` to a bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-objectlockenabled
   */
  readonly objectLockEnabled?: boolean | cdk.IResolvable;

  /**
   * Configuration that defines how Amazon S3 handles Object Ownership rules.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-ownershipcontrols
   */
  readonly ownershipControls?: cdk.IResolvable | CfnBucket.OwnershipControlsProperty;

  /**
   * Configuration that defines how Amazon S3 handles public access.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-publicaccessblockconfiguration
   */
  readonly publicAccessBlockConfiguration?: cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty;

  /**
   * Configuration for replicating objects in an S3 bucket.
   *
   * To enable replication, you must also enable versioning by using the \`VersioningConfiguration\` property.
   *
   * Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-replicationconfiguration
   */
  readonly replicationConfiguration?: cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty;

  /**
   * An arbitrary set of tags (key-value pairs) for this S3 bucket.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-tags
   */
  readonly tags?: Array<cdk.CfnTag>;

  /**
   * Enables multiple versions of all objects in this bucket.
   *
   * You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-versioningconfiguration
   */
  readonly versioningConfiguration?: cdk.IResolvable | CfnBucket.VersioningConfigurationProperty;

  /**
   * Information used to configure the bucket as a static website.
   *
   * For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-websiteconfiguration
   */
  readonly websiteConfiguration?: cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty;
}

/**
 * Determine whether the given properties match those of a \`WebsiteConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`WebsiteConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketWebsiteConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"WebsiteConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketWebsiteConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnBucket.WebsiteConfigurationProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.WebsiteConfigurationProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`VersioningConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`VersioningConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketVersioningConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"VersioningConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketVersioningConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnBucket.VersioningConfigurationProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.VersioningConfigurationProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`TagProperty\`
 *
 * @param properties - the TypeScript properties of a \`TagProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketTagPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"TagProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketTagPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketTagPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketTagPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnBucket.TagProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.TagProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`ReplicationConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`ReplicationConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketReplicationConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"ReplicationConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketReplicationConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnBucket.ReplicationConfigurationProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.ReplicationConfigurationProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`PublicAccessBlockConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`PublicAccessBlockConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketPublicAccessBlockConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"PublicAccessBlockConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketPublicAccessBlockConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnBucket.PublicAccessBlockConfigurationProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.PublicAccessBlockConfigurationProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`OwnershipControlsProperty\`
 *
 * @param properties - the TypeScript properties of a \`OwnershipControlsProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketOwnershipControlsPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"OwnershipControlsProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketOwnershipControlsPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketOwnershipControlsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnBucket.OwnershipControlsProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.OwnershipControlsProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`ObjectLockConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`ObjectLockConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketObjectLockConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"ObjectLockConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketObjectLockConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnBucket.ObjectLockConfigurationProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.ObjectLockConfigurationProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`NotificationConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`NotificationConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketNotificationConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"NotificationConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketNotificationConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnBucket.NotificationConfigurationProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.NotificationConfigurationProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`MetricsConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`MetricsConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketMetricsConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"MetricsConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketMetricsConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketMetricsConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketMetricsConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnBucket.MetricsConfigurationProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.MetricsConfigurationProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`LoggingConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`LoggingConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketLoggingConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"LoggingConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketLoggingConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnBucket.LoggingConfigurationProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.LoggingConfigurationProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`LifecycleConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`LifecycleConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketLifecycleConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"LifecycleConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketLifecycleConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnBucket.LifecycleConfigurationProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.LifecycleConfigurationProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`InventoryConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`InventoryConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketInventoryConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"InventoryConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketInventoryConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketInventoryConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketInventoryConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnBucket.InventoryConfigurationProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.InventoryConfigurationProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`IntelligentTieringConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`IntelligentTieringConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketIntelligentTieringConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"IntelligentTieringConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketIntelligentTieringConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnBucket.IntelligentTieringConfigurationProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.IntelligentTieringConfigurationProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`CorsConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`CorsConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketCorsConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"CorsConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketCorsConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketCorsConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnBucket.CorsConfigurationProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.CorsConfigurationProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`BucketEncryptionProperty\`
 *
 * @param properties - the TypeScript properties of a \`BucketEncryptionProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketBucketEncryptionPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"BucketEncryptionProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketBucketEncryptionPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketBucketEncryptionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnBucket.BucketEncryptionProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.BucketEncryptionProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`AnalyticsConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`AnalyticsConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketAnalyticsConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"AnalyticsConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketAnalyticsConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketAnalyticsConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnBucket.AnalyticsConfigurationProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.AnalyticsConfigurationProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`AccelerateConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`AccelerateConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketAccelerateConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnBucketTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"AccelerateConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketAccelerateConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(convertCfnBucketTagPropertyToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnBucket.AccelerateConfigurationProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucket.AccelerateConfigurationProperty>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`CfnBucketProps\`
 *
 * @param properties - the TypeScript properties of a \`CfnBucketProps\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnBucketPropsValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("accelerateConfiguration", CfnBucketAccelerateConfigurationPropertyValidator)(properties.accelerateConfiguration));
  errors.collect(cdk.propertyValidator("accessControl", cdk.validateString)(properties.accessControl));
  errors.collect(cdk.propertyValidator("analyticsConfigurations", cdk.listValidator(CfnBucketAnalyticsConfigurationPropertyValidator))(properties.analyticsConfigurations));
  errors.collect(cdk.propertyValidator("bucketEncryption", CfnBucketBucketEncryptionPropertyValidator)(properties.bucketEncryption));
  errors.collect(cdk.propertyValidator("bucketName", cdk.validateString)(properties.bucketName));
  errors.collect(cdk.propertyValidator("corsConfiguration", CfnBucketCorsConfigurationPropertyValidator)(properties.corsConfiguration));
  errors.collect(cdk.propertyValidator("intelligentTieringConfigurations", cdk.listValidator(CfnBucketIntelligentTieringConfigurationPropertyValidator))(properties.intelligentTieringConfigurations));
  errors.collect(cdk.propertyValidator("inventoryConfigurations", cdk.listValidator(CfnBucketInventoryConfigurationPropertyValidator))(properties.inventoryConfigurations));
  errors.collect(cdk.propertyValidator("lifecycleConfiguration", CfnBucketLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration));
  errors.collect(cdk.propertyValidator("loggingConfiguration", CfnBucketLoggingConfigurationPropertyValidator)(properties.loggingConfiguration));
  errors.collect(cdk.propertyValidator("metricsConfigurations", cdk.listValidator(CfnBucketMetricsConfigurationPropertyValidator))(properties.metricsConfigurations));
  errors.collect(cdk.propertyValidator("notificationConfiguration", CfnBucketNotificationConfigurationPropertyValidator)(properties.notificationConfiguration));
  errors.collect(cdk.propertyValidator("objectLockConfiguration", CfnBucketObjectLockConfigurationPropertyValidator)(properties.objectLockConfiguration));
  errors.collect(cdk.propertyValidator("objectLockEnabled", cdk.validateBoolean)(properties.objectLockEnabled));
  errors.collect(cdk.propertyValidator("ownershipControls", CfnBucketOwnershipControlsPropertyValidator)(properties.ownershipControls));
  errors.collect(cdk.propertyValidator("publicAccessBlockConfiguration", CfnBucketPublicAccessBlockConfigurationPropertyValidator)(properties.publicAccessBlockConfiguration));
  errors.collect(cdk.propertyValidator("replicationConfiguration", CfnBucketReplicationConfigurationPropertyValidator)(properties.replicationConfiguration));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(cdk.validateCfnTag))(properties.tags));
  errors.collect(cdk.propertyValidator("versioningConfiguration", CfnBucketVersioningConfigurationPropertyValidator)(properties.versioningConfiguration));
  errors.collect(cdk.propertyValidator("websiteConfiguration", CfnBucketWebsiteConfigurationPropertyValidator)(properties.websiteConfiguration));
  return errors.wrap("supplied properties not correct for \\"CfnBucketProps\\"");
}

// @ts-ignore TS6133
function convertCfnBucketPropsToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnBucketPropsValidator(properties).assertSuccess();
  return {
    "AccelerateConfiguration": convertCfnBucketAccelerateConfigurationPropertyToCloudFormation(properties.accelerateConfiguration),
    "AccessControl": cdk.stringToCloudFormation(properties.accessControl),
    "AnalyticsConfigurations": cdk.listMapper(convertCfnBucketAnalyticsConfigurationPropertyToCloudFormation)(properties.analyticsConfigurations),
    "BucketEncryption": convertCfnBucketBucketEncryptionPropertyToCloudFormation(properties.bucketEncryption),
    "BucketName": cdk.stringToCloudFormation(properties.bucketName),
    "CorsConfiguration": convertCfnBucketCorsConfigurationPropertyToCloudFormation(properties.corsConfiguration),
    "IntelligentTieringConfigurations": cdk.listMapper(convertCfnBucketIntelligentTieringConfigurationPropertyToCloudFormation)(properties.intelligentTieringConfigurations),
    "InventoryConfigurations": cdk.listMapper(convertCfnBucketInventoryConfigurationPropertyToCloudFormation)(properties.inventoryConfigurations),
    "LifecycleConfiguration": convertCfnBucketLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),
    "LoggingConfiguration": convertCfnBucketLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),
    "MetricsConfigurations": cdk.listMapper(convertCfnBucketMetricsConfigurationPropertyToCloudFormation)(properties.metricsConfigurations),
    "NotificationConfiguration": convertCfnBucketNotificationConfigurationPropertyToCloudFormation(properties.notificationConfiguration),
    "ObjectLockConfiguration": convertCfnBucketObjectLockConfigurationPropertyToCloudFormation(properties.objectLockConfiguration),
    "ObjectLockEnabled": cdk.booleanToCloudFormation(properties.objectLockEnabled),
    "OwnershipControls": convertCfnBucketOwnershipControlsPropertyToCloudFormation(properties.ownershipControls),
    "PublicAccessBlockConfiguration": convertCfnBucketPublicAccessBlockConfigurationPropertyToCloudFormation(properties.publicAccessBlockConfiguration),
    "ReplicationConfiguration": convertCfnBucketReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),
    "Tags": cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),
    "VersioningConfiguration": convertCfnBucketVersioningConfigurationPropertyToCloudFormation(properties.versioningConfiguration),
    "WebsiteConfiguration": convertCfnBucketWebsiteConfigurationPropertyToCloudFormation(properties.websiteConfiguration)
  };
}

// @ts-ignore TS6133
function CfnBucketPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnBucketProps | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnBucketProps>();
  ret.addPropertyResult("accelerateConfiguration", "AccelerateConfiguration", (properties.AccelerateConfiguration != null ? CfnBucketAccelerateConfigurationPropertyFromCloudFormation(properties.AccelerateConfiguration) : undefined));
  ret.addPropertyResult("accessControl", "AccessControl", (properties.AccessControl != null ? cfn_parse.FromCloudFormation.getString(properties.AccessControl) : undefined));
  ret.addPropertyResult("analyticsConfigurations", "AnalyticsConfigurations", (properties.AnalyticsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketAnalyticsConfigurationPropertyFromCloudFormation)(properties.AnalyticsConfigurations) : undefined));
  ret.addPropertyResult("bucketEncryption", "BucketEncryption", (properties.BucketEncryption != null ? CfnBucketBucketEncryptionPropertyFromCloudFormation(properties.BucketEncryption) : undefined));
  ret.addPropertyResult("bucketName", "BucketName", (properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined));
  ret.addPropertyResult("corsConfiguration", "CorsConfiguration", (properties.CorsConfiguration != null ? CfnBucketCorsConfigurationPropertyFromCloudFormation(properties.CorsConfiguration) : undefined));
  ret.addPropertyResult("intelligentTieringConfigurations", "IntelligentTieringConfigurations", (properties.IntelligentTieringConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketIntelligentTieringConfigurationPropertyFromCloudFormation)(properties.IntelligentTieringConfigurations) : undefined));
  ret.addPropertyResult("inventoryConfigurations", "InventoryConfigurations", (properties.InventoryConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketInventoryConfigurationPropertyFromCloudFormation)(properties.InventoryConfigurations) : undefined));
  ret.addPropertyResult("lifecycleConfiguration", "LifecycleConfiguration", (properties.LifecycleConfiguration != null ? CfnBucketLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration) : undefined));
  ret.addPropertyResult("loggingConfiguration", "LoggingConfiguration", (properties.LoggingConfiguration != null ? CfnBucketLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration) : undefined));
  ret.addPropertyResult("metricsConfigurations", "MetricsConfigurations", (properties.MetricsConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnBucketMetricsConfigurationPropertyFromCloudFormation)(properties.MetricsConfigurations) : undefined));
  ret.addPropertyResult("notificationConfiguration", "NotificationConfiguration", (properties.NotificationConfiguration != null ? CfnBucketNotificationConfigurationPropertyFromCloudFormation(properties.NotificationConfiguration) : undefined));
  ret.addPropertyResult("objectLockConfiguration", "ObjectLockConfiguration", (properties.ObjectLockConfiguration != null ? CfnBucketObjectLockConfigurationPropertyFromCloudFormation(properties.ObjectLockConfiguration) : undefined));
  ret.addPropertyResult("objectLockEnabled", "ObjectLockEnabled", (properties.ObjectLockEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ObjectLockEnabled) : undefined));
  ret.addPropertyResult("ownershipControls", "OwnershipControls", (properties.OwnershipControls != null ? CfnBucketOwnershipControlsPropertyFromCloudFormation(properties.OwnershipControls) : undefined));
  ret.addPropertyResult("publicAccessBlockConfiguration", "PublicAccessBlockConfiguration", (properties.PublicAccessBlockConfiguration != null ? CfnBucketPublicAccessBlockConfigurationPropertyFromCloudFormation(properties.PublicAccessBlockConfiguration) : undefined));
  ret.addPropertyResult("replicationConfiguration", "ReplicationConfiguration", (properties.ReplicationConfiguration != null ? CfnBucketReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined));
  ret.addPropertyResult("versioningConfiguration", "VersioningConfiguration", (properties.VersioningConfiguration != null ? CfnBucketVersioningConfigurationPropertyFromCloudFormation(properties.VersioningConfiguration) : undefined));
  ret.addPropertyResult("websiteConfiguration", "WebsiteConfiguration", (properties.WebsiteConfiguration != null ? CfnBucketWebsiteConfigurationPropertyFromCloudFormation(properties.WebsiteConfiguration) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}",
}
`;

exports[`AWS::SQS::Queue 1`] = `
{
  "augmentations": "// Copyright 2012-2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.
/* eslint-disable prettier/prettier,max-len */
import * as cw from "aws-cdk-lib/aws-cloudwatch";
import { QueueBase } from "./queue-base";

declare module "./queue-base" {
  interface IQueue {
    /**
     * Return the given named metric for this Queue
     */
    metric(metricName: string, props?: cw.MetricOptions): cw.Metric;

    /**
     * The approximate age of the oldest non-deleted message in the queue.
     *
     * Maximum over 5 minutes
     */
    metricApproximateAgeOfOldestMessage(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of messages in the queue that are delayed and not available for reading immediately.
     *
     * Maximum over 5 minutes
     */
    metricApproximateNumberOfMessagesDelayed(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of messages that are in flight.
     *
     * Maximum over 5 minutes
     */
    metricApproximateNumberOfMessagesNotVisible(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of messages available for retrieval from the queue.
     *
     * Maximum over 5 minutes
     */
    metricApproximateNumberOfMessagesVisible(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of ReceiveMessage API calls that did not return a message.
     *
     * Sum over 5 minutes
     */
    metricNumberOfEmptyReceives(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of messages deleted from the queue.
     *
     * Sum over 5 minutes
     */
    metricNumberOfMessagesDeleted(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of messages returned by calls to the ReceiveMessage action.
     *
     * Sum over 5 minutes
     */
    metricNumberOfMessagesReceived(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of messages added to a queue.
     *
     * Sum over 5 minutes
     */
    metricNumberOfMessagesSent(props?: cw.MetricOptions): cw.Metric;

    /**
     * The size of messages added to a queue.
     *
     * Average over 5 minutes
     */
    metricSentMessageSize(props?: cw.MetricOptions): cw.Metric;
  }
}



declare module "./queue-base" {
  interface QueueBase {
    /**
     * Return the given named metric for this Queue
     */
    metric(metricName: string, props?: cw.MetricOptions): cw.Metric;

    /**
     * The approximate age of the oldest non-deleted message in the queue.
     *
     * Maximum over 5 minutes
     */
    metricApproximateAgeOfOldestMessage(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of messages in the queue that are delayed and not available for reading immediately.
     *
     * Maximum over 5 minutes
     */
    metricApproximateNumberOfMessagesDelayed(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of messages that are in flight.
     *
     * Maximum over 5 minutes
     */
    metricApproximateNumberOfMessagesNotVisible(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of messages available for retrieval from the queue.
     *
     * Maximum over 5 minutes
     */
    metricApproximateNumberOfMessagesVisible(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of ReceiveMessage API calls that did not return a message.
     *
     * Sum over 5 minutes
     */
    metricNumberOfEmptyReceives(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of messages deleted from the queue.
     *
     * Sum over 5 minutes
     */
    metricNumberOfMessagesDeleted(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of messages returned by calls to the ReceiveMessage action.
     *
     * Sum over 5 minutes
     */
    metricNumberOfMessagesReceived(props?: cw.MetricOptions): cw.Metric;

    /**
     * The number of messages added to a queue.
     *
     * Sum over 5 minutes
     */
    metricNumberOfMessagesSent(props?: cw.MetricOptions): cw.Metric;

    /**
     * The size of messages added to a queue.
     *
     * Average over 5 minutes
     */
    metricSentMessageSize(props?: cw.MetricOptions): cw.Metric;
  }
}

QueueBase.prototype.metric = function(metricName: string, props?: cw.MetricOptions) {
  return new cw.Metric({
    "namespace": "AWS/SQS",
    "metricName": metricName,
    "dimensionsMap": {
      "QueueName": this.queueName
    },
    ...props
  }).attachTo(this);
};
QueueBase.prototype.metricApproximateAgeOfOldestMessage = function(props?: cw.MetricOptions) {
  return this.metric("ApproximateAgeOfOldestMessage", {
    "statistic": "Maximum",
    ...props
  });
};
QueueBase.prototype.metricApproximateNumberOfMessagesDelayed = function(props?: cw.MetricOptions) {
  return this.metric("ApproximateNumberOfMessagesDelayed", {
    "statistic": "Maximum",
    ...props
  });
};
QueueBase.prototype.metricApproximateNumberOfMessagesNotVisible = function(props?: cw.MetricOptions) {
  return this.metric("ApproximateNumberOfMessagesNotVisible", {
    "statistic": "Maximum",
    ...props
  });
};
QueueBase.prototype.metricApproximateNumberOfMessagesVisible = function(props?: cw.MetricOptions) {
  return this.metric("ApproximateNumberOfMessagesVisible", {
    "statistic": "Maximum",
    ...props
  });
};
QueueBase.prototype.metricNumberOfEmptyReceives = function(props?: cw.MetricOptions) {
  return this.metric("NumberOfEmptyReceives", {
    "statistic": "Sum",
    ...props
  });
};
QueueBase.prototype.metricNumberOfMessagesDeleted = function(props?: cw.MetricOptions) {
  return this.metric("NumberOfMessagesDeleted", {
    "statistic": "Sum",
    ...props
  });
};
QueueBase.prototype.metricNumberOfMessagesReceived = function(props?: cw.MetricOptions) {
  return this.metric("NumberOfMessagesReceived", {
    "statistic": "Sum",
    ...props
  });
};
QueueBase.prototype.metricNumberOfMessagesSent = function(props?: cw.MetricOptions) {
  return this.metric("NumberOfMessagesSent", {
    "statistic": "Sum",
    ...props
  });
};
QueueBase.prototype.metricSentMessageSize = function(props?: cw.MetricOptions) {
  return this.metric("SentMessageSize", {
    "statistic": "Average",
    ...props
  });
};",
  "metrics": "/* eslint-disable prettier/prettier,max-len */
export interface MetricWithDims<D> {
  readonly namespace: string;

  readonly metricName: string;

  readonly statistic: string;

  readonly dimensionsMap: D;
}

export class SQSMetrics {
  public static numberOfMessagesSentAverage(dimensions: { QueueName: string; }): MetricWithDims<{ QueueName: string; }> {
    return {
      "namespace": "AWS/SQS",
      "metricName": "NumberOfMessagesSent",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static approximateNumberOfMessagesDelayedAverage(dimensions: { QueueName: string; }): MetricWithDims<{ QueueName: string; }> {
    return {
      "namespace": "AWS/SQS",
      "metricName": "ApproximateNumberOfMessagesDelayed",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static numberOfMessagesReceivedAverage(dimensions: { QueueName: string; }): MetricWithDims<{ QueueName: string; }> {
    return {
      "namespace": "AWS/SQS",
      "metricName": "NumberOfMessagesReceived",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static numberOfMessagesDeletedAverage(dimensions: { QueueName: string; }): MetricWithDims<{ QueueName: string; }> {
    return {
      "namespace": "AWS/SQS",
      "metricName": "NumberOfMessagesDeleted",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static approximateNumberOfMessagesNotVisibleAverage(dimensions: { QueueName: string; }): MetricWithDims<{ QueueName: string; }> {
    return {
      "namespace": "AWS/SQS",
      "metricName": "ApproximateNumberOfMessagesNotVisible",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static approximateNumberOfMessagesVisibleAverage(dimensions: { QueueName: string; }): MetricWithDims<{ QueueName: string; }> {
    return {
      "namespace": "AWS/SQS",
      "metricName": "ApproximateNumberOfMessagesVisible",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static approximateAgeOfOldestMessageAverage(dimensions: { QueueName: string; }): MetricWithDims<{ QueueName: string; }> {
    return {
      "namespace": "AWS/SQS",
      "metricName": "ApproximateAgeOfOldestMessage",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static numberOfEmptyReceivesAverage(dimensions: { QueueName: string; }): MetricWithDims<{ QueueName: string; }> {
    return {
      "namespace": "AWS/SQS",
      "metricName": "NumberOfEmptyReceives",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }

  public static sentMessageSizeAverage(dimensions: { QueueName: string; }): MetricWithDims<{ QueueName: string; }> {
    return {
      "namespace": "AWS/SQS",
      "metricName": "SentMessageSize",
      "dimensionsMap": dimensions,
      "statistic": "Average"
    };
  }
}",
  "module": "/* eslint-disable prettier/prettier,max-len */
import * as cdk from "aws-cdk-lib";
import * as constructs from "constructs";
import * as cfn_parse from "aws-cdk-lib/core/lib/helpers-internal";

/**
 * The \`AWS::SQS::Queue\` resource creates an Amazon SQS standard or FIFO queue.
 *
 * Keep the following caveats in mind:
 *
 * - If you don't specify the \`FifoQueue\` property, Amazon SQS creates a standard queue.
 *
 * > You can't change the queue type after you create it and you can't convert an existing standard queue into a FIFO queue. You must either create a new FIFO queue for your application or delete your existing standard queue and recreate it as a FIFO queue. For more information, see [Moving from a standard queue to a FIFO queue](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues-moving.html) in the *Amazon SQS Developer Guide* .
 * - If you don't provide a value for a property, the queue is created with the default value for the property.
 * - If you delete a queue, you must wait at least 60 seconds before creating a queue with the same name.
 * - To successfully create a new queue, you must provide a queue name that adheres to the [limits related to queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/limits-queues.html) and is unique within the scope of your queues.
 *
 * For more information about creating FIFO (first-in-first-out) queues, see [Creating an Amazon SQS queue ( AWS CloudFormation )](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/screate-queue-cloudformation.html) in the *Amazon SQS Developer Guide* .
 *
 * @stability external
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html
 */
export class CfnQueue extends cdk.CfnResource implements cdk.IInspectable, cdk.ITaggable {
  /**
   * The CloudFormation resource type name for this resource class.
   */
  public static readonly CFN_RESOURCE_TYPE_NAME: string = "AWS::SQS::Queue";

  /**
   * Build a CfnQueue from CloudFormation properties
   *
   * A factory method that creates a new instance of this class from an object
   * containing the CloudFormation properties of this resource.
   * Used in the @aws-cdk/cloudformation-include module.
   *
   * @internal
   */
  public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnQueue {
    resourceAttributes = resourceAttributes || {};
    const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);
    const propsResult = CfnQueuePropsFromCloudFormation(resourceProperties);
    if (cdk.isResolvableObject(propsResult.value)) {
      throw new Error("Unexpected IResolvable");
    }
    const ret = new CfnQueue(scope, id, propsResult.value);
    for (const [propKey, propVal] of Object.entries(propsResult.extraProperties)) {
      ret.addPropertyOverride(propKey, propVal);
    }
    options.parser.handleAttributes(ret, resourceAttributes, id);
    return ret;
  }

  /**
   * Returns the Amazon Resource Name (ARN) of the queue. For example: \`arn:aws:sqs:us-east-2:123456789012:mystack-myqueue-15PG5C2FC1CW8\` .
   *
   * @cloudformationAttribute Arn
   */
  public readonly attrArn: string;

  /**
   * Returns the queue name. For example: \`mystack-myqueue-1VF9BKQH5BJVI\` .
   *
   * @cloudformationAttribute QueueName
   */
  public readonly attrQueueName: string;

  /**
   * Returns the URLs of the queues from the policy.
   *
   * @cloudformationAttribute QueueUrl
   */
  public readonly attrQueueUrl: string;

  /**
   * For first-in-first-out (FIFO) queues, specifies whether to enable content-based deduplication.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-contentbaseddeduplication
   */
  public contentBasedDeduplication?: boolean | cdk.IResolvable;

  /**
   * For high throughput for FIFO queues, specifies whether message deduplication occurs at the message group or queue level.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-deduplicationscope
   */
  public deduplicationScope?: string;

  /**
   * The time in seconds for which the delivery of all messages in the queue is delayed.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-delayseconds
   */
  public delaySeconds?: number;

  /**
   * If set to true, creates a FIFO queue.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-fifoqueue
   */
  public fifoQueue?: boolean | cdk.IResolvable;

  /**
   * For high throughput for FIFO queues, specifies whether the FIFO queue throughput quota applies to the entire queue or per message group.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-fifothroughputlimit
   */
  public fifoThroughputLimit?: string;

  /**
   * The length of time in seconds for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-kmsdatakeyreuseperiodseconds
   */
  public kmsDataKeyReusePeriodSeconds?: number;

  /**
   * The ID of an AWS Key Management Service (KMS) for Amazon SQS , or a custom KMS.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-kmsmasterkeyid
   */
  public kmsMasterKeyId?: string;

  /**
   * The limit of how many bytes that a message can contain before Amazon SQS rejects it.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-maximummessagesize
   */
  public maximumMessageSize?: number;

  /**
   * The number of seconds that Amazon SQS retains a message.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-messageretentionperiod
   */
  public messageRetentionPeriod?: number;

  /**
   * A name for the queue.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-queuename
   */
  public queueName?: string;

  /**
   * Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order to include it in the response, rather than returning an empty response if a message isn't yet available.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-receivemessagewaittimeseconds
   */
  public receiveMessageWaitTimeSeconds?: number;

  /**
   * The string that includes the parameters for the permissions for the dead-letter queue redrive permission and which source queues can specify dead-letter queues as a JSON object.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-redriveallowpolicy
   */
  public redriveAllowPolicy?: any | cdk.IResolvable | string;

  /**
   * The string that includes the parameters for the dead-letter queue functionality of the source queue as a JSON object.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-redrivepolicy
   */
  public redrivePolicy?: any | cdk.IResolvable | string;

  /**
   * Enables server-side queue encryption using SQS owned encryption keys.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-sqsmanagedsseenabled
   */
  public sqsManagedSseEnabled?: boolean | cdk.IResolvable;

  /**
   * Tag Manager which manages the tags for this resource
   */
  public readonly tags: cdk.TagManager;

  /**
   * The tags that you attach to this queue.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-tags
   */
  public tagsRaw?: Array<cdk.CfnTag>;

  /**
   * The length of time during which a message will be unavailable after a message is delivered from the queue.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-visibilitytimeout
   */
  public visibilityTimeout?: number;

  /**
   * @param scope Scope in which this resource is defined
   * @param id Construct identifier for this resource (unique in its scope)
   * @param props Resource properties
   */
  public constructor(scope: constructs.Construct, id: string, props: CfnQueueProps = {}) {
    super(scope, id, {
      "type": CfnQueue.CFN_RESOURCE_TYPE_NAME,
      "properties": props
    });

    this.attrArn = cdk.Token.asString(this.getAtt("Arn", cdk.ResolutionTypeHint.STRING));
    this.attrQueueName = cdk.Token.asString(this.getAtt("QueueName", cdk.ResolutionTypeHint.STRING));
    this.attrQueueUrl = cdk.Token.asString(this.getAtt("QueueUrl", cdk.ResolutionTypeHint.STRING));
    this.contentBasedDeduplication = props.contentBasedDeduplication;
    this.deduplicationScope = props.deduplicationScope;
    this.delaySeconds = props.delaySeconds;
    this.fifoQueue = props.fifoQueue;
    this.fifoThroughputLimit = props.fifoThroughputLimit;
    this.kmsDataKeyReusePeriodSeconds = props.kmsDataKeyReusePeriodSeconds;
    this.kmsMasterKeyId = props.kmsMasterKeyId;
    this.maximumMessageSize = props.maximumMessageSize;
    this.messageRetentionPeriod = props.messageRetentionPeriod;
    this.queueName = props.queueName;
    this.receiveMessageWaitTimeSeconds = props.receiveMessageWaitTimeSeconds;
    this.redriveAllowPolicy = props.redriveAllowPolicy;
    this.redrivePolicy = props.redrivePolicy;
    this.sqsManagedSseEnabled = props.sqsManagedSseEnabled;
    this.tags = new cdk.TagManager(cdk.TagType.STANDARD, "AWS::SQS::Queue", props.tags, {
      "tagPropertyName": "tags"
    });
    this.tagsRaw = props.tags;
    this.visibilityTimeout = props.visibilityTimeout;
    if ((this.node.scope != null && cdk.Resource.isResource(this.node.scope))) {
      this.node.addValidation({
        "validate": () => ((this.cfnOptions.deletionPolicy === undefined) ? ["'AWS::SQS::Queue' is a stateful resource type, and you must specify a Removal Policy for it. Call 'resource.applyRemovalPolicy()'."] : [])
      });
    }
  }

  protected get cfnProperties(): Record<string, any> {
    return {
      "contentBasedDeduplication": this.contentBasedDeduplication,
      "deduplicationScope": this.deduplicationScope,
      "delaySeconds": this.delaySeconds,
      "fifoQueue": this.fifoQueue,
      "fifoThroughputLimit": this.fifoThroughputLimit,
      "kmsDataKeyReusePeriodSeconds": this.kmsDataKeyReusePeriodSeconds,
      "kmsMasterKeyId": this.kmsMasterKeyId,
      "maximumMessageSize": this.maximumMessageSize,
      "messageRetentionPeriod": this.messageRetentionPeriod,
      "queueName": this.queueName,
      "receiveMessageWaitTimeSeconds": this.receiveMessageWaitTimeSeconds,
      "redriveAllowPolicy": this.redriveAllowPolicy,
      "redrivePolicy": this.redrivePolicy,
      "sqsManagedSseEnabled": this.sqsManagedSseEnabled,
      "tags": this.tags.renderTags(),
      "visibilityTimeout": this.visibilityTimeout
    };
  }

  /**
   * Examines the CloudFormation resource and discloses attributes
   *
   * @param inspector tree inspector to collect and process attributes
   */
  public inspect(inspector: cdk.TreeInspector): void {
    inspector.addAttribute("aws:cdk:cloudformation:type", CfnQueue.CFN_RESOURCE_TYPE_NAME);
    inspector.addAttribute("aws:cdk:cloudformation:props", this.cfnProperties);
  }

  protected renderProperties(props: Record<string, any>): Record<string, any> {
    return convertCfnQueuePropsToCloudFormation(props);
  }
}

export namespace CfnQueue {
  /**
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html
   */
  export interface TagProperty {
    /**
     * For first-in-first-out (FIFO) queues, specifies whether to enable content-based deduplication.
     *
     * During the deduplication interval, Amazon SQS treats messages that are sent with identical content as duplicates and delivers only one copy of the message. For more information, see the \`ContentBasedDeduplication\` attribute for the \`[CreateQueue](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_CreateQueue.html)\` action in the *Amazon SQS API Reference* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-contentbaseddeduplication
     */
    readonly contentBasedDeduplication?: boolean | cdk.IResolvable;

    /**
     * For high throughput for FIFO queues, specifies whether message deduplication occurs at the message group or queue level.
     *
     * Valid values are \`messageGroup\` and \`queue\` .
     *
     * To enable high throughput for a FIFO queue, set this attribute to \`messageGroup\` *and* set the \`FifoThroughputLimit\` attribute to \`perMessageGroupId\` . If you set these attributes to anything other than these values, normal throughput is in effect and deduplication occurs as specified. For more information, see [High throughput for FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/high-throughput-fifo.html) and [Quotas related to messages](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-messages.html) in the *Amazon SQS Developer Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-deduplicationscope
     */
    readonly deduplicationScope?: string;

    /**
     * The time in seconds for which the delivery of all messages in the queue is delayed.
     *
     * You can specify an integer value of \`0\` to \`900\` (15 minutes). The default value is \`0\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-delayseconds
     */
    readonly delaySeconds?: number;

    /**
     * If set to true, creates a FIFO queue.
     *
     * If you don't specify this property, Amazon SQS creates a standard queue. For more information, see [FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html) in the *Amazon SQS Developer Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-fifoqueue
     */
    readonly fifoQueue?: boolean | cdk.IResolvable;

    /**
     * For high throughput for FIFO queues, specifies whether the FIFO queue throughput quota applies to the entire queue or per message group.
     *
     * Valid values are \`perQueue\` and \`perMessageGroupId\` .
     *
     * To enable high throughput for a FIFO queue, set this attribute to \`perMessageGroupId\` *and* set the \`DeduplicationScope\` attribute to \`messageGroup\` . If you set these attributes to anything other than these values, normal throughput is in effect and deduplication occurs as specified. For more information, see [High throughput for FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/high-throughput-fifo.html) and [Quotas related to messages](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-messages.html) in the *Amazon SQS Developer Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-fifothroughputlimit
     */
    readonly fifoThroughputLimit?: string;

    /**
     * The length of time in seconds for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again.
     *
     * The value must be an integer between 60 (1 minute) and 86,400 (24 hours). The default is 300 (5 minutes).
     *
     * > A shorter time period provides better security, but results in more calls to AWS KMS , which might incur charges after Free Tier. For more information, see [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-how-does-the-data-key-reuse-period-work) in the *Amazon SQS Developer Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-kmsdatakeyreuseperiodseconds
     */
    readonly kmsDataKeyReusePeriodSeconds?: number;

    /**
     * The ID of an AWS Key Management Service (KMS) for Amazon SQS , or a custom KMS.
     *
     * To use the AWS managed KMS for Amazon SQS , specify a (default) alias ARN, alias name (e.g. \`alias/aws/sqs\` ), key ARN, or key ID. For more information, see the following:
     *
     * - [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html) in the *Amazon SQS Developer Guide*
     * - [CreateQueue](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_CreateQueue.html) in the *Amazon SQS API Reference*
     * - [Request Parameters](https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters) in the *AWS Key Management Service API Reference*
     * - The Key Management Service (KMS) section of the [AWS Key Management Service Best Practices](https://docs.aws.amazon.com/https://d0.awsstatic.com/whitepapers/aws-kms-best-practices.pdf) whitepaper
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-kmsmasterkeyid
     */
    readonly kmsMasterKeyId?: string;

    /**
     * The limit of how many bytes that a message can contain before Amazon SQS rejects it.
     *
     * You can specify an integer value from \`1,024\` bytes (1 KiB) to \`262,144\` bytes (256 KiB). The default value is \`262,144\` (256 KiB).
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-maximummessagesize
     */
    readonly maximumMessageSize?: number;

    /**
     * The number of seconds that Amazon SQS retains a message.
     *
     * You can specify an integer value from \`60\` seconds (1 minute) to \`1,209,600\` seconds (14 days). The default value is \`345,600\` seconds (4 days).
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-messageretentionperiod
     */
    readonly messageRetentionPeriod?: number;

    /**
     * A name for the queue.
     *
     * To create a FIFO queue, the name of your FIFO queue must end with the \`.fifo\` suffix. For more information, see [FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html) in the *Amazon SQS Developer Guide* .
     *
     * If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the queue name. For more information, see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) in the *AWS CloudFormation User Guide* .
     *
     * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-queuename
     */
    readonly queueName?: string;

    /**
     * Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order to include it in the response, rather than returning an empty response if a message isn't yet available.
     *
     * You can specify an integer from 1 to 20. Short polling is used as the default or when you specify 0 for this property. For more information, see [Consuming messages using long polling](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html#sqs-long-polling) in the *Amazon SQS Developer Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-receivemessagewaittimeseconds
     */
    readonly receiveMessageWaitTimeSeconds?: number;

    /**
     * The string that includes the parameters for the permissions for the dead-letter queue redrive permission and which source queues can specify dead-letter queues as a JSON object.
     *
     * The parameters are as follows:
     *
     * - \`redrivePermission\` : The permission type that defines which source queues can specify the current queue as the dead-letter queue. Valid values are:
     *
     * - \`allowAll\` : (Default) Any source queues in this AWS account in the same Region can specify this queue as the dead-letter queue.
     * - \`denyAll\` : No source queues can specify this queue as the dead-letter queue.
     * - \`byQueue\` : Only queues specified by the \`sourceQueueArns\` parameter can specify this queue as the dead-letter queue.
     * - \`sourceQueueArns\` : The Amazon Resource Names (ARN)s of the source queues that can specify this queue as the dead-letter queue and redrive messages. You can specify this parameter only when the \`redrivePermission\` parameter is set to \`byQueue\` . You can specify up to 10 source queue ARNs. To allow more than 10 source queues to specify dead-letter queues, set the \`redrivePermission\` parameter to \`allowAll\` .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-redriveallowpolicy
     */
    readonly redriveAllowPolicy?: any | cdk.IResolvable | string;

    /**
     * The string that includes the parameters for the dead-letter queue functionality of the source queue as a JSON object.
     *
     * The parameters are as follows:
     *
     * - \`deadLetterTargetArn\` : The Amazon Resource Name (ARN) of the dead-letter queue to which Amazon SQS moves messages after the value of \`maxReceiveCount\` is exceeded.
     * - \`maxReceiveCount\` : The number of times a message is delivered to the source queue before being moved to the dead-letter queue. When the \`ReceiveCount\` for a message exceeds the \`maxReceiveCount\` for a queue, Amazon SQS moves the message to the dead-letter-queue.
     *
     * > The dead-letter queue of a FIFO queue must also be a FIFO queue. Similarly, the dead-letter queue of a standard queue must also be a standard queue.
     *
     * *JSON*
     *
     * \`{ "deadLetterTargetArn" : *String* , "maxReceiveCount" : *Integer* }\`
     *
     * *YAML*
     *
     * \`deadLetterTargetArn : *String*\`
     *
     * \`maxReceiveCount : *Integer*\`
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-redrivepolicy
     */
    readonly redrivePolicy?: any | cdk.IResolvable | string;

    /**
     * Enables server-side queue encryption using SQS owned encryption keys.
     *
     * Only one server-side encryption option is supported per queue (for example, [SSE-KMS](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sse-existing-queue.html) or [SSE-SQS](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sqs-sse-queue.html) ).
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-sqsmanagedsseenabled
     */
    readonly sqsManagedSseEnabled?: boolean | cdk.IResolvable;

    /**
     * The tags that you attach to this queue.
     *
     * For more information, see [Resource tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *AWS CloudFormation User Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-tags
     */
    readonly tags?: Array<cdk.IResolvable | CfnQueue.TagProperty> | cdk.IResolvable;

    /**
     * The length of time during which a message will be unavailable after a message is delivered from the queue.
     *
     * This blocks other components from receiving the same message and gives the initial component time to process and delete the message from the queue.
     *
     * Values must be from 0 to 43,200 seconds (12 hours). If you don't specify a value, AWS CloudFormation uses the default value of 30 seconds.
     *
     * For more information about Amazon SQS queue visibility timeouts, see [Visibility timeout](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html) in the *Amazon SQS Developer Guide* .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queue-tag.html#cfn-sqs-queue-tag-visibilitytimeout
     */
    readonly visibilityTimeout?: number;
  }
}

/**
 * Properties for defining a \`CfnQueue\`
 *
 * @struct
 * @stability external
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html
 */
export interface CfnQueueProps {
  /**
   * For first-in-first-out (FIFO) queues, specifies whether to enable content-based deduplication.
   *
   * During the deduplication interval, Amazon SQS treats messages that are sent with identical content as duplicates and delivers only one copy of the message. For more information, see the \`ContentBasedDeduplication\` attribute for the \`[CreateQueue](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_CreateQueue.html)\` action in the *Amazon SQS API Reference* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-contentbaseddeduplication
   */
  readonly contentBasedDeduplication?: boolean | cdk.IResolvable;

  /**
   * For high throughput for FIFO queues, specifies whether message deduplication occurs at the message group or queue level.
   *
   * Valid values are \`messageGroup\` and \`queue\` .
   *
   * To enable high throughput for a FIFO queue, set this attribute to \`messageGroup\` *and* set the \`FifoThroughputLimit\` attribute to \`perMessageGroupId\` . If you set these attributes to anything other than these values, normal throughput is in effect and deduplication occurs as specified. For more information, see [High throughput for FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/high-throughput-fifo.html) and [Quotas related to messages](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-messages.html) in the *Amazon SQS Developer Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-deduplicationscope
   */
  readonly deduplicationScope?: string;

  /**
   * The time in seconds for which the delivery of all messages in the queue is delayed.
   *
   * You can specify an integer value of \`0\` to \`900\` (15 minutes). The default value is \`0\` .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-delayseconds
   */
  readonly delaySeconds?: number;

  /**
   * If set to true, creates a FIFO queue.
   *
   * If you don't specify this property, Amazon SQS creates a standard queue. For more information, see [FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html) in the *Amazon SQS Developer Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-fifoqueue
   */
  readonly fifoQueue?: boolean | cdk.IResolvable;

  /**
   * For high throughput for FIFO queues, specifies whether the FIFO queue throughput quota applies to the entire queue or per message group.
   *
   * Valid values are \`perQueue\` and \`perMessageGroupId\` .
   *
   * To enable high throughput for a FIFO queue, set this attribute to \`perMessageGroupId\` *and* set the \`DeduplicationScope\` attribute to \`messageGroup\` . If you set these attributes to anything other than these values, normal throughput is in effect and deduplication occurs as specified. For more information, see [High throughput for FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/high-throughput-fifo.html) and [Quotas related to messages](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-messages.html) in the *Amazon SQS Developer Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-fifothroughputlimit
   */
  readonly fifoThroughputLimit?: string;

  /**
   * The length of time in seconds for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again.
   *
   * The value must be an integer between 60 (1 minute) and 86,400 (24 hours). The default is 300 (5 minutes).
   *
   * > A shorter time period provides better security, but results in more calls to AWS KMS , which might incur charges after Free Tier. For more information, see [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-how-does-the-data-key-reuse-period-work) in the *Amazon SQS Developer Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-kmsdatakeyreuseperiodseconds
   */
  readonly kmsDataKeyReusePeriodSeconds?: number;

  /**
   * The ID of an AWS Key Management Service (KMS) for Amazon SQS , or a custom KMS.
   *
   * To use the AWS managed KMS for Amazon SQS , specify a (default) alias ARN, alias name (e.g. \`alias/aws/sqs\` ), key ARN, or key ID. For more information, see the following:
   *
   * - [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html) in the *Amazon SQS Developer Guide*
   * - [CreateQueue](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_CreateQueue.html) in the *Amazon SQS API Reference*
   * - [Request Parameters](https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters) in the *AWS Key Management Service API Reference*
   * - The Key Management Service (KMS) section of the [AWS Key Management Service Best Practices](https://docs.aws.amazon.com/https://d0.awsstatic.com/whitepapers/aws-kms-best-practices.pdf) whitepaper
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-kmsmasterkeyid
   */
  readonly kmsMasterKeyId?: string;

  /**
   * The limit of how many bytes that a message can contain before Amazon SQS rejects it.
   *
   * You can specify an integer value from \`1,024\` bytes (1 KiB) to \`262,144\` bytes (256 KiB). The default value is \`262,144\` (256 KiB).
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-maximummessagesize
   */
  readonly maximumMessageSize?: number;

  /**
   * The number of seconds that Amazon SQS retains a message.
   *
   * You can specify an integer value from \`60\` seconds (1 minute) to \`1,209,600\` seconds (14 days). The default value is \`345,600\` seconds (4 days).
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-messageretentionperiod
   */
  readonly messageRetentionPeriod?: number;

  /**
   * A name for the queue.
   *
   * To create a FIFO queue, the name of your FIFO queue must end with the \`.fifo\` suffix. For more information, see [FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html) in the *Amazon SQS Developer Guide* .
   *
   * If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the queue name. For more information, see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) in the *AWS CloudFormation User Guide* .
   *
   * > If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-queuename
   */
  readonly queueName?: string;

  /**
   * Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order to include it in the response, rather than returning an empty response if a message isn't yet available.
   *
   * You can specify an integer from 1 to 20. Short polling is used as the default or when you specify 0 for this property. For more information, see [Consuming messages using long polling](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html#sqs-long-polling) in the *Amazon SQS Developer Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-receivemessagewaittimeseconds
   */
  readonly receiveMessageWaitTimeSeconds?: number;

  /**
   * The string that includes the parameters for the permissions for the dead-letter queue redrive permission and which source queues can specify dead-letter queues as a JSON object.
   *
   * The parameters are as follows:
   *
   * - \`redrivePermission\` : The permission type that defines which source queues can specify the current queue as the dead-letter queue. Valid values are:
   *
   * - \`allowAll\` : (Default) Any source queues in this AWS account in the same Region can specify this queue as the dead-letter queue.
   * - \`denyAll\` : No source queues can specify this queue as the dead-letter queue.
   * - \`byQueue\` : Only queues specified by the \`sourceQueueArns\` parameter can specify this queue as the dead-letter queue.
   * - \`sourceQueueArns\` : The Amazon Resource Names (ARN)s of the source queues that can specify this queue as the dead-letter queue and redrive messages. You can specify this parameter only when the \`redrivePermission\` parameter is set to \`byQueue\` . You can specify up to 10 source queue ARNs. To allow more than 10 source queues to specify dead-letter queues, set the \`redrivePermission\` parameter to \`allowAll\` .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-redriveallowpolicy
   */
  readonly redriveAllowPolicy?: any | cdk.IResolvable | string;

  /**
   * The string that includes the parameters for the dead-letter queue functionality of the source queue as a JSON object.
   *
   * The parameters are as follows:
   *
   * - \`deadLetterTargetArn\` : The Amazon Resource Name (ARN) of the dead-letter queue to which Amazon SQS moves messages after the value of \`maxReceiveCount\` is exceeded.
   * - \`maxReceiveCount\` : The number of times a message is delivered to the source queue before being moved to the dead-letter queue. When the \`ReceiveCount\` for a message exceeds the \`maxReceiveCount\` for a queue, Amazon SQS moves the message to the dead-letter-queue.
   *
   * > The dead-letter queue of a FIFO queue must also be a FIFO queue. Similarly, the dead-letter queue of a standard queue must also be a standard queue.
   *
   * *JSON*
   *
   * \`{ "deadLetterTargetArn" : *String* , "maxReceiveCount" : *Integer* }\`
   *
   * *YAML*
   *
   * \`deadLetterTargetArn : *String*\`
   *
   * \`maxReceiveCount : *Integer*\`
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-redrivepolicy
   */
  readonly redrivePolicy?: any | cdk.IResolvable | string;

  /**
   * Enables server-side queue encryption using SQS owned encryption keys.
   *
   * Only one server-side encryption option is supported per queue (for example, [SSE-KMS](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sse-existing-queue.html) or [SSE-SQS](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sqs-sse-queue.html) ).
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-sqsmanagedsseenabled
   */
  readonly sqsManagedSseEnabled?: boolean | cdk.IResolvable;

  /**
   * The tags that you attach to this queue.
   *
   * For more information, see [Resource tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *AWS CloudFormation User Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-tags
   */
  readonly tags?: Array<cdk.CfnTag>;

  /**
   * The length of time during which a message will be unavailable after a message is delivered from the queue.
   *
   * This blocks other components from receiving the same message and gives the initial component time to process and delete the message from the queue.
   *
   * Values must be from 0 to 43,200 seconds (12 hours). If you don't specify a value, AWS CloudFormation uses the default value of 30 seconds.
   *
   * For more information about Amazon SQS queue visibility timeouts, see [Visibility timeout](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html) in the *Amazon SQS Developer Guide* .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-visibilitytimeout
   */
  readonly visibilityTimeout?: number;
}

/**
 * Determine whether the given properties match those of a \`TagProperty\`
 *
 * @param properties - the TypeScript properties of a \`TagProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnQueueTagPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("contentBasedDeduplication", cdk.validateBoolean)(properties.contentBasedDeduplication));
  errors.collect(cdk.propertyValidator("deduplicationScope", cdk.validateString)(properties.deduplicationScope));
  errors.collect(cdk.propertyValidator("delaySeconds", cdk.validateNumber)(properties.delaySeconds));
  errors.collect(cdk.propertyValidator("fifoQueue", cdk.validateBoolean)(properties.fifoQueue));
  errors.collect(cdk.propertyValidator("fifoThroughputLimit", cdk.validateString)(properties.fifoThroughputLimit));
  errors.collect(cdk.propertyValidator("kmsDataKeyReusePeriodSeconds", cdk.validateNumber)(properties.kmsDataKeyReusePeriodSeconds));
  errors.collect(cdk.propertyValidator("kmsMasterKeyId", cdk.validateString)(properties.kmsMasterKeyId));
  errors.collect(cdk.propertyValidator("maximumMessageSize", cdk.validateNumber)(properties.maximumMessageSize));
  errors.collect(cdk.propertyValidator("messageRetentionPeriod", cdk.validateNumber)(properties.messageRetentionPeriod));
  errors.collect(cdk.propertyValidator("queueName", cdk.validateString)(properties.queueName));
  errors.collect(cdk.propertyValidator("receiveMessageWaitTimeSeconds", cdk.validateNumber)(properties.receiveMessageWaitTimeSeconds));
  errors.collect(cdk.propertyValidator("redriveAllowPolicy", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.redriveAllowPolicy));
  errors.collect(cdk.propertyValidator("redrivePolicy", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.redrivePolicy));
  errors.collect(cdk.propertyValidator("sqsManagedSseEnabled", cdk.validateBoolean)(properties.sqsManagedSseEnabled));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(CfnQueueTagPropertyValidator))(properties.tags));
  errors.collect(cdk.propertyValidator("visibilityTimeout", cdk.validateNumber)(properties.visibilityTimeout));
  return errors.wrap("supplied properties not correct for \\"TagProperty\\"");
}

// @ts-ignore TS6133
function convertCfnQueueTagPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnQueueTagPropertyValidator(properties).assertSuccess();
  return {
    "ContentBasedDeduplication": cdk.booleanToCloudFormation(properties.contentBasedDeduplication),
    "DeduplicationScope": cdk.stringToCloudFormation(properties.deduplicationScope),
    "DelaySeconds": cdk.numberToCloudFormation(properties.delaySeconds),
    "FifoQueue": cdk.booleanToCloudFormation(properties.fifoQueue),
    "FifoThroughputLimit": cdk.stringToCloudFormation(properties.fifoThroughputLimit),
    "KmsDataKeyReusePeriodSeconds": cdk.numberToCloudFormation(properties.kmsDataKeyReusePeriodSeconds),
    "KmsMasterKeyId": cdk.stringToCloudFormation(properties.kmsMasterKeyId),
    "MaximumMessageSize": cdk.numberToCloudFormation(properties.maximumMessageSize),
    "MessageRetentionPeriod": cdk.numberToCloudFormation(properties.messageRetentionPeriod),
    "QueueName": cdk.stringToCloudFormation(properties.queueName),
    "ReceiveMessageWaitTimeSeconds": cdk.numberToCloudFormation(properties.receiveMessageWaitTimeSeconds),
    "RedriveAllowPolicy": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.redriveAllowPolicy),
    "RedrivePolicy": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.redrivePolicy),
    "SqsManagedSseEnabled": cdk.booleanToCloudFormation(properties.sqsManagedSseEnabled),
    "Tags": cdk.listMapper(convertCfnQueueTagPropertyToCloudFormation)(properties.tags),
    "VisibilityTimeout": cdk.numberToCloudFormation(properties.visibilityTimeout)
  };
}

// @ts-ignore TS6133
function CfnQueueTagPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnQueue.TagProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnQueue.TagProperty>();
  ret.addPropertyResult("contentBasedDeduplication", "ContentBasedDeduplication", (properties.ContentBasedDeduplication != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ContentBasedDeduplication) : undefined));
  ret.addPropertyResult("deduplicationScope", "DeduplicationScope", (properties.DeduplicationScope != null ? cfn_parse.FromCloudFormation.getString(properties.DeduplicationScope) : undefined));
  ret.addPropertyResult("delaySeconds", "DelaySeconds", (properties.DelaySeconds != null ? cfn_parse.FromCloudFormation.getNumber(properties.DelaySeconds) : undefined));
  ret.addPropertyResult("fifoQueue", "FifoQueue", (properties.FifoQueue != null ? cfn_parse.FromCloudFormation.getBoolean(properties.FifoQueue) : undefined));
  ret.addPropertyResult("fifoThroughputLimit", "FifoThroughputLimit", (properties.FifoThroughputLimit != null ? cfn_parse.FromCloudFormation.getString(properties.FifoThroughputLimit) : undefined));
  ret.addPropertyResult("kmsDataKeyReusePeriodSeconds", "KmsDataKeyReusePeriodSeconds", (properties.KmsDataKeyReusePeriodSeconds != null ? cfn_parse.FromCloudFormation.getNumber(properties.KmsDataKeyReusePeriodSeconds) : undefined));
  ret.addPropertyResult("kmsMasterKeyId", "KmsMasterKeyId", (properties.KmsMasterKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsMasterKeyId) : undefined));
  ret.addPropertyResult("maximumMessageSize", "MaximumMessageSize", (properties.MaximumMessageSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaximumMessageSize) : undefined));
  ret.addPropertyResult("messageRetentionPeriod", "MessageRetentionPeriod", (properties.MessageRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.MessageRetentionPeriod) : undefined));
  ret.addPropertyResult("queueName", "QueueName", (properties.QueueName != null ? cfn_parse.FromCloudFormation.getString(properties.QueueName) : undefined));
  ret.addPropertyResult("receiveMessageWaitTimeSeconds", "ReceiveMessageWaitTimeSeconds", (properties.ReceiveMessageWaitTimeSeconds != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReceiveMessageWaitTimeSeconds) : undefined));
  ret.addPropertyResult("redriveAllowPolicy", "RedriveAllowPolicy", (properties.RedriveAllowPolicy != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.RedriveAllowPolicy) : undefined));
  ret.addPropertyResult("redrivePolicy", "RedrivePolicy", (properties.RedrivePolicy != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.RedrivePolicy) : undefined));
  ret.addPropertyResult("sqsManagedSseEnabled", "SqsManagedSseEnabled", (properties.SqsManagedSseEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.SqsManagedSseEnabled) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnQueueTagPropertyFromCloudFormation)(properties.Tags) : undefined));
  ret.addPropertyResult("visibilityTimeout", "VisibilityTimeout", (properties.VisibilityTimeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.VisibilityTimeout) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`CfnQueueProps\`
 *
 * @param properties - the TypeScript properties of a \`CfnQueueProps\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnQueuePropsValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("contentBasedDeduplication", cdk.validateBoolean)(properties.contentBasedDeduplication));
  errors.collect(cdk.propertyValidator("deduplicationScope", cdk.validateString)(properties.deduplicationScope));
  errors.collect(cdk.propertyValidator("delaySeconds", cdk.validateNumber)(properties.delaySeconds));
  errors.collect(cdk.propertyValidator("fifoQueue", cdk.validateBoolean)(properties.fifoQueue));
  errors.collect(cdk.propertyValidator("fifoThroughputLimit", cdk.validateString)(properties.fifoThroughputLimit));
  errors.collect(cdk.propertyValidator("kmsDataKeyReusePeriodSeconds", cdk.validateNumber)(properties.kmsDataKeyReusePeriodSeconds));
  errors.collect(cdk.propertyValidator("kmsMasterKeyId", cdk.validateString)(properties.kmsMasterKeyId));
  errors.collect(cdk.propertyValidator("maximumMessageSize", cdk.validateNumber)(properties.maximumMessageSize));
  errors.collect(cdk.propertyValidator("messageRetentionPeriod", cdk.validateNumber)(properties.messageRetentionPeriod));
  errors.collect(cdk.propertyValidator("queueName", cdk.validateString)(properties.queueName));
  errors.collect(cdk.propertyValidator("receiveMessageWaitTimeSeconds", cdk.validateNumber)(properties.receiveMessageWaitTimeSeconds));
  errors.collect(cdk.propertyValidator("redriveAllowPolicy", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.redriveAllowPolicy));
  errors.collect(cdk.propertyValidator("redrivePolicy", cdk.unionValidator(cdk.validateObject, cdk.validateString))(properties.redrivePolicy));
  errors.collect(cdk.propertyValidator("sqsManagedSseEnabled", cdk.validateBoolean)(properties.sqsManagedSseEnabled));
  errors.collect(cdk.propertyValidator("tags", cdk.listValidator(cdk.validateCfnTag))(properties.tags));
  errors.collect(cdk.propertyValidator("visibilityTimeout", cdk.validateNumber)(properties.visibilityTimeout));
  return errors.wrap("supplied properties not correct for \\"CfnQueueProps\\"");
}

// @ts-ignore TS6133
function convertCfnQueuePropsToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnQueuePropsValidator(properties).assertSuccess();
  return {
    "ContentBasedDeduplication": cdk.booleanToCloudFormation(properties.contentBasedDeduplication),
    "DeduplicationScope": cdk.stringToCloudFormation(properties.deduplicationScope),
    "DelaySeconds": cdk.numberToCloudFormation(properties.delaySeconds),
    "FifoQueue": cdk.booleanToCloudFormation(properties.fifoQueue),
    "FifoThroughputLimit": cdk.stringToCloudFormation(properties.fifoThroughputLimit),
    "KmsDataKeyReusePeriodSeconds": cdk.numberToCloudFormation(properties.kmsDataKeyReusePeriodSeconds),
    "KmsMasterKeyId": cdk.stringToCloudFormation(properties.kmsMasterKeyId),
    "MaximumMessageSize": cdk.numberToCloudFormation(properties.maximumMessageSize),
    "MessageRetentionPeriod": cdk.numberToCloudFormation(properties.messageRetentionPeriod),
    "QueueName": cdk.stringToCloudFormation(properties.queueName),
    "ReceiveMessageWaitTimeSeconds": cdk.numberToCloudFormation(properties.receiveMessageWaitTimeSeconds),
    "RedriveAllowPolicy": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.redriveAllowPolicy),
    "RedrivePolicy": cdk.unionMapper([cdk.validateObject, cdk.validateString], [cdk.objectToCloudFormation, cdk.stringToCloudFormation])(properties.redrivePolicy),
    "SqsManagedSseEnabled": cdk.booleanToCloudFormation(properties.sqsManagedSseEnabled),
    "Tags": cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),
    "VisibilityTimeout": cdk.numberToCloudFormation(properties.visibilityTimeout)
  };
}

// @ts-ignore TS6133
function CfnQueuePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnQueueProps | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnQueueProps>();
  ret.addPropertyResult("contentBasedDeduplication", "ContentBasedDeduplication", (properties.ContentBasedDeduplication != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ContentBasedDeduplication) : undefined));
  ret.addPropertyResult("deduplicationScope", "DeduplicationScope", (properties.DeduplicationScope != null ? cfn_parse.FromCloudFormation.getString(properties.DeduplicationScope) : undefined));
  ret.addPropertyResult("delaySeconds", "DelaySeconds", (properties.DelaySeconds != null ? cfn_parse.FromCloudFormation.getNumber(properties.DelaySeconds) : undefined));
  ret.addPropertyResult("fifoQueue", "FifoQueue", (properties.FifoQueue != null ? cfn_parse.FromCloudFormation.getBoolean(properties.FifoQueue) : undefined));
  ret.addPropertyResult("fifoThroughputLimit", "FifoThroughputLimit", (properties.FifoThroughputLimit != null ? cfn_parse.FromCloudFormation.getString(properties.FifoThroughputLimit) : undefined));
  ret.addPropertyResult("kmsDataKeyReusePeriodSeconds", "KmsDataKeyReusePeriodSeconds", (properties.KmsDataKeyReusePeriodSeconds != null ? cfn_parse.FromCloudFormation.getNumber(properties.KmsDataKeyReusePeriodSeconds) : undefined));
  ret.addPropertyResult("kmsMasterKeyId", "KmsMasterKeyId", (properties.KmsMasterKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsMasterKeyId) : undefined));
  ret.addPropertyResult("maximumMessageSize", "MaximumMessageSize", (properties.MaximumMessageSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaximumMessageSize) : undefined));
  ret.addPropertyResult("messageRetentionPeriod", "MessageRetentionPeriod", (properties.MessageRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.MessageRetentionPeriod) : undefined));
  ret.addPropertyResult("queueName", "QueueName", (properties.QueueName != null ? cfn_parse.FromCloudFormation.getString(properties.QueueName) : undefined));
  ret.addPropertyResult("receiveMessageWaitTimeSeconds", "ReceiveMessageWaitTimeSeconds", (properties.ReceiveMessageWaitTimeSeconds != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReceiveMessageWaitTimeSeconds) : undefined));
  ret.addPropertyResult("redriveAllowPolicy", "RedriveAllowPolicy", (properties.RedriveAllowPolicy != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.RedriveAllowPolicy) : undefined));
  ret.addPropertyResult("redrivePolicy", "RedrivePolicy", (properties.RedrivePolicy != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateObject, cdk.validateString], [cfn_parse.FromCloudFormation.getAny, cfn_parse.FromCloudFormation.getString])(properties.RedrivePolicy) : undefined));
  ret.addPropertyResult("sqsManagedSseEnabled", "SqsManagedSseEnabled", (properties.SqsManagedSseEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.SqsManagedSseEnabled) : undefined));
  ret.addPropertyResult("tags", "Tags", (properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined));
  ret.addPropertyResult("visibilityTimeout", "VisibilityTimeout", (properties.VisibilityTimeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.VisibilityTimeout) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}",
}
`;

exports[`Alexa::ASK::Skill 1`] = `
{
  "augmentations": undefined,
  "metrics": undefined,
  "module": "/* eslint-disable prettier/prettier,max-len */
import * as cdk from "aws-cdk-lib";
import * as constructs from "constructs";
import * as cfn_parse from "aws-cdk-lib/core/lib/helpers-internal";

/**
 * The \`Alexa::ASK::Skill\` resource creates an Alexa skill that enables customers to access new abilities.
 *
 * For more information about developing a skill, see the  .
 *
 * @stability external
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html
 */
export class CfnSkill extends cdk.CfnResource implements cdk.IInspectable {
  /**
   * The CloudFormation resource type name for this resource class.
   */
  public static readonly CFN_RESOURCE_TYPE_NAME: string = "Alexa::ASK::Skill";

  /**
   * Build a CfnSkill from CloudFormation properties
   *
   * A factory method that creates a new instance of this class from an object
   * containing the CloudFormation properties of this resource.
   * Used in the @aws-cdk/cloudformation-include module.
   *
   * @internal
   */
  public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSkill {
    resourceAttributes = resourceAttributes || {};
    const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);
    const propsResult = CfnSkillPropsFromCloudFormation(resourceProperties);
    if (cdk.isResolvableObject(propsResult.value)) {
      throw new Error("Unexpected IResolvable");
    }
    const ret = new CfnSkill(scope, id, propsResult.value);
    for (const [propKey, propVal] of Object.entries(propsResult.extraProperties)) {
      ret.addPropertyOverride(propKey, propVal);
    }
    options.parser.handleAttributes(ret, resourceAttributes, id);
    return ret;
  }

  /**
   * @cloudformationAttribute Id
   */
  public readonly attrId: string;

  /**
   * Login with Amazon (LWA) configuration used to authenticate with the Alexa service.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-authenticationconfiguration
   */
  public authenticationConfiguration: CfnSkill.AuthenticationConfigurationProperty | cdk.IResolvable;

  /**
   * Configuration for the skill package that contains the components of the Alexa skill.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-skillpackage
   */
  public skillPackage: cdk.IResolvable | CfnSkill.SkillPackageProperty;

  /**
   * The vendor ID associated with the Amazon developer account that will host the skill.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-vendorid
   */
  public vendorId: string;

  /**
   * @param scope Scope in which this resource is defined
   * @param id Construct identifier for this resource (unique in its scope)
   * @param props Resource properties
   */
  public constructor(scope: constructs.Construct, id: string, props: CfnSkillProps) {
    super(scope, id, {
      "type": CfnSkill.CFN_RESOURCE_TYPE_NAME,
      "properties": props
    });

    cdk.requireProperty(props, "authenticationConfiguration", this);
    cdk.requireProperty(props, "skillPackage", this);
    cdk.requireProperty(props, "vendorId", this);

    this.attrId = cdk.Token.asString(this.getAtt("Id", cdk.ResolutionTypeHint.STRING));
    this.authenticationConfiguration = props.authenticationConfiguration;
    this.skillPackage = props.skillPackage;
    this.vendorId = props.vendorId;
  }

  protected get cfnProperties(): Record<string, any> {
    return {
      "authenticationConfiguration": this.authenticationConfiguration,
      "skillPackage": this.skillPackage,
      "vendorId": this.vendorId
    };
  }

  /**
   * Examines the CloudFormation resource and discloses attributes
   *
   * @param inspector tree inspector to collect and process attributes
   */
  public inspect(inspector: cdk.TreeInspector): void {
    inspector.addAttribute("aws:cdk:cloudformation:type", CfnSkill.CFN_RESOURCE_TYPE_NAME);
    inspector.addAttribute("aws:cdk:cloudformation:props", this.cfnProperties);
  }

  protected renderProperties(props: Record<string, any>): Record<string, any> {
    return convertCfnSkillPropsToCloudFormation(props);
  }
}

export namespace CfnSkill {
  /**
   * The \`AuthenticationConfiguration\` property type specifies the Login with Amazon (LWA) configuration used to authenticate with the Alexa service.
   *
   * Only Login with Amazon security profiles created through the  are supported for authentication. A client ID, client secret, and refresh token are required. You can generate a client ID and client secret by creating a new  on the Amazon Developer Portal or you can retrieve them from an existing profile. You can then retrieve the refresh token using the Alexa Skills Kit CLI. For instructions, see  in the  .
   *
   * \`AuthenticationConfiguration\` is a property of the \`Alexa::ASK::Skill\` resource.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-authenticationconfiguration.html
   */
  export interface AuthenticationConfigurationProperty {
    /**
     * Login with Amazon (LWA) configuration used to authenticate with the Alexa service.
     *
     * Only Login with Amazon clients created through the  are supported. The client ID, client secret, and refresh token are required.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-authenticationconfiguration.html#cfn-ask-skill-authenticationconfiguration-authenticationconfiguration
     */
    readonly authenticationConfiguration: CfnSkill.AuthenticationConfigurationProperty | cdk.IResolvable;

    /**
     * Configuration for the skill package that contains the components of the Alexa skill.
     *
     * Skill packages are retrieved from an Amazon S3 bucket and key and used to create and update the skill. For more information about the skill package format, see the  .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-authenticationconfiguration.html#cfn-ask-skill-authenticationconfiguration-skillpackage
     */
    readonly skillPackage: cdk.IResolvable | CfnSkill.SkillPackageProperty;

    /**
     * The vendor ID associated with the Amazon developer account that will host the skill.
     *
     * Details for retrieving the vendor ID are in  . The provided LWA credentials must be linked to the developer account associated with this vendor ID.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-authenticationconfiguration.html#cfn-ask-skill-authenticationconfiguration-vendorid
     */
    readonly vendorId: string;
  }

  /**
   * The \`SkillPackage\` property type contains configuration details for the skill package that contains the components of the Alexa skill.
   *
   * Skill packages are retrieved from an Amazon S3 bucket and key and used to create and update the skill. More details about the skill package format are located in the  .
   *
   * \`SkillPackage\` is a property of the \`Alexa::ASK::Skill\` resource.
   *
   * @struct
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-skillpackage.html
   */
  export interface SkillPackageProperty {
    /**
     * Login with Amazon (LWA) configuration used to authenticate with the Alexa service.
     *
     * Only Login with Amazon clients created through the  are supported. The client ID, client secret, and refresh token are required.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-skillpackage.html#cfn-ask-skill-skillpackage-authenticationconfiguration
     */
    readonly authenticationConfiguration: CfnSkill.AuthenticationConfigurationProperty | cdk.IResolvable;

    /**
     * Configuration for the skill package that contains the components of the Alexa skill.
     *
     * Skill packages are retrieved from an Amazon S3 bucket and key and used to create and update the skill. For more information about the skill package format, see the  .
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-skillpackage.html#cfn-ask-skill-skillpackage-skillpackage
     */
    readonly skillPackage: cdk.IResolvable | CfnSkill.SkillPackageProperty;

    /**
     * The vendor ID associated with the Amazon developer account that will host the skill.
     *
     * Details for retrieving the vendor ID are in  . The provided LWA credentials must be linked to the developer account associated with this vendor ID.
     *
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-skillpackage.html#cfn-ask-skill-skillpackage-vendorid
     */
    readonly vendorId: string;
  }
}

/**
 * Properties for defining a \`CfnSkill\`
 *
 * @struct
 * @stability external
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html
 */
export interface CfnSkillProps {
  /**
   * Login with Amazon (LWA) configuration used to authenticate with the Alexa service.
   *
   * Only Login with Amazon clients created through the  are supported. The client ID, client secret, and refresh token are required.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-authenticationconfiguration
   */
  readonly authenticationConfiguration: CfnSkill.AuthenticationConfigurationProperty | cdk.IResolvable;

  /**
   * Configuration for the skill package that contains the components of the Alexa skill.
   *
   * Skill packages are retrieved from an Amazon S3 bucket and key and used to create and update the skill. For more information about the skill package format, see the  .
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-skillpackage
   */
  readonly skillPackage: cdk.IResolvable | CfnSkill.SkillPackageProperty;

  /**
   * The vendor ID associated with the Amazon developer account that will host the skill.
   *
   * Details for retrieving the vendor ID are in  . The provided LWA credentials must be linked to the developer account associated with this vendor ID.
   *
   * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-vendorid
   */
  readonly vendorId: string;
}

/**
 * Determine whether the given properties match those of a \`SkillPackageProperty\`
 *
 * @param properties - the TypeScript properties of a \`SkillPackageProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnSkillSkillPackagePropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("authenticationConfiguration", cdk.requiredValidator)(properties.authenticationConfiguration));
  errors.collect(cdk.propertyValidator("authenticationConfiguration", CfnSkillAuthenticationConfigurationPropertyValidator)(properties.authenticationConfiguration));
  errors.collect(cdk.propertyValidator("skillPackage", cdk.requiredValidator)(properties.skillPackage));
  errors.collect(cdk.propertyValidator("skillPackage", CfnSkillSkillPackagePropertyValidator)(properties.skillPackage));
  errors.collect(cdk.propertyValidator("vendorId", cdk.requiredValidator)(properties.vendorId));
  errors.collect(cdk.propertyValidator("vendorId", cdk.validateString)(properties.vendorId));
  return errors.wrap("supplied properties not correct for \\"SkillPackageProperty\\"");
}

// @ts-ignore TS6133
function convertCfnSkillSkillPackagePropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnSkillSkillPackagePropertyValidator(properties).assertSuccess();
  return {
    "AuthenticationConfiguration": convertCfnSkillAuthenticationConfigurationPropertyToCloudFormation(properties.authenticationConfiguration),
    "SkillPackage": convertCfnSkillSkillPackagePropertyToCloudFormation(properties.skillPackage),
    "VendorId": cdk.stringToCloudFormation(properties.vendorId)
  };
}

// @ts-ignore TS6133
function CfnSkillSkillPackagePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<cdk.IResolvable | CfnSkill.SkillPackageProperty> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSkill.SkillPackageProperty>();
  ret.addPropertyResult("authenticationConfiguration", "AuthenticationConfiguration", (properties.AuthenticationConfiguration != null ? CfnSkillAuthenticationConfigurationPropertyFromCloudFormation(properties.AuthenticationConfiguration) : undefined));
  ret.addPropertyResult("skillPackage", "SkillPackage", (properties.SkillPackage != null ? CfnSkillSkillPackagePropertyFromCloudFormation(properties.SkillPackage) : undefined));
  ret.addPropertyResult("vendorId", "VendorId", (properties.VendorId != null ? cfn_parse.FromCloudFormation.getString(properties.VendorId) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`AuthenticationConfigurationProperty\`
 *
 * @param properties - the TypeScript properties of a \`AuthenticationConfigurationProperty\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnSkillAuthenticationConfigurationPropertyValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("authenticationConfiguration", cdk.requiredValidator)(properties.authenticationConfiguration));
  errors.collect(cdk.propertyValidator("authenticationConfiguration", CfnSkillAuthenticationConfigurationPropertyValidator)(properties.authenticationConfiguration));
  errors.collect(cdk.propertyValidator("skillPackage", cdk.requiredValidator)(properties.skillPackage));
  errors.collect(cdk.propertyValidator("skillPackage", CfnSkillSkillPackagePropertyValidator)(properties.skillPackage));
  errors.collect(cdk.propertyValidator("vendorId", cdk.requiredValidator)(properties.vendorId));
  errors.collect(cdk.propertyValidator("vendorId", cdk.validateString)(properties.vendorId));
  return errors.wrap("supplied properties not correct for \\"AuthenticationConfigurationProperty\\"");
}

// @ts-ignore TS6133
function convertCfnSkillAuthenticationConfigurationPropertyToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnSkillAuthenticationConfigurationPropertyValidator(properties).assertSuccess();
  return {
    "AuthenticationConfiguration": convertCfnSkillAuthenticationConfigurationPropertyToCloudFormation(properties.authenticationConfiguration),
    "SkillPackage": convertCfnSkillSkillPackagePropertyToCloudFormation(properties.skillPackage),
    "VendorId": cdk.stringToCloudFormation(properties.vendorId)
  };
}

// @ts-ignore TS6133
function CfnSkillAuthenticationConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSkill.AuthenticationConfigurationProperty | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSkill.AuthenticationConfigurationProperty>();
  ret.addPropertyResult("authenticationConfiguration", "AuthenticationConfiguration", (properties.AuthenticationConfiguration != null ? CfnSkillAuthenticationConfigurationPropertyFromCloudFormation(properties.AuthenticationConfiguration) : undefined));
  ret.addPropertyResult("skillPackage", "SkillPackage", (properties.SkillPackage != null ? CfnSkillSkillPackagePropertyFromCloudFormation(properties.SkillPackage) : undefined));
  ret.addPropertyResult("vendorId", "VendorId", (properties.VendorId != null ? cfn_parse.FromCloudFormation.getString(properties.VendorId) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}

/**
 * Determine whether the given properties match those of a \`CfnSkillProps\`
 *
 * @param properties - the TypeScript properties of a \`CfnSkillProps\`
 *
 * @returns the result of the validation.
 */
// @ts-ignore TS6133
function CfnSkillPropsValidator(properties: any): cdk.ValidationResult {
  if (!cdk.canInspect(properties)) return cdk.VALIDATION_SUCCESS;
  const errors = new cdk.ValidationResults();
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    errors.collect(new cdk.ValidationResult("Expected an object, but received: " + JSON.stringify(properties)));
  }
  errors.collect(cdk.propertyValidator("authenticationConfiguration", cdk.requiredValidator)(properties.authenticationConfiguration));
  errors.collect(cdk.propertyValidator("authenticationConfiguration", CfnSkillAuthenticationConfigurationPropertyValidator)(properties.authenticationConfiguration));
  errors.collect(cdk.propertyValidator("skillPackage", cdk.requiredValidator)(properties.skillPackage));
  errors.collect(cdk.propertyValidator("skillPackage", CfnSkillSkillPackagePropertyValidator)(properties.skillPackage));
  errors.collect(cdk.propertyValidator("vendorId", cdk.requiredValidator)(properties.vendorId));
  errors.collect(cdk.propertyValidator("vendorId", cdk.validateString)(properties.vendorId));
  return errors.wrap("supplied properties not correct for \\"CfnSkillProps\\"");
}

// @ts-ignore TS6133
function convertCfnSkillPropsToCloudFormation(properties: any): any {
  if (!cdk.canInspect(properties)) return properties;
  CfnSkillPropsValidator(properties).assertSuccess();
  return {
    "AuthenticationConfiguration": convertCfnSkillAuthenticationConfigurationPropertyToCloudFormation(properties.authenticationConfiguration),
    "SkillPackage": convertCfnSkillSkillPackagePropertyToCloudFormation(properties.skillPackage),
    "VendorId": cdk.stringToCloudFormation(properties.vendorId)
  };
}

// @ts-ignore TS6133
function CfnSkillPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSkillProps | cdk.IResolvable> {
  if (cdk.isResolvableObject(properties)) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  properties = ((properties == null) ? {} : properties);
  if (!(properties && typeof properties == 'object' && !Array.isArray(properties))) {
    return new cfn_parse.FromCloudFormationResult(properties);
  }
  const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSkillProps>();
  ret.addPropertyResult("authenticationConfiguration", "AuthenticationConfiguration", (properties.AuthenticationConfiguration != null ? CfnSkillAuthenticationConfigurationPropertyFromCloudFormation(properties.AuthenticationConfiguration) : undefined));
  ret.addPropertyResult("skillPackage", "SkillPackage", (properties.SkillPackage != null ? CfnSkillSkillPackagePropertyFromCloudFormation(properties.SkillPackage) : undefined));
  ret.addPropertyResult("vendorId", "VendorId", (properties.VendorId != null ? cfn_parse.FromCloudFormation.getString(properties.VendorId) : undefined));
  ret.addUnrecognizedPropertiesAsExtra(properties);
  return ret;
}",
}
`;

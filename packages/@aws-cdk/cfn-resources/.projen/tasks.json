{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "check-for-updates": {
      "name": "check-for-updates",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "npm-check-updates --dep dev --upgrade --target=minor --reject='@cdklabs/typewriter,@aws-cdk/service-spec-build,@aws-cdk/service-spec-sources,@cdklabs/tskb'"
        },
        {
          "exec": "npm-check-updates --dep optional --upgrade --target=minor --reject='@cdklabs/typewriter,@aws-cdk/service-spec-build,@aws-cdk/service-spec-sources,@cdklabs/tskb'"
        },
        {
          "exec": "npm-check-updates --dep peer --upgrade --target=minor --reject='@cdklabs/typewriter,@aws-cdk/service-spec-build,@aws-cdk/service-spec-sources,@cdklabs/tskb'"
        },
        {
          "exec": "npm-check-updates --dep prod --upgrade --target=minor --reject='@cdklabs/typewriter,@aws-cdk/service-spec-build,@aws-cdk/service-spec-sources,@cdklabs/tskb'"
        },
        {
          "exec": "npm-check-updates --dep bundle --upgrade --target=minor --reject='@cdklabs/typewriter,@aws-cdk/service-spec-build,@aws-cdk/service-spec-sources,@cdklabs/tskb'"
        }
      ]
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "exec": "tsc --build"
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "(cd `git rev-parse --show-toplevel`; npx projen default)"
        }
      ]
    },
    "eslint": {
      "name": "eslint",
      "description": "Runs eslint against the codebase",
      "steps": [
        {
          "exec": "eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test build-tools .projenrc.js"
        }
      ]
    },
    "generate": {
      "name": "generate",
      "steps": [
        {
          "exec": "ts-node --project tsconfig.dev.json src/cli/main.ts",
          "receiveArgs": true
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package",
      "steps": [
        {
          "exec": "mkdir -p dist/js"
        },
        {
          "exec": "mv $(npm pack) dist/js/"
        }
      ]
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation"
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation",
      "steps": [
        {
          "spawn": "generate"
        }
      ]
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "jest --passWithNoTests --updateSnapshot",
          "receiveArgs": true
        },
        {
          "spawn": "eslint"
        }
      ]
    },
    "test:watch": {
      "name": "test:watch",
      "description": "Run jest in watch mode",
      "steps": [
        {
          "exec": "jest --watch"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc --build -w"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(npx -c \"node -e \\\"console.log(process.env.PATH)\\\"\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
